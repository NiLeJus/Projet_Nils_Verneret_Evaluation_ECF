{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\nilsv\\\\Documents\\\\2_TRAVAIL\\\\WEB_DEV\\\\EVAL_ECF\\\\projet\\\\website\\\\src\\\\components\\\\general\\\\FooterSchedule.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { scheduleGetWeek } from \"../../serverRelated/ApiRequest\";\nimport { Row, Col } from \"react-bootstrap\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst getCurrentDate = () => {\n  const now = new Date();\n  // Cette fonction doit idéalement retourner le numéro de la semaine actuelle et l'année.\n  return {\n    year: now.getFullYear(),\n    // La logique pour obtenir le numéro de la semaine doit être ici. Utilisez un placeholder pour l'exemple.\n    weekNumber: now.getDate() - now.getDay() + (now.getDay() === 0 ? -6 : 1) // Calcul simplifié pour l'exemple\n  };\n};\n\nexport const FooterSchedule = () => {\n  _s();\n  const [schedule, setSchedule] = useState([]);\n  useEffect(() => {\n    const fetchData = async () => {\n      const currentDate = getCurrentDate();\n      try {\n        const year = currentDate.year;\n        const weekNumber = currentDate.weekNumber; // Utilisez le numéro de semaine pour récupérer les données\n\n        const response = await scheduleGetWeek(year, weekNumber, 1);\n        console.log(\"fetched schedule get week\", response);\n        const weekData = response[weekNumber];\n        if (weekData) {\n          const transformedWeekData = weekData.map(day => {\n            const transformTime = time => time && time.length > 5 ? time.slice(0, -3) : time;\n            return {\n              ...day,\n              morningOpening: transformTime(day.morningOpening),\n              morningClosing: transformTime(day.morningClosing),\n              afternoonOpening: transformTime(day.afternoonOpening),\n              afternoonClosing: transformTime(day.afternoonClosing)\n            };\n          });\n          setSchedule(transformedWeekData);\n        } else {\n          setSchedule([]);\n        }\n      } catch (error) {\n        console.error(\"Erreur lors de la récupération des horaires:\", error);\n      }\n    };\n    fetchData();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: schedule.length > 0 ? /*#__PURE__*/_jsxDEV(Row, {\n      children: schedule.map((day, index) => /*#__PURE__*/_jsxDEV(Col, {\n        children: [/*#__PURE__*/_jsxDEV(\"li\", {\n          children: [\"Matin : \", day.morningOpening, \" - \", day.morningClosing]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n          children: [\"Apr\\xE8s-midi : \", day.afternoonOpening, \" - \", day.afternoonClosing]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 17\n        }, this)]\n      }, index, true, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 15\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 11\n    }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Aucun horaire disponible\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 11\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 54,\n    columnNumber: 7\n  }, this);\n};\n_s(FooterSchedule, \"ufj6drX7OuS1FJ8vycY2bacy/To=\");\n_c = FooterSchedule;\nexport default FooterSchedule;\nvar _c;\n$RefreshReg$(_c, \"FooterSchedule\");","map":{"version":3,"names":["React","useEffect","useState","scheduleGetWeek","Row","Col","jsxDEV","_jsxDEV","getCurrentDate","now","Date","year","getFullYear","weekNumber","getDate","getDay","FooterSchedule","_s","schedule","setSchedule","fetchData","currentDate","response","console","log","weekData","transformedWeekData","map","day","transformTime","time","length","slice","morningOpening","morningClosing","afternoonOpening","afternoonClosing","error","children","index","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/nilsv/Documents/2_TRAVAIL/WEB_DEV/EVAL_ECF/projet/website/src/components/general/FooterSchedule.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport { scheduleGetWeek } from \"../../serverRelated/ApiRequest\";\r\nimport { Row, Col } from \"react-bootstrap\";\r\n\r\nconst getCurrentDate = () => {\r\n  const now = new Date();\r\n  // Cette fonction doit idéalement retourner le numéro de la semaine actuelle et l'année.\r\n  return {\r\n    year: now.getFullYear(),\r\n    // La logique pour obtenir le numéro de la semaine doit être ici. Utilisez un placeholder pour l'exemple.\r\n    weekNumber: now.getDate() - now.getDay() + (now.getDay() === 0 ? -6 : 1), // Calcul simplifié pour l'exemple\r\n\r\n  };\r\n};\r\n\r\nexport const FooterSchedule = () => {\r\n    const [schedule, setSchedule] = useState([]);\r\n  \r\n    useEffect(() => {\r\n      const fetchData = async () => {\r\n        const currentDate = getCurrentDate();\r\n        try {\r\n          const year = currentDate.year;\r\n          const weekNumber = currentDate.weekNumber; // Utilisez le numéro de semaine pour récupérer les données\r\n  \r\n          const response = await scheduleGetWeek(year, weekNumber, 1);\r\n          console.log(\"fetched schedule get week\", response);\r\n  \r\n          const weekData = response[weekNumber];\r\n          if (weekData) {\r\n            const transformedWeekData = weekData.map(day => {\r\n              const transformTime = time => time && time.length > 5 ? time.slice(0, -3) : time;\r\n              return {\r\n                ...day,\r\n                morningOpening: transformTime(day.morningOpening),\r\n                morningClosing: transformTime(day.morningClosing),\r\n                afternoonOpening: transformTime(day.afternoonOpening),\r\n                afternoonClosing: transformTime(day.afternoonClosing),\r\n              };\r\n            });\r\n            setSchedule(transformedWeekData);\r\n          } else {\r\n            setSchedule([]);\r\n          }\r\n        } catch (error) {\r\n          console.error(\"Erreur lors de la récupération des horaires:\", error);\r\n        }\r\n      };\r\n  \r\n      fetchData();\r\n    }, []);\r\n  \r\n    return (\r\n      <div>\r\n        {schedule.length > 0 ? (\r\n          <Row>\r\n            {schedule.map((day, index) => (\r\n              <Col key={index}>\r\n                <li>Matin : {day.morningOpening} - {day.morningClosing}</li>\r\n                <li>Après-midi : {day.afternoonOpening} - {day.afternoonClosing}</li>\r\n              </Col>\r\n            ))}\r\n          </Row>\r\n        ) : (\r\n          <p>Aucun horaire disponible</p>\r\n        )}\r\n      </div>\r\n    );\r\n  };\r\n  \r\n  export default FooterSchedule;\r\n  "],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}