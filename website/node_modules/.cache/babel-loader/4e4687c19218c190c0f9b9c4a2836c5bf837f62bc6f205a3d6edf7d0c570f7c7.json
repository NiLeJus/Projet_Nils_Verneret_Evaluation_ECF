{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\nilsv\\\\Documents\\\\2_TRAVAIL\\\\WEB_DEV\\\\EVAL_ECF\\\\projet\\\\website\\\\src\\\\components\\\\VehicleFilters.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { Accordion, Card, useAccordionButton } from 'react-bootstrap';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction CustomToggle({\n  children,\n  eventKey\n}) {\n  _s();\n  const decoratedOnClick = useAccordionButton(eventKey);\n  return /*#__PURE__*/_jsxDEV(Card.Header, {\n    onClick: decoratedOnClick,\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 8,\n    columnNumber: 5\n  }, this);\n}\n_s(CustomToggle, \"W60grZeeiqyb/tF6UzcIogMlV4I=\", false, function () {\n  return [useAccordionButton];\n});\n_c = CustomToggle;\nconst Vehicle = () => {\n  _s2();\n  const [openKeys, setOpenKeys] = useState([]);\n  const toggleAccordionItem = key => {\n    if (openKeys.includes(key)) {\n      setOpenKeys(openKeys.filter(openKey => openKey !== key));\n    } else {\n      setOpenKeys([...openKeys, key]);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(Accordion, {\n    defaultActiveKey: \"0\",\n    children: [...Array(3).keys()].map(key => /*#__PURE__*/_jsxDEV(Card, {\n      children: [/*#__PURE__*/_jsxDEV(CustomToggle, {\n        eventKey: key.toString(),\n        onClick: () => toggleAccordionItem(key.toString()),\n        children: \"Click me!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Accordion.Collapse, {\n        eventKey: key.toString(),\n        in: openKeys.includes(key.toString()),\n        children: /*#__PURE__*/_jsxDEV(Card.Body, {\n          children: \"Hello! I'm the body\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 11\n      }, this)]\n    }, key, true, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 9\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 26,\n    columnNumber: 5\n  }, this);\n};\n_s2(Vehicle, \"z6IZ+yMATnXan0WSt0yyS9NtWdw=\");\n_c2 = Vehicle;\nexport default MyAccordion;\nvar _c, _c2;\n$RefreshReg$(_c, \"CustomToggle\");\n$RefreshReg$(_c2, \"Vehicle\");","map":{"version":3,"names":["React","useState","Accordion","Card","useAccordionButton","jsxDEV","_jsxDEV","CustomToggle","children","eventKey","_s","decoratedOnClick","Header","onClick","fileName","_jsxFileName","lineNumber","columnNumber","_c","Vehicle","_s2","openKeys","setOpenKeys","toggleAccordionItem","key","includes","filter","openKey","defaultActiveKey","Array","keys","map","toString","Collapse","in","Body","_c2","MyAccordion","$RefreshReg$"],"sources":["C:/Users/nilsv/Documents/2_TRAVAIL/WEB_DEV/EVAL_ECF/projet/website/src/components/VehicleFilters.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport { Accordion, Card, useAccordionButton } from 'react-bootstrap';\r\n\r\nfunction CustomToggle({ children, eventKey }) {\r\n  const decoratedOnClick = useAccordionButton(eventKey);\r\n\r\n  return (\r\n    <Card.Header onClick={decoratedOnClick}>\r\n      {children}\r\n    </Card.Header>\r\n  );\r\n}\r\n\r\nconst Vehicle = () => {\r\n  const [openKeys, setOpenKeys] = useState([]);\r\n\r\n  const toggleAccordionItem = (key) => {\r\n    if (openKeys.includes(key)) {\r\n      setOpenKeys(openKeys.filter(openKey => openKey !== key));\r\n    } else {\r\n      setOpenKeys([...openKeys, key]);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Accordion defaultActiveKey=\"0\">\r\n      {[...Array(3).keys()].map(key => (\r\n        <Card key={key}>\r\n          <CustomToggle eventKey={key.toString()} onClick={() => toggleAccordionItem(key.toString())}>\r\n            Click me!\r\n          </CustomToggle>\r\n          <Accordion.Collapse eventKey={key.toString()} in={openKeys.includes(key.toString())}>\r\n            <Card.Body>\r\n              Hello! I'm the body\r\n            </Card.Body>\r\n          </Accordion.Collapse>\r\n        </Card>\r\n      ))}\r\n    </Accordion>\r\n  );\r\n};\r\n\r\nexport default MyAccordion;\r\n"],"mappings":";;;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,SAASC,SAAS,EAAEC,IAAI,EAAEC,kBAAkB,QAAQ,iBAAiB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEtE,SAASC,YAAYA,CAAC;EAAEC,QAAQ;EAAEC;AAAS,CAAC,EAAE;EAAAC,EAAA;EAC5C,MAAMC,gBAAgB,GAAGP,kBAAkB,CAACK,QAAQ,CAAC;EAErD,oBACEH,OAAA,CAACH,IAAI,CAACS,MAAM;IAACC,OAAO,EAAEF,gBAAiB;IAAAH,QAAA,EACpCA;EAAQ;IAAAM,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACE,CAAC;AAElB;AAACP,EAAA,CARQH,YAAY;EAAA,QACMH,kBAAkB;AAAA;AAAAc,EAAA,GADpCX,YAAY;AAUrB,MAAMY,OAAO,GAAGA,CAAA,KAAM;EAAAC,GAAA;EACpB,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGrB,QAAQ,CAAC,EAAE,CAAC;EAE5C,MAAMsB,mBAAmB,GAAIC,GAAG,IAAK;IACnC,IAAIH,QAAQ,CAACI,QAAQ,CAACD,GAAG,CAAC,EAAE;MAC1BF,WAAW,CAACD,QAAQ,CAACK,MAAM,CAACC,OAAO,IAAIA,OAAO,KAAKH,GAAG,CAAC,CAAC;IAC1D,CAAC,MAAM;MACLF,WAAW,CAAC,CAAC,GAAGD,QAAQ,EAAEG,GAAG,CAAC,CAAC;IACjC;EACF,CAAC;EAED,oBACElB,OAAA,CAACJ,SAAS;IAAC0B,gBAAgB,EAAC,GAAG;IAAApB,QAAA,EAC5B,CAAC,GAAGqB,KAAK,CAAC,CAAC,CAAC,CAACC,IAAI,CAAC,CAAC,CAAC,CAACC,GAAG,CAACP,GAAG,iBAC3BlB,OAAA,CAACH,IAAI;MAAAK,QAAA,gBACHF,OAAA,CAACC,YAAY;QAACE,QAAQ,EAAEe,GAAG,CAACQ,QAAQ,CAAC,CAAE;QAACnB,OAAO,EAAEA,CAAA,KAAMU,mBAAmB,CAACC,GAAG,CAACQ,QAAQ,CAAC,CAAC,CAAE;QAAAxB,QAAA,EAAC;MAE5F;QAAAM,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAc,CAAC,eACfX,OAAA,CAACJ,SAAS,CAAC+B,QAAQ;QAACxB,QAAQ,EAAEe,GAAG,CAACQ,QAAQ,CAAC,CAAE;QAACE,EAAE,EAAEb,QAAQ,CAACI,QAAQ,CAACD,GAAG,CAACQ,QAAQ,CAAC,CAAC,CAAE;QAAAxB,QAAA,eAClFF,OAAA,CAACH,IAAI,CAACgC,IAAI;UAAA3B,QAAA,EAAC;QAEX;UAAAM,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAW;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACM,CAAC;IAAA,GARZO,GAAG;MAAAV,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OASR,CACP;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACO,CAAC;AAEhB,CAAC;AAACG,GAAA,CA3BID,OAAO;AAAAiB,GAAA,GAAPjB,OAAO;AA6Bb,eAAekB,WAAW;AAAC,IAAAnB,EAAA,EAAAkB,GAAA;AAAAE,YAAA,CAAApB,EAAA;AAAAoB,YAAA,CAAAF,GAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}