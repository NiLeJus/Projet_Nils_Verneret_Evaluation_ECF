{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\nilsv\\\\Documents\\\\2_TRAVAIL\\\\WEB_DEV\\\\EVAL_ECF\\\\projet\\\\website\\\\src\\\\components\\\\admin\\\\management\\\\ServiceManagement.js\",\n  _s = $RefreshSig$();\nimport Table from \"react-bootstrap/Table\";\nimport Button from \"react-bootstrap/Button\";\nimport { useState, useEffect } from 'react';\nimport { fetchServices, modifyService, deleteService } from \"../../../serverRelated/ApiRequest\";\nimport { Form } from \"react-bootstrap\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport const ServiceManagement = () => {\n  _s();\n  const [services, setServices] = useState([]);\n  const [addingNewService, setAddingNewService] = useState(false);\n  useEffect(() => {\n    const getServices = async () => {\n      const data = await fetchServices();\n      setServices(data);\n    };\n    getServices();\n  }, []);\n  const handlePrepAddNewService = () => {\n    setAddingNewService(true);\n    setServices([{\n      id: null,\n      name: '',\n      description: '',\n      min_price: ''\n    }, ...services]);\n  };\n  const handleModifyService = async id => {\n    const serviceToModify = services.find(service => service.id === id);\n    if (serviceToModify) {\n      const updatedService = await modifyService(id, serviceToModify);\n      setServices(services.map(service => service.id === id ? updatedService : service));\n    }\n  };\n  const handleAddNewService = async () => {};\n  const handleDeleteService = async id => {\n    await deleteService(id);\n    setServices(services.filter(service => service.id !== id));\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"bg-dark\",\n      children: /*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"ServiceManagement\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      onClick: handlePrepAddNewService,\n      children: \"Ajouter un nouveau service\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Table, {\n      striped: true,\n      bordered: true,\n      hover: true,\n      children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n        children: /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Nom\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 53,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Description\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 54,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Prix minimum\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 55,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Actions\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 56,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n        children: services.map((service, index) => /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"td\", {\n            children: /*#__PURE__*/_jsxDEV(Form.Control, {\n              defaultValue: service.name,\n              type: \"text\",\n              onChange: e => service.name = e.target.value\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 63,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 62,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: /*#__PURE__*/_jsxDEV(Form.Control, {\n              defaultValue: service.description,\n              type: \"text\",\n              onChange: e => service.description = e.target.value\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 70,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 69,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: /*#__PURE__*/_jsxDEV(Form.Control, {\n              defaultValue: service.min_price,\n              type: \"number\",\n              min: \"0\",\n              onChange: e => service.min_price = e.target.value\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 77,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 76,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: service.id ? /*#__PURE__*/_jsxDEV(_Fragment, {\n              children: [/*#__PURE__*/_jsxDEV(Button, {\n                onClick: () => handleModifyService(service.id),\n                children: \"Appliquer les modifications\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 87,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(Button, {\n                variant: \"danger\",\n                onClick: () => handleDeleteService(service.id),\n                children: \"Supprimer\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 90,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true) : /*#__PURE__*/_jsxDEV(Button, {\n              variant: \"success\",\n              onClick: () => handleAddNewService(),\n              children: \"Cr\\xE9er nouveau service\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 95,\n              columnNumber: 19\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 84,\n            columnNumber: 15\n          }, this)]\n        }, index, true, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n_s(ServiceManagement, \"Isi6D344tOaM3JGsxWxiHeNdH3E=\");\n_c = ServiceManagement;\nexport default ServiceManagement;\nvar _c;\n$RefreshReg$(_c, \"ServiceManagement\");","map":{"version":3,"names":["Table","Button","useState","useEffect","fetchServices","modifyService","deleteService","Form","jsxDEV","_jsxDEV","Fragment","_Fragment","ServiceManagement","_s","services","setServices","addingNewService","setAddingNewService","getServices","data","handlePrepAddNewService","id","name","description","min_price","handleModifyService","serviceToModify","find","service","updatedService","map","handleAddNewService","handleDeleteService","filter","children","className","fileName","_jsxFileName","lineNumber","columnNumber","onClick","striped","bordered","hover","index","Control","defaultValue","type","onChange","e","target","value","min","variant","_c","$RefreshReg$"],"sources":["C:/Users/nilsv/Documents/2_TRAVAIL/WEB_DEV/EVAL_ECF/projet/website/src/components/admin/management/ServiceManagement.js"],"sourcesContent":["\r\nimport Table from \"react-bootstrap/Table\";\r\nimport Button from \"react-bootstrap/Button\";\r\nimport { useState, useEffect } from 'react';\r\nimport { fetchServices, modifyService, deleteService } from \"../../../serverRelated/ApiRequest\";\r\nimport { Form } from \"react-bootstrap\";\r\n\r\nexport const ServiceManagement = () => {\r\n    const [services, setServices] = useState([]);\r\n    const [addingNewService, setAddingNewService] = useState(false);\r\n\r\n    useEffect(() => {\r\n        const getServices = async () => {\r\n            const data = await fetchServices();\r\n            setServices(data);\r\n        };\r\n        getServices();\r\n    }, []);\r\n\r\n    const handlePrepAddNewService = () => {\r\n        setAddingNewService(true);\r\n        setServices([{ id: null, name: '', description: '', min_price: '' }, ...services]);\r\n    };\r\n\r\n  const handleModifyService = async (id) => {\r\n    const serviceToModify = services.find((service) => service.id === id);\r\n    if (serviceToModify) {\r\n      const updatedService = await modifyService(id, serviceToModify);\r\n      setServices(services.map((service) => (service.id === id ? updatedService : service)));\r\n    }\r\n  };\r\n\r\n  const handleAddNewService = async () => {}\r\n\r\n  const handleDeleteService = async (id) => {\r\n    await deleteService(id);\r\n    setServices(services.filter((service) => service.id !== id));\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <div className=\"bg-dark\">\r\n        <h1>ServiceManagement</h1>\r\n      </div>\r\n\r\n      <Button onClick={handlePrepAddNewService }>\r\n        Ajouter un nouveau service\r\n      </Button>\r\n\r\n      <Table striped bordered hover>\r\n        <thead>\r\n          <tr>\r\n            <th>Nom</th>\r\n            <th>Description</th>\r\n            <th>Prix minimum</th>\r\n            <th>Actions</th>\r\n          </tr>\r\n        </thead>\r\n        <tbody>\r\n          {services.map((service, index) => (\r\n            <tr key={index}>\r\n              <td>\r\n                <Form.Control\r\n                  defaultValue={service.name}\r\n                  type=\"text\"\r\n                  onChange={(e) => (service.name = e.target.value)}\r\n                />\r\n              </td>\r\n              <td>\r\n                <Form.Control\r\n                  defaultValue={service.description}\r\n                  type=\"text\"\r\n                  onChange={(e) => (service.description = e.target.value)}\r\n                />\r\n              </td>\r\n              <td>\r\n                <Form.Control\r\n                  defaultValue={service.min_price}\r\n                  type=\"number\"\r\n                  min=\"0\"\r\n                  onChange={(e) => (service.min_price = e.target.value)}\r\n                />\r\n              </td>\r\n              <td>\r\n                {service.id ? (\r\n                  <>\r\n                    <Button onClick={() => handleModifyService(service.id)}>\r\n                      Appliquer les modifications\r\n                    </Button>\r\n                    <Button variant=\"danger\" onClick={() => handleDeleteService(service.id)}>\r\n                      Supprimer\r\n                    </Button>\r\n                  </>\r\n                ) : (\r\n                  <Button variant=\"success\" onClick={() => handleAddNewService()}>\r\n                    Créer nouveau service\r\n                  </Button>\r\n                )}\r\n              </td>\r\n            </tr>\r\n          ))}\r\n        </tbody>\r\n      </Table>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default ServiceManagement;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}