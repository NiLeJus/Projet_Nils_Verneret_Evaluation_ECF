{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\nilsv\\\\Documents\\\\2_TRAVAIL\\\\WEB_DEV\\\\EVAL_ECF\\\\projet\\\\website\\\\src\\\\components\\\\vehicleRelated\\\\vehicleForm\\\\keyInfosForm\\\\ColorForm.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport { Button, Form } from \"react-bootstrap\";\nimport Select from \"react-select\";\nimport { capitalizeFirstLetter } from \"../../../../functions/capitalizeFirstLetter\";\n\n// Renommez cette variable pour éviter les conflits\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nlet initialColors = [\n  // { value: \"id\", label: \"Color name\" },\n];\nexport const ColorForm = () => {\n  _s();\n  const [selectedColor, setSelectedColor] = useState(null);\n  const [colors, setColors] = useState(initialColors); // Utilisez le nom renommé ici\n\n  useEffect(() => {\n    const fetchColors = async () => {\n      try {\n        const response = await fetch(\"http://localhost:5001/api/colors\");\n        const data = await response.json();\n        const transformedColors = data.map(color => ({\n          value: color.id.toString(),\n          label: capitalizeFirstLetter(color.name)\n        }));\n        setColors(transformedColors); // Modifiez pour remplacer complètement les marques\n      } catch (error) {\n        console.error(\"Error fetching options:\", error);\n      }\n    };\n    fetchColors();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n      children: /*#__PURE__*/_jsxDEV(\"h3\", {\n        className: \"key-info-title\",\n        children: \"Types :\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Select, {\n      value: selectedColor,\n      onChange: setSelectedColor,\n      options: colors,\n      isSearchable: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n_s(ColorForm, \"4mUJlv5Mk3nGNrQ4S2e+M0JpwWA=\");\n_c = ColorForm;\nexport default ColorForm;\nvar _c;\n$RefreshReg$(_c, \"ColorForm\");","map":{"version":3,"names":["React","useState","useEffect","Button","Form","Select","capitalizeFirstLetter","jsxDEV","_jsxDEV","Fragment","_Fragment","initialColors","ColorForm","_s","selectedColor","setSelectedColor","colors","setColors","fetchColors","response","fetch","data","json","transformedColors","map","color","value","id","toString","label","name","error","console","children","Label","className","fileName","_jsxFileName","lineNumber","columnNumber","onChange","options","isSearchable","_c","$RefreshReg$"],"sources":["C:/Users/nilsv/Documents/2_TRAVAIL/WEB_DEV/EVAL_ECF/projet/website/src/components/vehicleRelated/vehicleForm/keyInfosForm/ColorForm.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport { Button, Form } from \"react-bootstrap\";\r\nimport Select from \"react-select\";\r\nimport { capitalizeFirstLetter } from \"../../../../functions/capitalizeFirstLetter\";\r\n\r\n// Renommez cette variable pour éviter les conflits\r\nlet initialColors = [\r\n // { value: \"id\", label: \"Color name\" },\r\n];\r\n\r\nexport const ColorForm = () => {\r\n\r\n\r\n  const [selectedColor, setSelectedColor] = useState(null);\r\n  const [colors, setColors] = useState(initialColors); // Utilisez le nom renommé ici\r\n\r\n  useEffect(() => {\r\n    const fetchColors = async () => {\r\n      try {\r\n        const response = await fetch(\"http://localhost:5001/api/colors\");\r\n        const data = await response.json();\r\n\r\n        const transformedColors = data.map(color => ({\r\n          value: color.id.toString(),\r\n          label: capitalizeFirstLetter(color.name),\r\n        }));\r\n\r\n        setColors(transformedColors); // Modifiez pour remplacer complètement les marques\r\n      } catch (error) {\r\n        console.error(\"Error fetching options:\", error);\r\n      }\r\n    };\r\n    fetchColors();\r\n  }, []);\r\n\r\n  return (\r\n    <>\r\n      <Form.Label>\r\n        <h3 className=\"key-info-title\">Types :</h3>\r\n      </Form.Label>\r\n      <Select\r\n        value={selectedColor}\r\n        onChange={setSelectedColor}\r\n        options={colors}\r\n        isSearchable\r\n      />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default ColorForm;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,SAASC,MAAM,EAAEC,IAAI,QAAQ,iBAAiB;AAC9C,OAAOC,MAAM,MAAM,cAAc;AACjC,SAASC,qBAAqB,QAAQ,6CAA6C;;AAEnF;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAAA,SAAAC,QAAA,IAAAC,SAAA;AACA,IAAIC,aAAa,GAAG;EACnB;AAAA,CACA;AAED,OAAO,MAAMC,SAAS,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAG7B,MAAM,CAACC,aAAa,EAAEC,gBAAgB,CAAC,GAAGd,QAAQ,CAAC,IAAI,CAAC;EACxD,MAAM,CAACe,MAAM,EAAEC,SAAS,CAAC,GAAGhB,QAAQ,CAACU,aAAa,CAAC,CAAC,CAAC;;EAErDT,SAAS,CAAC,MAAM;IACd,MAAMgB,WAAW,GAAG,MAAAA,CAAA,KAAY;MAC9B,IAAI;QACF,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,kCAAkC,CAAC;QAChE,MAAMC,IAAI,GAAG,MAAMF,QAAQ,CAACG,IAAI,CAAC,CAAC;QAElC,MAAMC,iBAAiB,GAAGF,IAAI,CAACG,GAAG,CAACC,KAAK,KAAK;UAC3CC,KAAK,EAAED,KAAK,CAACE,EAAE,CAACC,QAAQ,CAAC,CAAC;UAC1BC,KAAK,EAAEvB,qBAAqB,CAACmB,KAAK,CAACK,IAAI;QACzC,CAAC,CAAC,CAAC;QAEHb,SAAS,CAACM,iBAAiB,CAAC,CAAC,CAAC;MAChC,CAAC,CAAC,OAAOQ,KAAK,EAAE;QACdC,OAAO,CAACD,KAAK,CAAC,yBAAyB,EAAEA,KAAK,CAAC;MACjD;IACF,CAAC;IACDb,WAAW,CAAC,CAAC;EACf,CAAC,EAAE,EAAE,CAAC;EAEN,oBACEV,OAAA,CAAAE,SAAA;IAAAuB,QAAA,gBACEzB,OAAA,CAACJ,IAAI,CAAC8B,KAAK;MAAAD,QAAA,eACTzB,OAAA;QAAI2B,SAAS,EAAC,gBAAgB;QAAAF,QAAA,EAAC;MAAO;QAAAG,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACjC,CAAC,eACb/B,OAAA,CAACH,MAAM;MACLqB,KAAK,EAAEZ,aAAc;MACrB0B,QAAQ,EAAEzB,gBAAiB;MAC3B0B,OAAO,EAAEzB,MAAO;MAChB0B,YAAY;IAAA;MAAAN,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACb,CAAC;EAAA,eACF,CAAC;AAEP,CAAC;AAAC1B,EAAA,CAtCWD,SAAS;AAAA+B,EAAA,GAAT/B,SAAS;AAwCtB,eAAeA,SAAS;AAAC,IAAA+B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}