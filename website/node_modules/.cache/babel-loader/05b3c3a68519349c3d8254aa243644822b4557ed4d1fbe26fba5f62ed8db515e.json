{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\nilsv\\\\Documents\\\\2_TRAVAIL\\\\WEB_DEV\\\\EVAL_ECF\\\\projet\\\\website\\\\src\\\\components\\\\vehicleRelated\\\\vehicleForm\\\\VehicleOptionsForm.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport { Button, Form } from \"react-bootstrap\";\nimport Select from \"react-select\";\nimport { capitalizeFirstLetter } from \"../../../functions/capitalizeFirstLetter\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nlet vehicleOptions = [\n  // { value: \"addNewOption\", label: \"Ajouter une option de véhicule\" },\n];\nexport const VehicleOptionsForm = () => {\n  _s();\n  const [showModal, setShowModal] = useState(false);\n  const handleOpenModal = () => setShowModal(true);\n  const handleCloseModal = () => setShowModal(false);\n  const [selectedOption, setSelectedOption] = useState(null);\n  const [options, setOptions] = useState(vehicleOptions); // Initialisation avec vehicleOptions\n\n  useEffect(() => {\n    const fetchOptions = async () => {\n      try {\n        const response = await fetch(\"http://localhost:5001/api/options\");\n        const data = await response.json();\n\n        // Transformer les données reçues pour qu'elles correspondent au format de vehicleOptions\n        const transformedOptions = data.map(option => ({\n          value: option.id.toString(),\n          // Assurez-vous que la valeur est une chaîne\n          label: capitalizeFirstLetter(option.name)\n        }));\n        setOptions(prevOptions => [...prevOptions, ...transformedOptions]);\n      } catch (error) {\n        console.error(\"Error fetching options:\", error);\n      }\n    };\n    fetchOptions();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n      children: /*#__PURE__*/_jsxDEV(\"h3\", {\n        className: \"key-info-title\",\n        children: \"Types :\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Select, {\n      value: selectedOption,\n      onChange: setSelectedOption,\n      options: options,\n      isMulti: true,\n      isSearchable: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      variant: \"primary\",\n      onClick: handleOpenModal,\n      children: \"Ajouter une option\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(AddOptionModal, {\n      show: showModal,\n      onHide: handleCloseModal\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n_s(VehicleOptionsForm, \"BOZnwbqF50Zil5m7a4Tj0K6ZW74=\");\n_c = VehicleOptionsForm;\nexport default VehicleOptionsForm;\nvar _c;\n$RefreshReg$(_c, \"VehicleOptionsForm\");","map":{"version":3,"names":["React","useState","useEffect","Button","Form","Select","capitalizeFirstLetter","jsxDEV","_jsxDEV","Fragment","_Fragment","vehicleOptions","VehicleOptionsForm","_s","showModal","setShowModal","handleOpenModal","handleCloseModal","selectedOption","setSelectedOption","options","setOptions","fetchOptions","response","fetch","data","json","transformedOptions","map","option","value","id","toString","label","name","prevOptions","error","console","children","Label","className","fileName","_jsxFileName","lineNumber","columnNumber","onChange","isMulti","isSearchable","variant","onClick","AddOptionModal","show","onHide","_c","$RefreshReg$"],"sources":["C:/Users/nilsv/Documents/2_TRAVAIL/WEB_DEV/EVAL_ECF/projet/website/src/components/vehicleRelated/vehicleForm/VehicleOptionsForm.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport { Button, Form } from \"react-bootstrap\";\r\nimport Select from \"react-select\";\r\nimport { capitalizeFirstLetter } from \"../../../functions/capitalizeFirstLetter\";\r\n\r\nlet vehicleOptions = [\r\n  // { value: \"addNewOption\", label: \"Ajouter une option de véhicule\" },\r\n];\r\n\r\nexport const VehicleOptionsForm = () => {\r\n  const [showModal, setShowModal] = useState(false);\r\n  const handleOpenModal = () => setShowModal(true);\r\n  const handleCloseModal = () => setShowModal(false);\r\n  \r\n  const [selectedOption, setSelectedOption] = useState(null);\r\n  const [options, setOptions] = useState(vehicleOptions); // Initialisation avec vehicleOptions\r\n\r\n  useEffect(() => {\r\n    const fetchOptions = async () => {\r\n      try {\r\n        const response = await fetch(\"http://localhost:5001/api/options\");\r\n        const data = await response.json();\r\n\r\n        // Transformer les données reçues pour qu'elles correspondent au format de vehicleOptions\r\n        const transformedOptions = data.map((option) => ({\r\n          value: option.id.toString(), // Assurez-vous que la valeur est une chaîne\r\n          label: capitalizeFirstLetter(option.name),\r\n        }));\r\n\r\n        setOptions((prevOptions) => [...prevOptions, ...transformedOptions]);\r\n      } catch (error) {\r\n        console.error(\"Error fetching options:\", error);\r\n      }\r\n    };\r\n    fetchOptions();\r\n  }, []);\r\n\r\n  return (\r\n    <>\r\n      <Form.Label>\r\n        <h3 className=\"key-info-title\">Types :</h3>\r\n      </Form.Label>\r\n      <Select\r\n        value={selectedOption}\r\n        onChange={setSelectedOption}\r\n        options={options}\r\n        isMulti\r\n        isSearchable\r\n      />\r\n\r\n      <Button\r\n        variant=\"primary\"\r\n        onClick={handleOpenModal}\r\n      >\r\n        Ajouter une option\r\n      </Button>\r\n\r\n      <AddOptionModal\r\n        show={showModal}\r\n        onHide={handleCloseModal}\r\n      />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default VehicleOptionsForm;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,SAASC,MAAM,EAAEC,IAAI,QAAQ,iBAAiB;AAC9C,OAAOC,MAAM,MAAM,cAAc;AACjC,SAASC,qBAAqB,QAAQ,0CAA0C;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAAA,SAAAC,QAAA,IAAAC,SAAA;AAEjF,IAAIC,cAAc,GAAG;EACnB;AAAA,CACD;AAED,OAAO,MAAMC,kBAAkB,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACtC,MAAM,CAACC,SAAS,EAAEC,YAAY,CAAC,GAAGd,QAAQ,CAAC,KAAK,CAAC;EACjD,MAAMe,eAAe,GAAGA,CAAA,KAAMD,YAAY,CAAC,IAAI,CAAC;EAChD,MAAME,gBAAgB,GAAGA,CAAA,KAAMF,YAAY,CAAC,KAAK,CAAC;EAElD,MAAM,CAACG,cAAc,EAAEC,iBAAiB,CAAC,GAAGlB,QAAQ,CAAC,IAAI,CAAC;EAC1D,MAAM,CAACmB,OAAO,EAAEC,UAAU,CAAC,GAAGpB,QAAQ,CAACU,cAAc,CAAC,CAAC,CAAC;;EAExDT,SAAS,CAAC,MAAM;IACd,MAAMoB,YAAY,GAAG,MAAAA,CAAA,KAAY;MAC/B,IAAI;QACF,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,mCAAmC,CAAC;QACjE,MAAMC,IAAI,GAAG,MAAMF,QAAQ,CAACG,IAAI,CAAC,CAAC;;QAElC;QACA,MAAMC,kBAAkB,GAAGF,IAAI,CAACG,GAAG,CAAEC,MAAM,KAAM;UAC/CC,KAAK,EAAED,MAAM,CAACE,EAAE,CAACC,QAAQ,CAAC,CAAC;UAAE;UAC7BC,KAAK,EAAE3B,qBAAqB,CAACuB,MAAM,CAACK,IAAI;QAC1C,CAAC,CAAC,CAAC;QAEHb,UAAU,CAAEc,WAAW,IAAK,CAAC,GAAGA,WAAW,EAAE,GAAGR,kBAAkB,CAAC,CAAC;MACtE,CAAC,CAAC,OAAOS,KAAK,EAAE;QACdC,OAAO,CAACD,KAAK,CAAC,yBAAyB,EAAEA,KAAK,CAAC;MACjD;IACF,CAAC;IACDd,YAAY,CAAC,CAAC;EAChB,CAAC,EAAE,EAAE,CAAC;EAEN,oBACEd,OAAA,CAAAE,SAAA;IAAA4B,QAAA,gBACE9B,OAAA,CAACJ,IAAI,CAACmC,KAAK;MAAAD,QAAA,eACT9B,OAAA;QAAIgC,SAAS,EAAC,gBAAgB;QAAAF,QAAA,EAAC;MAAO;QAAAG,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACjC,CAAC,eACbpC,OAAA,CAACH,MAAM;MACLyB,KAAK,EAAEZ,cAAe;MACtB2B,QAAQ,EAAE1B,iBAAkB;MAC5BC,OAAO,EAAEA,OAAQ;MACjB0B,OAAO;MACPC,YAAY;IAAA;MAAAN,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACb,CAAC,eAEFpC,OAAA,CAACL,MAAM;MACL6C,OAAO,EAAC,SAAS;MACjBC,OAAO,EAAEjC,eAAgB;MAAAsB,QAAA,EAC1B;IAED;MAAAG,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC,eAETpC,OAAA,CAAC0C,cAAc;MACbC,IAAI,EAAErC,SAAU;MAChBsC,MAAM,EAAEnC;IAAiB;MAAAwB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC1B,CAAC;EAAA,eACF,CAAC;AAEP,CAAC;AAAC/B,EAAA,CAtDWD,kBAAkB;AAAAyC,EAAA,GAAlBzC,kBAAkB;AAwD/B,eAAeA,kBAAkB;AAAC,IAAAyC,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}