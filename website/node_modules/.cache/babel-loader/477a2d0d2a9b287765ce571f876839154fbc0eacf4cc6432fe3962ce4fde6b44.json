{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\nilsv\\\\Documents\\\\2_TRAVAIL\\\\WEB_DEV\\\\EVAL_ECF\\\\projet\\\\website\\\\src\\\\components\\\\admin\\\\management\\\\ScheduleManagement.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport Table from 'react-bootstrap/Table';\nimport { scheduleGetAllDays, scheduleGetWeek } from '../../../serverRelated/ApiRequest';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const ScheduleManagement = () => {\n  _s();\n  const [daysData, setDaysData] = useState({});\n  const [weekData, setWeekData] = useState({});\n  useEffect(() => {\n    const getSchedule = async () => {\n      try {\n        const year = 2024; // Exemple d'année\n        // Modifier en conséquence si votre fonction attend des arguments différents\n        const days = await scheduleGetAllDays(year);\n        setDaysData(days);\n        const weekStart = 10; // Semaine de départ\n        const weekNumber = 8; // Nombre de semaines à récupérer\n        const weeks = await scheduleGetWeek(weekStart, year, weekNumber);\n        setWeekData(weeks);\n      } catch (error) {\n        console.error(\"Erreur lors de la récupération des horaires:\", error);\n      }\n    };\n    getSchedule();\n  }, []);\n  const colsHeaders = [\"Date\", \"Ouverture Matin\", \"Fermeture Matin\", \"Ouverture Après-midi\", \"Fermeture Après-midi\"];\n  return /*#__PURE__*/_jsxDEV(Table, {\n    striped: true,\n    bordered: true,\n    hover: true,\n    children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n      children: /*#__PURE__*/_jsxDEV(\"tr\", {\n        children: colsHeaders.map((header, index) => /*#__PURE__*/_jsxDEV(\"th\", {\n          children: header\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n      children: Object.keys(weekData).map(weekNumber => weekData[weekNumber].map((day, dayIndex) => /*#__PURE__*/_jsxDEV(\"tr\", {\n        children: [/*#__PURE__*/_jsxDEV(\"td\", {\n          children: day.date\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n          children: day.morningOpening || \"Fermé\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n          children: day.morningClosing || \"Fermé\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n          children: day.afternoonOpening || \"Fermé\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n          children: day.afternoonClosing || \"Fermé\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 15\n        }, this)]\n      }, dayIndex, true, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 13\n      }, this)))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 32,\n    columnNumber: 5\n  }, this);\n};\n_s(ScheduleManagement, \"ROWeuYcguF318YpPkYl88kt4Fp0=\");\n_c = ScheduleManagement;\nexport default ScheduleManagement;\nvar _c;\n$RefreshReg$(_c, \"ScheduleManagement\");","map":{"version":3,"names":["React","useState","useEffect","Table","scheduleGetAllDays","scheduleGetWeek","jsxDEV","_jsxDEV","ScheduleManagement","_s","daysData","setDaysData","weekData","setWeekData","getSchedule","year","days","weekStart","weekNumber","weeks","error","console","colsHeaders","striped","bordered","hover","children","map","header","index","fileName","_jsxFileName","lineNumber","columnNumber","Object","keys","day","dayIndex","date","morningOpening","morningClosing","afternoonOpening","afternoonClosing","_c","$RefreshReg$"],"sources":["C:/Users/nilsv/Documents/2_TRAVAIL/WEB_DEV/EVAL_ECF/projet/website/src/components/admin/management/ScheduleManagement.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport Table from 'react-bootstrap/Table';\r\nimport { scheduleGetAllDays, scheduleGetWeek } from '../../../serverRelated/ApiRequest';\r\n\r\nexport const ScheduleManagement = () => {\r\n  const [daysData, setDaysData] = useState({});\r\n  const [weekData, setWeekData] = useState({});\r\n\r\n  useEffect(() => {\r\n    const getSchedule = async () => {\r\n      try {\r\n        const year = 2024; // Exemple d'année\r\n        // Modifier en conséquence si votre fonction attend des arguments différents\r\n        const days = await scheduleGetAllDays(year);\r\n        setDaysData(days);\r\n\r\n        const weekStart = 10; // Semaine de départ\r\n        const weekNumber = 8; // Nombre de semaines à récupérer\r\n        const weeks = await scheduleGetWeek(weekStart, year, weekNumber);\r\n        setWeekData(weeks);\r\n      } catch (error) {\r\n        console.error(\"Erreur lors de la récupération des horaires:\", error);\r\n      }\r\n    };\r\n\r\n    getSchedule();\r\n  }, []);\r\n\r\n  const colsHeaders = [\"Date\", \"Ouverture Matin\", \"Fermeture Matin\", \"Ouverture Après-midi\", \"Fermeture Après-midi\"];\r\n\r\n  return (\r\n    <Table striped bordered hover>\r\n      <thead>\r\n        <tr>\r\n          {colsHeaders.map((header, index) => (\r\n            <th key={index}>{header}</th>\r\n          ))}\r\n        </tr>\r\n      </thead>\r\n      <tbody>\r\n        {/* Exemple d'affichage des données. À ajuster selon la structure de vos données */}\r\n        {Object.keys(weekData).map(weekNumber =>\r\n          weekData[weekNumber].map((day, dayIndex) => (\r\n            <tr key={dayIndex}>\r\n              <td>{day.date}</td>\r\n              <td>{day.morningOpening || \"Fermé\"}</td>\r\n              <td>{day.morningClosing || \"Fermé\"}</td>\r\n              <td>{day.afternoonOpening || \"Fermé\"}</td>\r\n              <td>{day.afternoonClosing || \"Fermé\"}</td>\r\n            </tr>\r\n          ))\r\n        )}\r\n      </tbody>\r\n    </Table>\r\n  );\r\n};\r\n\r\nexport default ScheduleManagement;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}