{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\nilsv\\\\Documents\\\\2_TRAVAIL\\\\WEB_DEV\\\\EVAL_ECF\\\\projet\\\\website\\\\src\\\\components\\\\vehicleRelated\\\\vehicleForm\\\\keyInfosForm\\\\OptionsForm.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport { Button, Form } from \"react-bootstrap\";\nimport Select from \"react-select\";\nimport { capitalizeFirstLetter } from \"../../../../functions/capitalizeFirstLetter\";\nimport AddOptionModal from \"../../../addingEntries/AddOptionModal\";\n\n// Variable renommée pour éviter les conflits\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nlet initialOptions = [\n// Ajoutez une option pour \"Ajouter une option de véhicule\"\n{\n  value: \"addNewOption\",\n  label: \"Ajouter une option de véhicule\"\n}];\nexport const OptionsForm = ({\n  onOptionsChange\n}) => {\n  _s();\n  const [showModal, setShowModal] = useState(false);\n  const handleOpenModal = () => setShowModal(true);\n  const handleCloseModal = () => setShowModal(false);\n  const [selectedOption, setSelectedOption] = useState(null);\n  const [options, setOptions] = useState(initialOptions); // Utilisez le nom renommé ici\n\n  useEffect(() => {\n    const fetchOptions = async () => {\n      try {\n        const response = await fetch(\"http://localhost:5001/api/options\");\n        const data = await response.json();\n\n        // Transformer les données reçues pour qu'elles correspondent au format de initialOptions\n        const transformedOptions = data.map(option => ({\n          value: option.id.toString(),\n          // Assurez-vous que la valeur est une chaîne\n          label: capitalizeFirstLetter(option.name)\n        }));\n\n        // Ajoutez l'option \"Ajouter une option de véhicule\" aux options transformées\n        transformedOptions.unshift({\n          value: \"addNewOption\",\n          label: \"Ajouter une option de véhicule\"\n        });\n        setOptions(transformedOptions);\n      } catch (error) {\n        console.error(\"Error fetching options:\", error);\n      }\n    };\n    fetchOptions();\n  }, []);\n\n  // Dans le rendu du composant parent\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Select, {\n      value: selectedOption,\n      onChange: selectedOptions => {\n        setSelectedOption(selectedOptions);\n        onOptionsChange(selectedOptions); // Appeler le callback du parent avec les options sélectionnées\n      },\n\n      options: options,\n      isMulti: true,\n      isSearchable: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      variant: \"primary\",\n      onClick: handleOpenModal,\n      children: \"Ajouter une option\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(AddOptionModal, {\n      show: showModal,\n      onHide: handleCloseModal\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n_s(OptionsForm, \"9TJoCqcAEC/C1BOSp1KPahqCMsA=\");\n_c = OptionsForm;\nexport default OptionsForm;\nvar _c;\n$RefreshReg$(_c, \"OptionsForm\");","map":{"version":3,"names":["React","useState","useEffect","Button","Form","Select","capitalizeFirstLetter","AddOptionModal","jsxDEV","_jsxDEV","Fragment","_Fragment","initialOptions","value","label","OptionsForm","onOptionsChange","_s","showModal","setShowModal","handleOpenModal","handleCloseModal","selectedOption","setSelectedOption","options","setOptions","fetchOptions","response","fetch","data","json","transformedOptions","map","option","id","toString","name","unshift","error","console","children","onChange","selectedOptions","isMulti","isSearchable","fileName","_jsxFileName","lineNumber","columnNumber","variant","onClick","show","onHide","_c","$RefreshReg$"],"sources":["C:/Users/nilsv/Documents/2_TRAVAIL/WEB_DEV/EVAL_ECF/projet/website/src/components/vehicleRelated/vehicleForm/keyInfosForm/OptionsForm.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport { Button, Form } from \"react-bootstrap\";\r\nimport Select from \"react-select\";\r\nimport { capitalizeFirstLetter } from \"../../../../functions/capitalizeFirstLetter\";\r\nimport AddOptionModal from \"../../../addingEntries/AddOptionModal\";\r\n\r\n// Variable renommée pour éviter les conflits\r\nlet initialOptions = [\r\n  // Ajoutez une option pour \"Ajouter une option de véhicule\"\r\n  { value: \"addNewOption\", label: \"Ajouter une option de véhicule\" },\r\n];\r\n\r\nexport const OptionsForm = ({ onOptionsChange }) => {\r\n  const [showModal, setShowModal] = useState(false);\r\n  const handleOpenModal = () => setShowModal(true);\r\n  const handleCloseModal = () => setShowModal(false);\r\n  const [selectedOption, setSelectedOption] = useState(null);\r\n  const [options, setOptions] = useState(initialOptions); // Utilisez le nom renommé ici\r\n\r\n  useEffect(() => {\r\n    const fetchOptions = async () => {\r\n      try {\r\n        const response = await fetch(\"http://localhost:5001/api/options\");\r\n        const data = await response.json();\r\n\r\n        // Transformer les données reçues pour qu'elles correspondent au format de initialOptions\r\n        const transformedOptions = data.map((option) => ({\r\n          value: option.id.toString(), // Assurez-vous que la valeur est une chaîne\r\n          label: capitalizeFirstLetter(option.name),\r\n        }));\r\n\r\n        // Ajoutez l'option \"Ajouter une option de véhicule\" aux options transformées\r\n        transformedOptions.unshift({\r\n          value: \"addNewOption\",\r\n          label: \"Ajouter une option de véhicule\",\r\n        });\r\n\r\n        setOptions(transformedOptions);\r\n      } catch (error) {\r\n        console.error(\"Error fetching options:\", error);\r\n      }\r\n    };\r\n    fetchOptions();\r\n  }, []);\r\n\r\n// Dans le rendu du composant parent\r\n\r\n\r\n  return (\r\n    <>\r\n      <Select\r\n        value={selectedOption}\r\n        onChange={(selectedOptions) => {\r\n          setSelectedOption(selectedOptions);\r\n          onOptionsChange(selectedOptions); // Appeler le callback du parent avec les options sélectionnées\r\n        }}\r\n        options={options}\r\n        isMulti\r\n        isSearchable\r\n      />\r\n\r\n      <Button variant=\"primary\" onClick={handleOpenModal}>\r\n        Ajouter une option\r\n      </Button>\r\n\r\n      <AddOptionModal show={showModal} onHide={handleCloseModal} />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default OptionsForm;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}