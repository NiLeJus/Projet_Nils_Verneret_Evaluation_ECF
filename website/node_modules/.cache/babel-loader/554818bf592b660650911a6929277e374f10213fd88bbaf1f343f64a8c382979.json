{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\nilsv\\\\Documents\\\\2_TRAVAIL\\\\WEB_DEV\\\\EVAL_ECF\\\\projet\\\\website\\\\src\\\\components\\\\general\\\\FooterSchedule.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { scheduleGetWeek } from \"../../serverRelated/ApiRequest\";\nimport { Container, Row, Col } from \"react-bootstrap\";\nimport { format } from 'date-fns';\nimport { fr } from 'date-fns/locale'; // Importez le locale de votre choix\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst getCurrentDate = () => {\n  const now = new Date();\n  return {\n    year: now.getFullYear(),\n    weekNumber: now.getDate() - now.getDay() + (now.getDay() === 0 ? -6 : 1)\n  };\n};\nexport const FooterSchedule = () => {\n  _s();\n  const [schedule, setSchedule] = useState([]);\n  useEffect(() => {\n    const fetchData = async () => {\n      const currentDate = getCurrentDate();\n      try {\n        const year = currentDate.year;\n        const weekNumber = currentDate.weekNumber + 1;\n        const response = await scheduleGetWeek(year, weekNumber, 1);\n        const weekData = response[weekNumber];\n        if (weekData) {\n          const transformedWeekData = weekData.map(day => {\n            const isMorningClosed = day.morningOpening === null || day.morningClosing === null;\n            const isAfternoonClosed = day.afternoonOpening === null || day.afternoonClosing === null;\n            const dayStatus = isMorningClosed && isAfternoonClosed ? \"Fermé pour toute la journée\" : null;\n            return {\n              ...day,\n              dayStatus,\n              morningStatus: !isMorningClosed ? `${day.morningOpening.slice(0, -3)} - ${day.morningClosing.slice(0, -3)}` : \"Fermé\",\n              afternoonStatus: !isAfternoonClosed ? `${day.afternoonOpening.slice(0, -3)} - ${day.afternoonClosing.slice(0, -3)}` : \"Fermé\"\n            };\n          });\n          setSchedule(transformedWeekData);\n        } else {\n          setSchedule([]);\n        }\n      } catch (error) {\n        console.error(\"Erreur lors de la récupération des horaires:\", error);\n      }\n    };\n    fetchData();\n  }, []);\n  const getDate = date => {\n    const dayDate = new Date(date);\n    const dayName = format(dayDate, 'EEEE', {\n      locale: fr\n    });\n    return `${dayName.charAt(0).toUpperCase() + dayName.slice(1)}`;\n  };\n\n  // Séparez le tableau en deux : la majorité des jours et les deux derniers jours\n  const mainSchedule = schedule.slice(0, -2);\n  const lastTwoDays = schedule.slice(-2);\n  return /*#__PURE__*/_jsxDEV(Container, {\n    children: schedule.length > 0 ? /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(Row, {\n        children: mainSchedule.map((day, index) => /*#__PURE__*/_jsxDEV(Col, {\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            children: getDate(day.date)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 69,\n            columnNumber: 19\n          }, this), day.dayStatus ? /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"footer-schedule\",\n            children: day.dayStatus\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 71,\n            columnNumber: 21\n          }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {\n            children: [/*#__PURE__*/_jsxDEV(\"li\", {\n              className: \"footer-schedule-li\",\n              children: [\"Matin : \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 74,\n                columnNumber: 66\n              }, this), \" \", day.morningStatus]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 74,\n              columnNumber: 23\n            }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n              children: [\"Apr\\xE8s-midi : \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 75,\n                columnNumber: 40\n              }, this), \" \", day.afternoonStatus]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 75,\n              columnNumber: 23\n            }, this)]\n          }, void 0, true)]\n        }, index, true, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Row, {\n        className: \"mt-4\",\n        children: lastTwoDays.map((day, index) => /*#__PURE__*/_jsxDEV(Col, {\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            children: getDate(day.date)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 84,\n            columnNumber: 19\n          }, this), day.dayStatus ? /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"footer-schedule\",\n            children: day.dayStatus\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 86,\n            columnNumber: 21\n          }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {\n            children: [/*#__PURE__*/_jsxDEV(\"li\", {\n              children: [\"Matin : \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 89,\n                columnNumber: 35\n              }, this), \" \", day.morningStatus]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 89,\n              columnNumber: 23\n            }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n              children: [\"Apr\\xE8s-midi : \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 90,\n                columnNumber: 40\n              }, this), \" \", day.afternoonStatus]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 90,\n              columnNumber: 23\n            }, this)]\n          }, void 0, true)]\n        }, index, true, {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true) : /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Aucun horaire disponible\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 63,\n    columnNumber: 5\n  }, this);\n};\n_s(FooterSchedule, \"ufj6drX7OuS1FJ8vycY2bacy/To=\");\n_c = FooterSchedule;\nexport default FooterSchedule;\nvar _c;\n$RefreshReg$(_c, \"FooterSchedule\");","map":{"version":3,"names":["React","useEffect","useState","scheduleGetWeek","Container","Row","Col","format","fr","jsxDEV","_jsxDEV","Fragment","_Fragment","getCurrentDate","now","Date","year","getFullYear","weekNumber","getDate","getDay","FooterSchedule","_s","schedule","setSchedule","fetchData","currentDate","response","weekData","transformedWeekData","map","day","isMorningClosed","morningOpening","morningClosing","isAfternoonClosed","afternoonOpening","afternoonClosing","dayStatus","morningStatus","slice","afternoonStatus","error","console","date","dayDate","dayName","locale","charAt","toUpperCase","mainSchedule","lastTwoDays","children","length","index","fileName","_jsxFileName","lineNumber","columnNumber","className","_c","$RefreshReg$"],"sources":["C:/Users/nilsv/Documents/2_TRAVAIL/WEB_DEV/EVAL_ECF/projet/website/src/components/general/FooterSchedule.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport { scheduleGetWeek } from \"../../serverRelated/ApiRequest\";\r\nimport { Container, Row, Col } from \"react-bootstrap\";\r\nimport { format } from 'date-fns';\r\nimport { fr } from 'date-fns/locale'; // Importez le locale de votre choix\r\n\r\nconst getCurrentDate = () => {\r\n  const now = new Date();\r\n  return {\r\n    year: now.getFullYear(),\r\n    weekNumber: now.getDate() - now.getDay() + (now.getDay() === 0 ? -6 : 1),\r\n  };\r\n};\r\n\r\nexport const FooterSchedule = () => {\r\n  const [schedule, setSchedule] = useState([]);\r\n\r\n  useEffect(() => {\r\n    const fetchData = async () => {\r\n      const currentDate = getCurrentDate();\r\n      try {\r\n        const year = currentDate.year;\r\n        const weekNumber = currentDate.weekNumber + 1;\r\n\r\n        const response = await scheduleGetWeek(year, weekNumber, 1);\r\n        const weekData = response[weekNumber];\r\n        if (weekData) {\r\n          const transformedWeekData = weekData.map(day => {\r\n            const isMorningClosed = day.morningOpening === null || day.morningClosing === null;\r\n            const isAfternoonClosed = day.afternoonOpening === null || day.afternoonClosing === null;\r\n            const dayStatus = isMorningClosed && isAfternoonClosed ? \"Fermé pour toute la journée\" : null;\r\n\r\n            return {\r\n              ...day,\r\n              dayStatus,\r\n              morningStatus: !isMorningClosed ? `${day.morningOpening.slice(0, -3)} - ${day.morningClosing.slice(0, -3)}` : \"Fermé\",\r\n              afternoonStatus: !isAfternoonClosed ? `${day.afternoonOpening.slice(0, -3)} - ${day.afternoonClosing.slice(0, -3)}` : \"Fermé\",\r\n            };\r\n          });\r\n          setSchedule(transformedWeekData);\r\n        } else {\r\n          setSchedule([]);\r\n        }\r\n      } catch (error) {\r\n        console.error(\"Erreur lors de la récupération des horaires:\", error);\r\n      }\r\n    };\r\n\r\n    fetchData();\r\n  }, []);\r\n\r\n  const getDate = (date) => {\r\n    const dayDate = new Date(date);\r\n    const dayName = format(dayDate, 'EEEE', { locale: fr });\r\n    return `${dayName.charAt(0).toUpperCase() + dayName.slice(1)}`;\r\n  }\r\n\r\n  // Séparez le tableau en deux : la majorité des jours et les deux derniers jours\r\n  const mainSchedule = schedule.slice(0, -2);\r\n  const lastTwoDays = schedule.slice(-2);\r\n\r\n  return (\r\n    <Container>\r\n      {schedule.length > 0 ? (\r\n        <>\r\n          <Row>\r\n            {mainSchedule.map((day, index) => (\r\n              <Col key={index}>\r\n                  <p>{getDate(day.date)}</p>\r\n                  {day.dayStatus ? (\r\n                    <p className='footer-schedule'>{day.dayStatus}</p>\r\n                  ) : (\r\n                    <>\r\n                      <li className=\"footer-schedule-li\">Matin : <br/> {day.morningStatus}</li>\r\n                      <li>Après-midi : <br/> {day.afternoonStatus}</li>\r\n                    </>\r\n                  )}\r\n              </Col>\r\n            ))}\r\n          </Row>\r\n          <Row className=\"mt-4\"> \r\n            {lastTwoDays.map((day, index) => (\r\n              <Col key={index}>\r\n                  <p>{getDate(day.date)}</p>\r\n                  {day.dayStatus ? (\r\n                    <p className='footer-schedule'>{day.dayStatus}</p>\r\n                  ) : (\r\n                    <>\r\n                      <li>Matin : <br/> {day.morningStatus}</li>\r\n                      <li>Après-midi : <br/> {day.afternoonStatus}</li>\r\n                    </>\r\n                  )}\r\n              </Col>\r\n            ))}\r\n          </Row>\r\n        </>\r\n      ) : (\r\n        <p>Aucun horaire disponible</p>\r\n      )}\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default FooterSchedule;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}