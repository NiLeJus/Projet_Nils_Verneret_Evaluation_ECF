{"ast":null,"code":"var _s = $RefreshSig$();\nimport Table from \"react-bootstrap/Table\";\nimport Button from \"react-bootstrap/Button\";\nimport { useState, useEffect } from \"react\";\nimport { scheduleGetAllDays, scheduleUpdateDay, scheduleGetWeek } from \"../../../serverRelated/ApiRequest\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const ScheduleManagement = () => {\n  _s();\n  useEffect(() => {\n    const year = 2024;\n    const weekNumber = 2;\n    const date = '2024-05-15';\n    const week = 2;\n    scheduleGetWeek(week, year, weekNumber).then(weekData => {\n      console.log('Week Data:', weekData);\n    });\n    scheduleGetAllDays(year).then(dayData => {\n      console.log('Day Data:', dayData);\n    });\n  }, []);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {}, void 0, false);\n};\n_s(ScheduleManagement, \"OD7bBpZva5O2jO+Puf00hKivP7c=\");\n_c = ScheduleManagement;\nexport default ScheduleManagement;\nvar _c;\n$RefreshReg$(_c, \"ScheduleManagement\");","map":{"version":3,"names":["Table","Button","useState","useEffect","scheduleGetAllDays","scheduleUpdateDay","scheduleGetWeek","Fragment","_Fragment","jsxDEV","_jsxDEV","ScheduleManagement","_s","year","weekNumber","date","week","then","weekData","console","log","dayData","_c","$RefreshReg$"],"sources":["C:/Users/nilsv/Documents/2_TRAVAIL/WEB_DEV/EVAL_ECF/projet/website/src/components/admin/management/ScheduleManagement.js"],"sourcesContent":["import Table from \"react-bootstrap/Table\";\r\nimport Button from \"react-bootstrap/Button\";\r\nimport { useState, useEffect } from \"react\";\r\nimport { scheduleGetAllDays, scheduleUpdateDay, scheduleGetWeek} from \"../../../serverRelated/ApiRequest\";\r\n\r\nexport const ScheduleManagement = () => {\r\n\r\n    useEffect(() => {\r\n        const year = 2024;\r\n        const weekNumber = 2;\r\n        const date = '2024-05-15'; \r\n        const week = 2;\r\n      \r\n        scheduleGetWeek(week, year, weekNumber).then(weekData => {\r\n            console.log('Week Data:', weekData);\r\n          });\r\n      \r\n        scheduleGetAllDays(year).then(dayData => {\r\n          console.log('Day Data:', dayData);\r\n        });\r\n      }, []);\r\n\r\n    return (\r\n<>\r\n</>\r\n    );\r\n};\r\n\r\nexport default ScheduleManagement;\r\n\r\n"],"mappings":";AAAA,OAAOA,KAAK,MAAM,uBAAuB;AACzC,OAAOC,MAAM,MAAM,wBAAwB;AAC3C,SAASC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAC3C,SAASC,kBAAkB,EAAEC,iBAAiB,EAAEC,eAAe,QAAO,mCAAmC;AAAC,SAAAC,QAAA,IAAAC,SAAA;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAE1G,OAAO,MAAMC,kBAAkB,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAEpCT,SAAS,CAAC,MAAM;IACZ,MAAMU,IAAI,GAAG,IAAI;IACjB,MAAMC,UAAU,GAAG,CAAC;IACpB,MAAMC,IAAI,GAAG,YAAY;IACzB,MAAMC,IAAI,GAAG,CAAC;IAEdV,eAAe,CAACU,IAAI,EAAEH,IAAI,EAAEC,UAAU,CAAC,CAACG,IAAI,CAACC,QAAQ,IAAI;MACrDC,OAAO,CAACC,GAAG,CAAC,YAAY,EAAEF,QAAQ,CAAC;IACrC,CAAC,CAAC;IAEJd,kBAAkB,CAACS,IAAI,CAAC,CAACI,IAAI,CAACI,OAAO,IAAI;MACvCF,OAAO,CAACC,GAAG,CAAC,WAAW,EAAEC,OAAO,CAAC;IACnC,CAAC,CAAC;EACJ,CAAC,EAAE,EAAE,CAAC;EAER,oBACJX,OAAA,CAAAF,SAAA,mBACE,CAAC;AAEH,CAAC;AAACI,EAAA,CArBWD,kBAAkB;AAAAW,EAAA,GAAlBX,kBAAkB;AAuB/B,eAAeA,kBAAkB;AAAC,IAAAW,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}