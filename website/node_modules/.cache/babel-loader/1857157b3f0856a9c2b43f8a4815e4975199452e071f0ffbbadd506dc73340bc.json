{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\nilsv\\\\Documents\\\\2_TRAVAIL\\\\WEB_DEV\\\\EVAL_ECF\\\\projet\\\\website\\\\src\\\\components\\\\admin\\\\management\\\\ScheduleManagement.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport Table from \"react-bootstrap/Table\";\nimport Container from \"react-bootstrap/Container\";\nimport { scheduleGetAllDays } from \"../../../serverRelated/ApiRequest\";\nimport { format, parseISO } from \"date-fns\";\nimport { fr } from \"date-fns/locale\";\nimport Button from \"react-bootstrap/Button\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst getCurrentYear = () => {\n  const currentDate = new Date();\n  return currentDate.getFullYear();\n};\nexport const ScheduleManagement = () => {\n  _s();\n  const [preparedData, setPreparedData] = useState([]);\n  useEffect(() => {\n    const fetchData = async () => {\n      const year = getCurrentYear();\n      try {\n        const daysResponse = await scheduleGetAllDays(year);\n        setPreparedData(prepareDataForDisplay(daysResponse));\n      } catch (error) {\n        console.error(\"Erreur lors de la récupération des horaires:\", error);\n      }\n    };\n    fetchData();\n  }, []);\n  const prepareDataForDisplay = data => {\n    const groupedData = [];\n    Object.keys(data).forEach(weekNumber => {\n      const week = data[weekNumber];\n      if (week.length > 0) {\n        groupedData.push(week.slice(0, 7));\n      }\n    });\n    return groupedData;\n  };\n  const toggleDayState = (weekIndex, dayIndex) => {\n    const newData = [...preparedData];\n    const day = newData[weekIndex][dayIndex];\n    day.isOpen = !day.isOpen;\n    if (!day.isOpen) {\n      day.morningOpening = \"\";\n      day.morningClosing = \"\";\n      day.afternoonOpening = \"\";\n      day.afternoonClosing = \"\";\n    }\n    setPreparedData(newData);\n  };\n  const handleInputChange = (event, weekIndex, dayIndex, type) => {\n    const newValue = event.target.value !== \"\" ? event.target.value : null;\n    const newData = [...preparedData];\n    const key = type.toLowerCase().replace(/\\s/g, \"\");\n    newData[weekIndex][dayIndex][key] = newValue;\n    setPreparedData(newData);\n  };\n  const rowsHeaders = [\"Date\", \"État\", \"Ouverture Matin\", \"Fermeture Matin\", \"Ouverture Après-midi\", \"Fermeture Après-midi\", \"Actions\"];\n  const weekWideAction1 = weekIndex => console.log(`Action 1 pour la semaine ${weekIndex}`);\n  const weekWideAction2 = weekIndex => console.log(`Action 2 pour la semaine ${weekIndex}`);\n  return /*#__PURE__*/_jsxDEV(Container, {\n    children: preparedData.map((week, weekIndex) => /*#__PURE__*/_jsxDEV(Table, {\n      striped: true,\n      bordered: true,\n      hover: true,\n      className: \"text-center mt-4\",\n      responsive: true,\n      children: /*#__PURE__*/_jsxDEV(\"tbody\", {\n        children: rowsHeaders.map((header, headerIndex) => /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"th\", {\n            children: header\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 76,\n            columnNumber: 17\n          }, this), week.map((day, dayIndex) => {\n            let cellContent;\n            switch (header) {\n              case \"Date\":\n                const date = parseISO(day.date);\n                cellContent = format(date, \"EEEE dd MMMM yyyy\", {\n                  locale: fr\n                });\n                break;\n              case \"État\":\n                cellContent = /*#__PURE__*/_jsxDEV(Button, {\n                  onClick: () => toggleDayState(weekIndex, dayIndex),\n                  style: {\n                    backgroundColor: day.isOpen ? 'green' : 'red',\n                    color: 'white'\n                  },\n                  children: day.isOpen ? 'Ouvert' : 'Fermé'\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 86,\n                  columnNumber: 25\n                }, this);\n                break;\n              case \"Actions\":\n                if (dayIndex === 0) {\n                  // Assurez-vous d'ajouter les boutons une seule fois par semaine\n                  cellContent = /*#__PURE__*/_jsxDEV(\"td\", {\n                    colSpan: week.length,\n                    children: [/*#__PURE__*/_jsxDEV(Button, {\n                      variant: \"warning\",\n                      onClick: () => weekWideAction1(weekIndex),\n                      className: \"me-2\",\n                      children: \"Action Semaine 1\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 95,\n                      columnNumber: 29\n                    }, this), /*#__PURE__*/_jsxDEV(Button, {\n                      variant: \"info\",\n                      onClick: () => weekWideAction2(weekIndex),\n                      children: \"Action Semaine 2\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 96,\n                      columnNumber: 29\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 94,\n                    columnNumber: 27\n                  }, this);\n                }\n                break;\n              default:\n                cellContent = /*#__PURE__*/_jsxDEV(\"input\", {\n                  type: \"time\",\n                  value: day[header.toLowerCase().replace(/\\s/g, \"\")] || \"\",\n                  onChange: e => handleInputChange(e, weekIndex, dayIndex, header),\n                  disabled: !day.isOpen\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 103,\n                  columnNumber: 25\n                }, this);\n            }\n            return cellContent ? /*#__PURE__*/_jsxDEV(\"td\", {\n              children: cellContent\n            }, `${headerIndex}-${dayIndex}`, false, {\n              fileName: _jsxFileName,\n              lineNumber: 106,\n              columnNumber: 40\n            }, this) : null;\n          }), header === \"Actions\" && week.map((_, dayIndex) => dayIndex === 0 ? null : /*#__PURE__*/_jsxDEV(\"td\", {}, `spacer-${dayIndex}`, false, {\n            fileName: _jsxFileName,\n            lineNumber: 108,\n            columnNumber: 92\n          }, this))]\n        }, headerIndex, true, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 11\n      }, this)\n    }, weekIndex, false, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 9\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 70,\n    columnNumber: 5\n  }, this);\n};\n_s(ScheduleManagement, \"iKWBrHeWYydjV2iquAVOGFhht/M=\");\n_c = ScheduleManagement;\nexport default ScheduleManagement;\nvar _c;\n$RefreshReg$(_c, \"ScheduleManagement\");","map":{"version":3,"names":["React","useState","useEffect","Table","Container","scheduleGetAllDays","format","parseISO","fr","Button","jsxDEV","_jsxDEV","getCurrentYear","currentDate","Date","getFullYear","ScheduleManagement","_s","preparedData","setPreparedData","fetchData","year","daysResponse","prepareDataForDisplay","error","console","data","groupedData","Object","keys","forEach","weekNumber","week","length","push","slice","toggleDayState","weekIndex","dayIndex","newData","day","isOpen","morningOpening","morningClosing","afternoonOpening","afternoonClosing","handleInputChange","event","type","newValue","target","value","key","toLowerCase","replace","rowsHeaders","weekWideAction1","log","weekWideAction2","children","map","striped","bordered","hover","className","responsive","header","headerIndex","fileName","_jsxFileName","lineNumber","columnNumber","cellContent","date","locale","onClick","style","backgroundColor","color","colSpan","variant","onChange","e","disabled","_","_c","$RefreshReg$"],"sources":["C:/Users/nilsv/Documents/2_TRAVAIL/WEB_DEV/EVAL_ECF/projet/website/src/components/admin/management/ScheduleManagement.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport Table from \"react-bootstrap/Table\";\r\nimport Container from \"react-bootstrap/Container\";\r\nimport { scheduleGetAllDays } from \"../../../serverRelated/ApiRequest\";\r\nimport { format, parseISO } from \"date-fns\";\r\nimport { fr } from \"date-fns/locale\";\r\nimport Button from \"react-bootstrap/Button\";\r\n\r\nconst getCurrentYear = () => {\r\n  const currentDate = new Date();\r\n  return currentDate.getFullYear();\r\n};\r\n\r\nexport const ScheduleManagement = () => {\r\n  const [preparedData, setPreparedData] = useState([]);\r\n\r\n  useEffect(() => {\r\n    const fetchData = async () => {\r\n      const year = getCurrentYear();\r\n      try {\r\n        const daysResponse = await scheduleGetAllDays(year);\r\n        setPreparedData(prepareDataForDisplay(daysResponse));\r\n      } catch (error) {\r\n        console.error(\"Erreur lors de la récupération des horaires:\", error);\r\n      }\r\n    };\r\n    fetchData();\r\n  }, []);\r\n\r\n  const prepareDataForDisplay = (data) => {\r\n    const groupedData = [];\r\n    Object.keys(data).forEach((weekNumber) => {\r\n      const week = data[weekNumber];\r\n      if (week.length > 0) {\r\n        groupedData.push(week.slice(0, 7));\r\n      }\r\n    });\r\n    return groupedData;\r\n  };\r\n\r\n  const toggleDayState = (weekIndex, dayIndex) => {\r\n    const newData = [...preparedData];\r\n    const day = newData[weekIndex][dayIndex];\r\n    day.isOpen = !day.isOpen;\r\n    if (!day.isOpen) {\r\n      day.morningOpening = \"\";\r\n      day.morningClosing = \"\";\r\n      day.afternoonOpening = \"\";\r\n      day.afternoonClosing = \"\";\r\n    }\r\n    setPreparedData(newData);\r\n  };\r\n\r\n  const handleInputChange = (event, weekIndex, dayIndex, type) => {\r\n    const newValue = event.target.value !== \"\" ? event.target.value : null;\r\n    const newData = [...preparedData];\r\n    const key = type.toLowerCase().replace(/\\s/g, \"\");\r\n    newData[weekIndex][dayIndex][key] = newValue;\r\n    setPreparedData(newData);\r\n  };\r\n\r\n  const rowsHeaders = [\r\n    \"Date\", \"État\", \"Ouverture Matin\", \"Fermeture Matin\", \"Ouverture Après-midi\", \"Fermeture Après-midi\", \"Actions\"\r\n  ];\r\n\r\n  const weekWideAction1 = (weekIndex) => console.log(`Action 1 pour la semaine ${weekIndex}`);\r\n  const weekWideAction2 = (weekIndex) => console.log(`Action 2 pour la semaine ${weekIndex}`);\r\n\r\n  return (\r\n    <Container>\r\n      {preparedData.map((week, weekIndex) => (\r\n        <Table key={weekIndex} striped bordered hover className=\"text-center mt-4\" responsive>\r\n          <tbody>\r\n            {rowsHeaders.map((header, headerIndex) => (\r\n              <tr key={headerIndex}>\r\n                <th>{header}</th>\r\n                {week.map((day, dayIndex) => {\r\n                  let cellContent;\r\n                  switch (header) {\r\n                    case \"Date\":\r\n                      const date = parseISO(day.date);\r\n                      cellContent = format(date, \"EEEE dd MMMM yyyy\", { locale: fr });\r\n                      break;\r\n                    case \"État\":\r\n                      cellContent = (\r\n                        <Button onClick={() => toggleDayState(weekIndex, dayIndex)} style={{ backgroundColor: day.isOpen ? 'green' : 'red', color: 'white' }}>\r\n                          {day.isOpen ? 'Ouvert' : 'Fermé'}\r\n                        </Button>\r\n                      );\r\n                      break;\r\n                    case \"Actions\":\r\n                      if (dayIndex === 0) { // Assurez-vous d'ajouter les boutons une seule fois par semaine\r\n                        cellContent = (\r\n                          <td colSpan={week.length}>\r\n                            <Button variant=\"warning\" onClick={() => weekWideAction1(weekIndex)} className=\"me-2\">Action Semaine 1</Button>\r\n                            <Button variant=\"info\" onClick={() => weekWideAction2(weekIndex)}>Action Semaine 2</Button>\r\n                          </td>\r\n                        );\r\n                      }\r\n                      break;\r\n                    default:\r\n                      cellContent = (\r\n                        <input type=\"time\" value={day[header.toLowerCase().replace(/\\s/g, \"\")] || \"\"} onChange={(e) => handleInputChange(e, weekIndex, dayIndex, header)} disabled={!day.isOpen} />\r\n                      );\r\n                  }\r\n                  return cellContent ? <td key={`${headerIndex}-${dayIndex}`}>{cellContent}</td> : null;\r\n                })}\r\n                {header === \"Actions\" && week.map((_, dayIndex) => dayIndex === 0 ? null : <td key={`spacer-${dayIndex}`}></td>)}\r\n              </tr>\r\n            ))}\r\n          </tbody>\r\n        </Table>\r\n      ))}\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default ScheduleManagement;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}