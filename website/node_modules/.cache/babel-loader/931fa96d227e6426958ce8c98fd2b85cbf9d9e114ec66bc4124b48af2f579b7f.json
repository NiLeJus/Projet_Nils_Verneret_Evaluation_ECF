{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\nilsv\\\\Documents\\\\2_TRAVAIL\\\\WEB_DEV\\\\EVAL_ECF\\\\projet\\\\website\\\\src\\\\components\\\\admin\\\\AdminConnexionPannel.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport Button from \"react-bootstrap/Button\";\nimport Form from \"react-bootstrap/Form\";\nimport axios from \"axios\"; // Assurez-vous d'installer axios avec `npm install axios`\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction AdminConnexionPannel() {\n  _s();\n  const [email, setEmail] = useState(\"\"); // État pour l'email\n  const [password, setPassword] = useState(\"\"); // État pour le mot de passe\n\n  const handleSubmit = async event => {\n    event.preventDefault(); // Empêche le comportement par défaut du formulaire\n\n    try {\n      // Remplacer 'url_de_votre_api' par l'URL de votre API\n      const response = await axios.post(\"http://localhost:5001/api/admin/login\", {\n        email,\n        password\n      });\n      console.log(response.data); // Traiter la réponse ici\n      // Vous pouvez rediriger l'utilisateur ou afficher un message de succès\n    } catch (error) {\n      console.error(\"Erreur de connexion : \", error.response ? error.response.data : error.message);\n      // Afficher un message d'erreur à l'utilisateur\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(Form, {\n    onSubmit: handleSubmit,\n    children: [/*#__PURE__*/_jsxDEV(Form.Group, {\n      className: \"mb-3\",\n      controlId: \"formBasicEmail\",\n      children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n        children: \"Email address\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n        type: \"email\",\n        placeholder: \"Enter email\",\n        value: email,\n        onChange: e => setEmail(e.target.value) // Mettre à jour l'état de l'email\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Form.Text, {\n        className: \"text-muted\",\n        children: \"We'll never share your email with anyone else.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n      className: \"mb-3\",\n      controlId: \"formBasicPassword\",\n      children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n        children: \"Password\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n        type: \"password\",\n        placeholder: \"Password\",\n        value: password,\n        onChange: e => setPassword(e.target.value) // Mettre à jour l'état du mot de passe\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      variant: \"primary\",\n      type: \"submit\",\n      children: [\" \", \"Submit\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 32,\n    columnNumber: 5\n  }, this);\n}\n_s(AdminConnexionPannel, \"3B3pqDcVnkT+z/sPK6Z9zQsLP+s=\");\n_c = AdminConnexionPannel;\nexport default AdminConnexionPannel;\nvar _c;\n$RefreshReg$(_c, \"AdminConnexionPannel\");","map":{"version":3,"names":["React","useState","Button","Form","axios","jsxDEV","_jsxDEV","AdminConnexionPannel","_s","email","setEmail","password","setPassword","handleSubmit","event","preventDefault","response","post","console","log","data","error","message","onSubmit","children","Group","className","controlId","Label","fileName","_jsxFileName","lineNumber","columnNumber","Control","type","placeholder","value","onChange","e","target","Text","variant","_c","$RefreshReg$"],"sources":["C:/Users/nilsv/Documents/2_TRAVAIL/WEB_DEV/EVAL_ECF/projet/website/src/components/admin/AdminConnexionPannel.js"],"sourcesContent":["import React, { useState } from \"react\";\r\nimport Button from \"react-bootstrap/Button\";\r\nimport Form from \"react-bootstrap/Form\";\r\nimport axios from \"axios\"; // Assurez-vous d'installer axios avec `npm install axios`\r\n\r\nfunction AdminConnexionPannel() {\r\n  const [email, setEmail] = useState(\"\"); // État pour l'email\r\n  const [password, setPassword] = useState(\"\"); // État pour le mot de passe\r\n\r\n  const handleSubmit = async (event) => {\r\n    event.preventDefault(); // Empêche le comportement par défaut du formulaire\r\n\r\n    try {\r\n      // Remplacer 'url_de_votre_api' par l'URL de votre API\r\n      const response = await axios.post(\r\n        \"http://localhost:5001/api/admin/login\",\r\n        { email, password }\r\n      );\r\n      console.log(response.data); // Traiter la réponse ici\r\n      // Vous pouvez rediriger l'utilisateur ou afficher un message de succès\r\n    } catch (error) {\r\n      console.error(\r\n        \"Erreur de connexion : \",\r\n        error.response ? error.response.data : error.message\r\n      );\r\n      // Afficher un message d'erreur à l'utilisateur\r\n    }\r\n  };\r\n\r\n\r\n  return (\r\n    <Form onSubmit={handleSubmit}>\r\n      <Form.Group\r\n        className=\"mb-3\"\r\n        controlId=\"formBasicEmail\"\r\n      >\r\n        <Form.Label>Email address</Form.Label>\r\n        <Form.Control\r\n          type=\"email\"\r\n          placeholder=\"Enter email\"\r\n          value={email}\r\n          onChange={(e) => setEmail(e.target.value)} // Mettre à jour l'état de l'email\r\n        />\r\n        <Form.Text className=\"text-muted\">\r\n          We'll never share your email with anyone else.\r\n        </Form.Text>\r\n      </Form.Group>\r\n      <Form.Group\r\n        className=\"mb-3\"\r\n        controlId=\"formBasicPassword\"\r\n      >\r\n        <Form.Label>Password</Form.Label>\r\n        <Form.Control\r\n          type=\"password\"\r\n          placeholder=\"Password\"\r\n          value={password}\r\n          onChange={(e) => setPassword(e.target.value)} // Mettre à jour l'état du mot de passe\r\n        />\r\n      </Form.Group>\r\n      <Button\r\n        variant=\"primary\"\r\n        type=\"submit\"\r\n      >\r\n        {\" \"}\r\n        {/* Le type est \"submit\" pour soumettre le formulaire */}\r\n        Submit\r\n      </Button>\r\n    </Form>\r\n  );\r\n\r\n}\r\nexport default AdminConnexionPannel;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}