{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\nilsv\\\\Documents\\\\2_TRAVAIL\\\\WEB_DEV\\\\EVAL_ECF\\\\projet\\\\website\\\\src\\\\components\\\\vehicleRelated\\\\vehicleForm\\\\keyInfosForm\\\\VehicleTypeForm.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport { Button, Form } from \"react-bootstrap\";\nimport Select from \"react-select\";\nimport { capitalizeFirstLetter } from \"../../../../functions/capitalizeFirstLetter\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport const VehicleTypeForm = () => {\n  _s();\n  const [selectedVehicleType, setSelectedVehicleType] = useState(null);\n  const [vehicleTypes, setVehicleTypes] = useState([]);\n  useEffect(() => {\n    const fetchVehicleTypes = async () => {\n      try {\n        const response = await fetch(\"http://localhost:5001/api/vehicleTypes\");\n        const data = await response.json();\n        let seenTypes = {};\n        const transformedVehicleTypes = data.reduce((unique, vehicleType) => {\n          const typeName = vehicleType.vehicle_type_name.toLowerCase();\n          if (!seenTypes[typeName]) {\n            seenTypes[typeName] = true;\n            unique.push({\n              value: vehicleType.id.toString(),\n              label: capitalizeFirstLetter(vehicleType.vehicle_type_name)\n            });\n          }\n          return unique;\n        }, []);\n        setVehicleTypes(transformedVehicleTypes);\n      } catch (error) {\n        console.error(\"Error fetching vehicle types:\", error);\n      }\n    };\n    fetchVehicleTypes();\n  }, []); // Ajoutez un tableau de dépendances vide\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n      children: /*#__PURE__*/_jsxDEV(\"h3\", {\n        className: \"key-info-title\",\n        children: \"Types :\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Select, {\n      value: selectedVehicleType,\n      onChange: setSelectedVehicleType,\n      options: vehicleTypes,\n      isSearchable: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      onClick: handleOpenModal,\n      children: \"Ajouter une marque\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(AddBrandModal, {\n      show: showModal,\n      onHide: handleCloseModal\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n_s(VehicleTypeForm, \"XRroVimaKTeqndWzCeyrumK9vro=\");\n_c = VehicleTypeForm;\nexport default VehicleTypeForm;\nvar _c;\n$RefreshReg$(_c, \"VehicleTypeForm\");","map":{"version":3,"names":["React","useState","useEffect","Button","Form","Select","capitalizeFirstLetter","jsxDEV","_jsxDEV","Fragment","_Fragment","VehicleTypeForm","_s","selectedVehicleType","setSelectedVehicleType","vehicleTypes","setVehicleTypes","fetchVehicleTypes","response","fetch","data","json","seenTypes","transformedVehicleTypes","reduce","unique","vehicleType","typeName","vehicle_type_name","toLowerCase","push","value","id","toString","label","error","console","children","Label","className","fileName","_jsxFileName","lineNumber","columnNumber","onChange","options","isSearchable","onClick","handleOpenModal","AddBrandModal","show","showModal","onHide","handleCloseModal","_c","$RefreshReg$"],"sources":["C:/Users/nilsv/Documents/2_TRAVAIL/WEB_DEV/EVAL_ECF/projet/website/src/components/vehicleRelated/vehicleForm/keyInfosForm/VehicleTypeForm.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport { Button, Form } from \"react-bootstrap\";\r\nimport Select from \"react-select\";\r\nimport { capitalizeFirstLetter } from \"../../../../functions/capitalizeFirstLetter\";\r\n\r\nexport const VehicleTypeForm = () => {\r\n  const [selectedVehicleType, setSelectedVehicleType] = useState(null);\r\n  const [vehicleTypes, setVehicleTypes] = useState([]);\r\n\r\n  useEffect(() => {\r\n    const fetchVehicleTypes = async () => {\r\n      try {\r\n        const response = await fetch(\"http://localhost:5001/api/vehicleTypes\");\r\n        const data = await response.json();\r\n\r\n        let seenTypes = {};\r\n        const transformedVehicleTypes = data.reduce((unique, vehicleType) => {\r\n          const typeName = vehicleType.vehicle_type_name.toLowerCase();\r\n\r\n          if (!seenTypes[typeName]) {\r\n            seenTypes[typeName] = true;\r\n            unique.push({\r\n              value: vehicleType.id.toString(),\r\n              label: capitalizeFirstLetter(vehicleType.vehicle_type_name),\r\n            });\r\n          }\r\n          return unique;\r\n        }, []);\r\n\r\n        setVehicleTypes(transformedVehicleTypes);\r\n      } catch (error) {\r\n        console.error(\"Error fetching vehicle types:\", error);\r\n      }\r\n    };\r\n\r\n    fetchVehicleTypes();\r\n  }, []); // Ajoutez un tableau de dépendances vide\r\n\r\n  return (\r\n    <>\r\n      <Form.Label>\r\n        <h3 className=\"key-info-title\">Types :</h3>\r\n      </Form.Label>\r\n      <Select\r\n        value={selectedVehicleType}\r\n        onChange={setSelectedVehicleType}\r\n        options={vehicleTypes}\r\n        isSearchable\r\n      />\r\n        <Button onClick={handleOpenModal}>Ajouter une marque</Button>\r\n      <AddBrandModal\r\n        show={showModal}\r\n        onHide={handleCloseModal}\r\n      />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default VehicleTypeForm;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,SAASC,MAAM,EAAEC,IAAI,QAAQ,iBAAiB;AAC9C,OAAOC,MAAM,MAAM,cAAc;AACjC,SAASC,qBAAqB,QAAQ,6CAA6C;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAAA,SAAAC,QAAA,IAAAC,SAAA;AAEpF,OAAO,MAAMC,eAAe,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACnC,MAAM,CAACC,mBAAmB,EAAEC,sBAAsB,CAAC,GAAGb,QAAQ,CAAC,IAAI,CAAC;EACpE,MAAM,CAACc,YAAY,EAAEC,eAAe,CAAC,GAAGf,QAAQ,CAAC,EAAE,CAAC;EAEpDC,SAAS,CAAC,MAAM;IACd,MAAMe,iBAAiB,GAAG,MAAAA,CAAA,KAAY;MACpC,IAAI;QACF,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,wCAAwC,CAAC;QACtE,MAAMC,IAAI,GAAG,MAAMF,QAAQ,CAACG,IAAI,CAAC,CAAC;QAElC,IAAIC,SAAS,GAAG,CAAC,CAAC;QAClB,MAAMC,uBAAuB,GAAGH,IAAI,CAACI,MAAM,CAAC,CAACC,MAAM,EAAEC,WAAW,KAAK;UACnE,MAAMC,QAAQ,GAAGD,WAAW,CAACE,iBAAiB,CAACC,WAAW,CAAC,CAAC;UAE5D,IAAI,CAACP,SAAS,CAACK,QAAQ,CAAC,EAAE;YACxBL,SAAS,CAACK,QAAQ,CAAC,GAAG,IAAI;YAC1BF,MAAM,CAACK,IAAI,CAAC;cACVC,KAAK,EAAEL,WAAW,CAACM,EAAE,CAACC,QAAQ,CAAC,CAAC;cAChCC,KAAK,EAAE5B,qBAAqB,CAACoB,WAAW,CAACE,iBAAiB;YAC5D,CAAC,CAAC;UACJ;UACA,OAAOH,MAAM;QACf,CAAC,EAAE,EAAE,CAAC;QAENT,eAAe,CAACO,uBAAuB,CAAC;MAC1C,CAAC,CAAC,OAAOY,KAAK,EAAE;QACdC,OAAO,CAACD,KAAK,CAAC,+BAA+B,EAAEA,KAAK,CAAC;MACvD;IACF,CAAC;IAEDlB,iBAAiB,CAAC,CAAC;EACrB,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC;;EAER,oBACET,OAAA,CAAAE,SAAA;IAAA2B,QAAA,gBACE7B,OAAA,CAACJ,IAAI,CAACkC,KAAK;MAAAD,QAAA,eACT7B,OAAA;QAAI+B,SAAS,EAAC,gBAAgB;QAAAF,QAAA,EAAC;MAAO;QAAAG,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACjC,CAAC,eACbnC,OAAA,CAACH,MAAM;MACL0B,KAAK,EAAElB,mBAAoB;MAC3B+B,QAAQ,EAAE9B,sBAAuB;MACjC+B,OAAO,EAAE9B,YAAa;MACtB+B,YAAY;IAAA;MAAAN,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACb,CAAC,eACAnC,OAAA,CAACL,MAAM;MAAC4C,OAAO,EAAEC,eAAgB;MAAAX,QAAA,EAAC;IAAkB;MAAAG,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC,eAC/DnC,OAAA,CAACyC,aAAa;MACZC,IAAI,EAAEC,SAAU;MAChBC,MAAM,EAAEC;IAAiB;MAAAb,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC1B,CAAC;EAAA,eACF,CAAC;AAEP,CAAC;AAAC/B,EAAA,CAnDWD,eAAe;AAAA2C,EAAA,GAAf3C,eAAe;AAqD5B,eAAeA,eAAe;AAAC,IAAA2C,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}