{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\nilsv\\\\Documents\\\\2_TRAVAIL\\\\WEB_DEV\\\\EVAL_ECF\\\\projet\\\\website\\\\src\\\\components\\\\vehicleRelated\\\\vehicleForm\\\\keyInfosForm\\\\ColorForm.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport { Form } from \"react-bootstrap\";\nimport Select, { components } from \"react-select\";\nimport { capitalizeFirstLetter } from \"../../../../functions/capitalizeFirstLetter\";\nimport Button from \"react-bootstrap/Button\";\nimport AddColorModal from \"../../../addingEntries/AddColorModal\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst ColorOption = props => {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      display: \"flex\",\n      alignItems: \"center\"\n    },\n    onClick: () => props.selectOption(props.data),\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        width: \"20px\",\n        height: \"20px\",\n        backgroundColor: props.data.hex,\n        marginLeft: \"10px\",\n        marginRight: \"10px\"\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 7\n    }, this), props.data.label]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 12,\n    columnNumber: 5\n  }, this);\n};\n_c = ColorOption;\nexport const ColorForm = ({\n  onColorChange\n}) => {\n  _s();\n  const [showModal, setShowModal] = useState(false);\n  const handleOpenModal = () => setShowModal(true);\n  const handleCloseModal = () => setShowModal(false);\n  const [selectedColor, setSelectedColor] = useState(null);\n  const [colors, setColors] = useState([]);\n  const handleColorChange = selectedOption => {\n    setSelectedColor(selectedOption);\n    if (onColorChange) {\n      onColorChange(selectedOption.value); // Envoyer l'ID de la couleur au parent\n    }\n  };\n\n  const handleFetchColors = async () => {\n    try {\n      const response = await fetchColors;\n      const data = await response.json();\n      const transformedColors = data.map(color => ({\n        value: color.id.toString(),\n        label: capitalizeFirstLetter(color.name),\n        hex: color.hex // Ajoutez ceci pour utiliser la couleur dans le composant d'option personnalisé\n      }));\n\n      setColors(transformedColors);\n    } catch (error) {\n      console.error(\"Error fetching colors:\", error);\n    }\n  };\n  useEffect(() => {\n    handleFetchColors();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Select, {\n      value: selectedColor,\n      onChange: handleColorChange,\n      options: colors,\n      components: {\n        Option: ColorOption\n      },\n      isSearchable: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      className: \"mt-3\",\n      onClick: handleOpenModal,\n      children: \"Ajouter une couleur\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(AddColorModal, {\n      show: showModal,\n      onHide: handleCloseModal\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n_s(ColorForm, \"HhG0rODW54D0fdbpMR9TgdPQnWs=\");\n_c2 = ColorForm;\nexport default ColorForm;\nvar _c, _c2;\n$RefreshReg$(_c, \"ColorOption\");\n$RefreshReg$(_c2, \"ColorForm\");","map":{"version":3,"names":["React","useState","useEffect","Form","Select","components","capitalizeFirstLetter","Button","AddColorModal","jsxDEV","_jsxDEV","Fragment","_Fragment","ColorOption","props","style","display","alignItems","onClick","selectOption","data","children","width","height","backgroundColor","hex","marginLeft","marginRight","fileName","_jsxFileName","lineNumber","columnNumber","label","_c","ColorForm","onColorChange","_s","showModal","setShowModal","handleOpenModal","handleCloseModal","selectedColor","setSelectedColor","colors","setColors","handleColorChange","selectedOption","value","handleFetchColors","response","fetchColors","json","transformedColors","map","color","id","toString","name","error","console","onChange","options","Option","isSearchable","className","show","onHide","_c2","$RefreshReg$"],"sources":["C:/Users/nilsv/Documents/2_TRAVAIL/WEB_DEV/EVAL_ECF/projet/website/src/components/vehicleRelated/vehicleForm/keyInfosForm/ColorForm.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport { Form } from \"react-bootstrap\";\r\n\r\nimport Select, { components } from \"react-select\";\r\nimport { capitalizeFirstLetter } from \"../../../../functions/capitalizeFirstLetter\";\r\nimport Button from \"react-bootstrap/Button\";\r\n\r\nimport AddColorModal from \"../../../addingEntries/AddColorModal\";\r\n\r\nconst ColorOption = (props) => {\r\n  return (\r\n    <div\r\n      style={{ display: \"flex\", alignItems: \"center\" }}\r\n      onClick={() => props.selectOption(props.data)}\r\n    >\r\n      <div\r\n        style={{\r\n          width: \"20px\",\r\n          height: \"20px\",\r\n          backgroundColor: props.data.hex,\r\n          marginLeft: \"10px\",\r\n          marginRight: \"10px\",\r\n        }}\r\n      />\r\n      {props.data.label}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport const ColorForm = ({ onColorChange }) => {\r\n  const [showModal, setShowModal] = useState(false);\r\n  const handleOpenModal = () => setShowModal(true);\r\n  const handleCloseModal = () => setShowModal(false);\r\n  const [selectedColor, setSelectedColor] = useState(null);\r\n  const [colors, setColors] = useState([]);\r\n\r\n  const handleColorChange = (selectedOption) => {\r\n    setSelectedColor(selectedOption);\r\n    if (onColorChange) {\r\n      onColorChange(selectedOption.value); // Envoyer l'ID de la couleur au parent\r\n    }\r\n  };\r\n\r\n  const handleFetchColors = async () => {\r\n    try {\r\n      const response = await fetchColors;\r\n      const data = await response.json();\r\n\r\n      const transformedColors = data.map((color) => ({\r\n        value: color.id.toString(),\r\n        label: capitalizeFirstLetter(color.name),\r\n        hex: color.hex, // Ajoutez ceci pour utiliser la couleur dans le composant d'option personnalisé\r\n      }));\r\n\r\n      setColors(transformedColors);\r\n    } catch (error) {\r\n      console.error(\"Error fetching colors:\", error);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    handleFetchColors();\r\n  }, []);\r\n\r\n  return (\r\n    <>\r\n      <Select\r\n        value={selectedColor}\r\n        onChange={handleColorChange}\r\n        options={colors}\r\n        components={{ Option: ColorOption }}\r\n        isSearchable\r\n      />\r\n\r\n      <Button\r\n        className=\"mt-3\"\r\n        onClick={handleOpenModal}\r\n      >\r\n        Ajouter une couleur\r\n      </Button>\r\n      <AddColorModal\r\n        show={showModal}\r\n        onHide={handleCloseModal}\r\n      />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default ColorForm;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}