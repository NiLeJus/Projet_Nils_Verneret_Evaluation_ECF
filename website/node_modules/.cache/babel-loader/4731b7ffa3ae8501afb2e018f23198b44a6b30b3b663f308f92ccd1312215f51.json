{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\nilsv\\\\Documents\\\\2_TRAVAIL\\\\WEB_DEV\\\\EVAL_ECF\\\\projet\\\\website\\\\src\\\\screens\\\\Test.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport { Form } from \"react-bootstrap\";\nimport Select from \"react-select\";\nimport { capitalizeFirstLetter } from \"../functions/capitalizeFirstLetter\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst vehicleOptions = [{\n  value: \"addNewVehicleOptions\",\n  label: \"Ajouter une option de véhicule\"\n}];\nexport const Test = () => {\n  _s();\n  const [selectedOption, setSelectedOption] = useState(null);\n  const [options, setOptions] = useState(vehicleOptions); // Initialisation avec vehicleOptions\n\n  useEffect(() => {\n    const fetchOptions = async () => {\n      try {\n        const response = await fetch(\"http://localhost:5001/api/options\");\n        const data = await response.json();\n\n        // Transformer les données reçues pour qu'elles correspondent au format de vehicleOptions\n        const transformedOptions = data.map(option => ({\n          value: option.id.toString(),\n          // Assurez-vous que la valeur est une chaîne\n          label: capitalizeFirstLetter(option.name)\n        }));\n        setOptions(prevOptions => [...prevOptions, ...transformedOptions]);\n      } catch (error) {\n        console.error(\"Error fetching options:\", error);\n      }\n    };\n    fetchOptions();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n      children: /*#__PURE__*/_jsxDEV(\"h3\", {\n        className: \"key-info-title\",\n        children: \"Types :\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Select, {\n      value: selectedOption,\n      onChange: setSelectedOption,\n      options: options,\n      isMulti: true,\n      isSearchable: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n_s(Test, \"VDcSh1ObKw297qH7lZ76Im4I3J4=\");\n_c = Test;\nexport default Test;\nvar _c;\n$RefreshReg$(_c, \"Test\");","map":{"version":3,"names":["React","useState","useEffect","Form","Select","capitalizeFirstLetter","jsxDEV","_jsxDEV","Fragment","_Fragment","vehicleOptions","value","label","Test","_s","selectedOption","setSelectedOption","options","setOptions","fetchOptions","response","fetch","data","json","transformedOptions","map","option","id","toString","name","prevOptions","error","console","children","Label","className","fileName","_jsxFileName","lineNumber","columnNumber","onChange","isMulti","isSearchable","_c","$RefreshReg$"],"sources":["C:/Users/nilsv/Documents/2_TRAVAIL/WEB_DEV/EVAL_ECF/projet/website/src/screens/Test.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport { Form } from \"react-bootstrap\";\r\nimport Select from \"react-select\";\r\nimport { capitalizeFirstLetter } from \"../functions/capitalizeFirstLetter\";\r\n\r\n\r\nconst vehicleOptions = [\r\n  { value: \"addNewVehicleOptions\", label: \"Ajouter une option de véhicule\" },\r\n];\r\n\r\nexport const Test = () => {\r\n  const [selectedOption, setSelectedOption] = useState(null);\r\n\r\n  const [options, setOptions] = useState(vehicleOptions); // Initialisation avec vehicleOptions\r\n\r\n  useEffect(() => {\r\n    const fetchOptions = async () => {\r\n      try {\r\n        const response = await fetch(\"http://localhost:5001/api/options\");\r\n        const data = await response.json();\r\n\r\n        // Transformer les données reçues pour qu'elles correspondent au format de vehicleOptions\r\n        const transformedOptions = data.map(option => ({\r\n          value: option.id.toString(), // Assurez-vous que la valeur est une chaîne\r\n          label: capitalizeFirstLetter(option.name),\r\n        }));\r\n\r\n        setOptions(prevOptions => [...prevOptions, ...transformedOptions]);\r\n      } catch (error) {\r\n        console.error(\"Error fetching options:\", error);\r\n      }\r\n    };\r\n    fetchOptions();\r\n  }, []);\r\n\r\n  return (\r\n    <>\r\n      <Form.Label>\r\n        <h3 className=\"key-info-title\">Types :</h3>\r\n      </Form.Label>\r\n      <Select\r\n        value={selectedOption}\r\n        onChange={setSelectedOption}\r\n        options={options}\r\n        isMulti\r\n        isSearchable\r\n      />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Test;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,SAASC,IAAI,QAAQ,iBAAiB;AACtC,OAAOC,MAAM,MAAM,cAAc;AACjC,SAASC,qBAAqB,QAAQ,oCAAoC;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAAA,SAAAC,QAAA,IAAAC,SAAA;AAG3E,MAAMC,cAAc,GAAG,CACrB;EAAEC,KAAK,EAAE,sBAAsB;EAAEC,KAAK,EAAE;AAAiC,CAAC,CAC3E;AAED,OAAO,MAAMC,IAAI,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACxB,MAAM,CAACC,cAAc,EAAEC,iBAAiB,CAAC,GAAGf,QAAQ,CAAC,IAAI,CAAC;EAE1D,MAAM,CAACgB,OAAO,EAAEC,UAAU,CAAC,GAAGjB,QAAQ,CAACS,cAAc,CAAC,CAAC,CAAC;;EAExDR,SAAS,CAAC,MAAM;IACd,MAAMiB,YAAY,GAAG,MAAAA,CAAA,KAAY;MAC/B,IAAI;QACF,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,mCAAmC,CAAC;QACjE,MAAMC,IAAI,GAAG,MAAMF,QAAQ,CAACG,IAAI,CAAC,CAAC;;QAElC;QACA,MAAMC,kBAAkB,GAAGF,IAAI,CAACG,GAAG,CAACC,MAAM,KAAK;UAC7Cf,KAAK,EAAEe,MAAM,CAACC,EAAE,CAACC,QAAQ,CAAC,CAAC;UAAE;UAC7BhB,KAAK,EAAEP,qBAAqB,CAACqB,MAAM,CAACG,IAAI;QAC1C,CAAC,CAAC,CAAC;QAEHX,UAAU,CAACY,WAAW,IAAI,CAAC,GAAGA,WAAW,EAAE,GAAGN,kBAAkB,CAAC,CAAC;MACpE,CAAC,CAAC,OAAOO,KAAK,EAAE;QACdC,OAAO,CAACD,KAAK,CAAC,yBAAyB,EAAEA,KAAK,CAAC;MACjD;IACF,CAAC;IACDZ,YAAY,CAAC,CAAC;EAChB,CAAC,EAAE,EAAE,CAAC;EAEN,oBACEZ,OAAA,CAAAE,SAAA;IAAAwB,QAAA,gBACE1B,OAAA,CAACJ,IAAI,CAAC+B,KAAK;MAAAD,QAAA,eACT1B,OAAA;QAAI4B,SAAS,EAAC,gBAAgB;QAAAF,QAAA,EAAC;MAAO;QAAAG,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACjC,CAAC,eACbhC,OAAA,CAACH,MAAM;MACLO,KAAK,EAAEI,cAAe;MACtByB,QAAQ,EAAExB,iBAAkB;MAC5BC,OAAO,EAAEA,OAAQ;MACjBwB,OAAO;MACPC,YAAY;IAAA;MAAAN,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACb,CAAC;EAAA,eACF,CAAC;AAEP,CAAC;AAACzB,EAAA,CAvCWD,IAAI;AAAA8B,EAAA,GAAJ9B,IAAI;AAyCjB,eAAeA,IAAI;AAAC,IAAA8B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}