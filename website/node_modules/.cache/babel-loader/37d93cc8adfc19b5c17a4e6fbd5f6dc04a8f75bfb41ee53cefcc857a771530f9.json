{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\nilsv\\\\Documents\\\\2_TRAVAIL\\\\WEB_DEV\\\\EVAL_ECF\\\\projet\\\\website\\\\src\\\\sections\\\\TestimonySect.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport { fetchDisplayedTestimonials } from \"../serverRelated/ApiRequest\";\nimport { handleDateDifference } from \"../functions/handleDateDifference\";\nimport ratingStars from \"../functions/ratingStars\"; // Importez la fonction, pas le composant React\nimport Container from \"react-bootstrap/Container\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const TestimonySect = () => {\n  _s();\n  const [testimonials, setTestimonials] = useState([]);\n  useEffect(() => {\n    const getTestimonials = async () => {\n      try {\n        const data = await fetchDisplayedTestimonials();\n        setTestimonials(data);\n      } catch (error) {\n        console.error(\"Erreur lors de la récupération des témoignages :\", error);\n      }\n    };\n    getTestimonials();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"section\", {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"bg-primary\",\n      children: /*#__PURE__*/_jsxDEV(Container, {\n        className: \"p-5\",\n        children: testimonials.map((testimony, index) => (console.log(testimony.note), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"bg-light testimony-card text-center m-auto mb\",\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            children: ratingStars(testimony.note)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 38,\n            columnNumber: 19\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"testimony-text\",\n            children: testimony.testimony\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 39,\n            columnNumber: 19\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"testimony-name\",\n              children: [\" \", testimony.name, \" \"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 41,\n              columnNumber: 20\n            }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 41,\n              columnNumber: 78\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"testimony-date\",\n              children: [\" Il y a \", handleDateDifference(testimony.posted_at)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 42,\n              columnNumber: 20\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 40,\n            columnNumber: 19\n          }, this)]\n        }, index, true, {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 17\n        }, this)))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 27,\n    columnNumber: 5\n  }, this);\n};\n_s(TestimonySect, \"UYLtUlzB1jaIo2tZmHWKjo4pYJY=\");\n_c = TestimonySect;\nvar _c;\n$RefreshReg$(_c, \"TestimonySect\");","map":{"version":3,"names":["React","useState","useEffect","fetchDisplayedTestimonials","handleDateDifference","ratingStars","Container","jsxDEV","_jsxDEV","TestimonySect","_s","testimonials","setTestimonials","getTestimonials","data","error","console","children","className","map","testimony","index","log","note","fileName","_jsxFileName","lineNumber","columnNumber","name","posted_at","_c","$RefreshReg$"],"sources":["C:/Users/nilsv/Documents/2_TRAVAIL/WEB_DEV/EVAL_ECF/projet/website/src/sections/TestimonySect.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport { fetchDisplayedTestimonials } from \"../serverRelated/ApiRequest\";\r\nimport { handleDateDifference } from \"../functions/handleDateDifference\";\r\nimport ratingStars from \"../functions/ratingStars\"; // Importez la fonction, pas le composant React\r\nimport Container from \"react-bootstrap/Container\";\r\n\r\nexport const TestimonySect = () => {\r\n  const [testimonials, setTestimonials] = useState([]);\r\n\r\n  useEffect(() => {\r\n    const getTestimonials = async () => {\r\n      try {\r\n        const data = await fetchDisplayedTestimonials();\r\n        setTestimonials(data);\r\n      } catch (error) {\r\n        console.error(\r\n          \"Erreur lors de la récupération des témoignages :\",\r\n          error\r\n        );\r\n      }\r\n    };\r\n\r\n    getTestimonials();\r\n  }, []);\r\n\r\n  return (\r\n    <section>\r\n      <div className=\"bg-primary\">\r\n        <Container className=\"p-5\">\r\n          {testimonials.map(\r\n            (testimony, index) => (\r\n              console.log(testimony.note),\r\n              (\r\n                <div\r\n                  key={index}\r\n                  className=\"bg-light testimony-card text-center m-auto mb\"\r\n                >\r\n                  <p>{ratingStars(testimony.note)}</p>\r\n                  <p className=\"testimony-text\">{testimony.testimony}</p>\r\n                  <p>\r\n                   <span className=\"testimony-name\"> {testimony.name} </span><br />\r\n                   <span className=\"testimony-date\"> Il y a {handleDateDifference(testimony.posted_at)}</span> \r\n                  </p>\r\n                </div>\r\n              )\r\n            )\r\n          )}\r\n        </Container>\r\n      </div>\r\n    </section>\r\n  );\r\n};\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,SAASC,0BAA0B,QAAQ,6BAA6B;AACxE,SAASC,oBAAoB,QAAQ,mCAAmC;AACxE,OAAOC,WAAW,MAAM,0BAA0B,CAAC,CAAC;AACpD,OAAOC,SAAS,MAAM,2BAA2B;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAElD,OAAO,MAAMC,aAAa,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACjC,MAAM,CAACC,YAAY,EAAEC,eAAe,CAAC,GAAGX,QAAQ,CAAC,EAAE,CAAC;EAEpDC,SAAS,CAAC,MAAM;IACd,MAAMW,eAAe,GAAG,MAAAA,CAAA,KAAY;MAClC,IAAI;QACF,MAAMC,IAAI,GAAG,MAAMX,0BAA0B,CAAC,CAAC;QAC/CS,eAAe,CAACE,IAAI,CAAC;MACvB,CAAC,CAAC,OAAOC,KAAK,EAAE;QACdC,OAAO,CAACD,KAAK,CACX,kDAAkD,EAClDA,KACF,CAAC;MACH;IACF,CAAC;IAEDF,eAAe,CAAC,CAAC;EACnB,CAAC,EAAE,EAAE,CAAC;EAEN,oBACEL,OAAA;IAAAS,QAAA,eACET,OAAA;MAAKU,SAAS,EAAC,YAAY;MAAAD,QAAA,eACzBT,OAAA,CAACF,SAAS;QAACY,SAAS,EAAC,KAAK;QAAAD,QAAA,EACvBN,YAAY,CAACQ,GAAG,CACf,CAACC,SAAS,EAAEC,KAAK,MACfL,OAAO,CAACM,GAAG,CAACF,SAAS,CAACG,IAAI,CAAC,eAEzBf,OAAA;UAEEU,SAAS,EAAC,+CAA+C;UAAAD,QAAA,gBAEzDT,OAAA;YAAAS,QAAA,EAAIZ,WAAW,CAACe,SAAS,CAACG,IAAI;UAAC;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAI,CAAC,eACpCnB,OAAA;YAAGU,SAAS,EAAC,gBAAgB;YAAAD,QAAA,EAAEG,SAAS,CAACA;UAAS;YAAAI,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAI,CAAC,eACvDnB,OAAA;YAAAS,QAAA,gBACCT,OAAA;cAAMU,SAAS,EAAC,gBAAgB;cAAAD,QAAA,GAAC,GAAC,EAACG,SAAS,CAACQ,IAAI,EAAC,GAAC;YAAA;cAAAJ,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAM,CAAC,eAAAnB,OAAA;cAAAgB,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAK,CAAC,eAChEnB,OAAA;cAAMU,SAAS,EAAC,gBAAgB;cAAAD,QAAA,GAAC,UAAQ,EAACb,oBAAoB,CAACgB,SAAS,CAACS,SAAS,CAAC;YAAA;cAAAL,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAO,CAAC;UAAA;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACzF,CAAC;QAAA,GARCN,KAAK;UAAAG,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OASP,CACN,CAEL;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACQ;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACT;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACC,CAAC;AAEd,CAAC;AAACjB,EAAA,CA7CWD,aAAa;AAAAqB,EAAA,GAAbrB,aAAa;AAAA,IAAAqB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}