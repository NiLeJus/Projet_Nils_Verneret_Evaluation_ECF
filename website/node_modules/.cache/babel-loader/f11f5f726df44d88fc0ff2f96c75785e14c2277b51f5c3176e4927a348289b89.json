{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\nilsv\\\\Documents\\\\2_TRAVAIL\\\\WEB_DEV\\\\EVAL_ECF\\\\projet\\\\website\\\\src\\\\components\\\\vehicleRelated\\\\vehicleForm\\\\keyInfosForm\\\\VehicleTypeForm.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport { Button, Form } from \"react-bootstrap\";\nimport Select from \"react-select\";\nimport { capitalizeFirstLetter } from \"../../../../functions/capitalizeFirstLetter\";\n\n// Renommez cette variable pour éviter les conflits\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nlet initialVehicleTypes = [\n  // { value: \"id\", label: \"VehicleType name\" },\n];\nexport const VehicleTypeForm = () => {\n  _s();\n  const [showModal, setShowModal] = useState(false);\n  const handleOpenModal = () => setShowModal(true);\n  const handleCloseModal = () => setShowModal(false);\n  const [selectedVehicleType, setSelectedVehicleType] = useState(null);\n  const [vehicleTypes, setVehicleTypes] = useState(initialVehicleTypes); // Utilisez le nom renommé ici\n\n  useEffect(() => {\n    const fetchVehicleTypes = async () => {\n      try {\n        const response = await fetch(\"http://localhost:5001/api/vehicleTypes\");\n        const data = await response.json();\n        const transformedVehicleTypes = data.map(vehicleType => ({\n          value: vehicleType.id.toString(),\n          label: capitalizeFirstLetter(vehicleType.name)\n        }));\n        setVehicleTypes(transformedVehicleTypes); // Modifiez pour remplacer complètement les marques\n      } catch (error) {\n        console.error(\"Error fetching options:\", error);\n      }\n    };\n    fetchVehicleTypes();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n      children: /*#__PURE__*/_jsxDEV(\"h3\", {\n        className: \"key-info-title\",\n        children: \"Types :\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Select, {\n      value: selectedVehicleType,\n      onChange: setSelectedVehicleType,\n      options: vehicleTypes,\n      isSearchable: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n_s(VehicleTypeForm, \"2PVhl2GAnixY3SrNNpVgb2Pi7iU=\");\n_c = VehicleTypeForm;\nexport default VehicleTypeForm;\nvar _c;\n$RefreshReg$(_c, \"VehicleTypeForm\");","map":{"version":3,"names":["React","useState","useEffect","Button","Form","Select","capitalizeFirstLetter","jsxDEV","_jsxDEV","Fragment","_Fragment","initialVehicleTypes","VehicleTypeForm","_s","showModal","setShowModal","handleOpenModal","handleCloseModal","selectedVehicleType","setSelectedVehicleType","vehicleTypes","setVehicleTypes","fetchVehicleTypes","response","fetch","data","json","transformedVehicleTypes","map","vehicleType","value","id","toString","label","name","error","console","children","Label","className","fileName","_jsxFileName","lineNumber","columnNumber","onChange","options","isSearchable","_c","$RefreshReg$"],"sources":["C:/Users/nilsv/Documents/2_TRAVAIL/WEB_DEV/EVAL_ECF/projet/website/src/components/vehicleRelated/vehicleForm/keyInfosForm/VehicleTypeForm.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport { Button, Form } from \"react-bootstrap\";\r\nimport Select from \"react-select\";\r\nimport { capitalizeFirstLetter } from \"../../../../functions/capitalizeFirstLetter\";\r\n\r\n// Renommez cette variable pour éviter les conflits\r\nlet initialVehicleTypes = [\r\n // { value: \"id\", label: \"VehicleType name\" },\r\n];\r\n\r\nexport const VehicleTypeForm = () => {\r\n  const [showModal, setShowModal] = useState(false);\r\n  const handleOpenModal = () => setShowModal(true);\r\n  const handleCloseModal = () => setShowModal(false);\r\n\r\n  const [selectedVehicleType, setSelectedVehicleType] = useState(null);\r\n  const [vehicleTypes, setVehicleTypes] = useState(initialVehicleTypes); // Utilisez le nom renommé ici\r\n\r\n  useEffect(() => {\r\n    const fetchVehicleTypes = async () => {\r\n      try {\r\n        const response = await fetch(\"http://localhost:5001/api/vehicleTypes\");\r\n        const data = await response.json();\r\n\r\n        const transformedVehicleTypes = data.map(vehicleType => ({\r\n          value: vehicleType.id.toString(),\r\n          label: capitalizeFirstLetter(vehicleType.name),\r\n        }));\r\n\r\n        setVehicleTypes(transformedVehicleTypes); // Modifiez pour remplacer complètement les marques\r\n      } catch (error) {\r\n        console.error(\"Error fetching options:\", error);\r\n      }\r\n    };\r\n    fetchVehicleTypes();\r\n  }, []);\r\n\r\n  return (\r\n    <>\r\n      <Form.Label>\r\n        <h3 className=\"key-info-title\">Types :</h3>\r\n      </Form.Label>\r\n      <Select\r\n        value={selectedVehicleType}\r\n        onChange={setSelectedVehicleType}\r\n        options={vehicleTypes}\r\n        isSearchable\r\n      />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default VehicleTypeForm;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,SAASC,MAAM,EAAEC,IAAI,QAAQ,iBAAiB;AAC9C,OAAOC,MAAM,MAAM,cAAc;AACjC,SAASC,qBAAqB,QAAQ,6CAA6C;;AAEnF;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAAA,SAAAC,QAAA,IAAAC,SAAA;AACA,IAAIC,mBAAmB,GAAG;EACzB;AAAA,CACA;AAED,OAAO,MAAMC,eAAe,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACnC,MAAM,CAACC,SAAS,EAAEC,YAAY,CAAC,GAAGd,QAAQ,CAAC,KAAK,CAAC;EACjD,MAAMe,eAAe,GAAGA,CAAA,KAAMD,YAAY,CAAC,IAAI,CAAC;EAChD,MAAME,gBAAgB,GAAGA,CAAA,KAAMF,YAAY,CAAC,KAAK,CAAC;EAElD,MAAM,CAACG,mBAAmB,EAAEC,sBAAsB,CAAC,GAAGlB,QAAQ,CAAC,IAAI,CAAC;EACpE,MAAM,CAACmB,YAAY,EAAEC,eAAe,CAAC,GAAGpB,QAAQ,CAACU,mBAAmB,CAAC,CAAC,CAAC;;EAEvET,SAAS,CAAC,MAAM;IACd,MAAMoB,iBAAiB,GAAG,MAAAA,CAAA,KAAY;MACpC,IAAI;QACF,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,wCAAwC,CAAC;QACtE,MAAMC,IAAI,GAAG,MAAMF,QAAQ,CAACG,IAAI,CAAC,CAAC;QAElC,MAAMC,uBAAuB,GAAGF,IAAI,CAACG,GAAG,CAACC,WAAW,KAAK;UACvDC,KAAK,EAAED,WAAW,CAACE,EAAE,CAACC,QAAQ,CAAC,CAAC;UAChCC,KAAK,EAAE3B,qBAAqB,CAACuB,WAAW,CAACK,IAAI;QAC/C,CAAC,CAAC,CAAC;QAEHb,eAAe,CAACM,uBAAuB,CAAC,CAAC,CAAC;MAC5C,CAAC,CAAC,OAAOQ,KAAK,EAAE;QACdC,OAAO,CAACD,KAAK,CAAC,yBAAyB,EAAEA,KAAK,CAAC;MACjD;IACF,CAAC;IACDb,iBAAiB,CAAC,CAAC;EACrB,CAAC,EAAE,EAAE,CAAC;EAEN,oBACEd,OAAA,CAAAE,SAAA;IAAA2B,QAAA,gBACE7B,OAAA,CAACJ,IAAI,CAACkC,KAAK;MAAAD,QAAA,eACT7B,OAAA;QAAI+B,SAAS,EAAC,gBAAgB;QAAAF,QAAA,EAAC;MAAO;QAAAG,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACjC,CAAC,eACbnC,OAAA,CAACH,MAAM;MACLyB,KAAK,EAAEZ,mBAAoB;MAC3B0B,QAAQ,EAAEzB,sBAAuB;MACjC0B,OAAO,EAAEzB,YAAa;MACtB0B,YAAY;IAAA;MAAAN,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACb,CAAC;EAAA,eACF,CAAC;AAEP,CAAC;AAAC9B,EAAA,CAxCWD,eAAe;AAAAmC,EAAA,GAAfnC,eAAe;AA0C5B,eAAeA,eAAe;AAAC,IAAAmC,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}