{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\nilsv\\\\Documents\\\\2_TRAVAIL\\\\WEB_DEV\\\\EVAL_ECF\\\\projet\\\\website\\\\src\\\\components\\\\vehicleRelated\\\\vehicleForm\\\\keyInfosForm\\\\BrandForm.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport { Button, Form } from \"react-bootstrap\";\nimport Select from \"react-select\";\nimport { capitalizeFirstLetter } from \"../../../../functions/capitalizeFirstLetter\";\nimport AddBrandModal from \"../../../addingEntries/AddBrandModal\";\nimport { fetchBrands } from \"../../../../serverRelated/ApiRequest\";\n// Renommez cette variable pour éviter les conflits\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nlet initialBrands = [\n  // { value: \"id\", label: \"Brand name\" },\n];\nexport const BrandForm = ({\n  onBrandChange\n}) => {\n  _s();\n  const [showModal, setShowModal] = useState(false);\n  const handleOpenModal = () => setShowModal(true);\n  const handleCloseModal = () => setShowModal(false);\n  const [selectedBrand, setSelectedBrand] = useState(null);\n  const [brands, setBrands] = useState(initialBrands); // Utilisez le nom renommé ici\n\n  useEffect(() => {\n    const handleFetchBrands = async () => {\n      try {\n        const data = await fetchBrands();\n        const transformedBrands = data.map(brand => ({\n          value: brand.id.toString(),\n          label: capitalizeFirstLetter(brand.name)\n        }));\n        setBrands(transformedBrands); // Modifiez pour remplacer complètement les marques\n      } catch (error) {\n        console.error(\"Error fetching options:\", error);\n      }\n    };\n    handleFetchBrands();\n  }, []);\n  const handleBrandChange = selectedOption => {\n    setSelectedBrand(selectedOption);\n    if (onBrandChange) {\n      onBrandChange(selectedOption); // Envoyer l'objet sélectionné au parent\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Select, {\n      value: selectedBrand,\n      onChange: handleBrandChange,\n      options: brands,\n      isSearchable: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      onClick: handleOpenModal,\n      children: \"Ajouter une marque\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(AddBrandModal, {\n      show: showModal,\n      onHide: handleCloseModal\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n_s(BrandForm, \"zE7baQYPv7KmFb6sgbStRApkXBY=\");\n_c = BrandForm;\nexport default BrandForm;\nvar _c;\n$RefreshReg$(_c, \"BrandForm\");","map":{"version":3,"names":["React","useState","useEffect","Button","Form","Select","capitalizeFirstLetter","AddBrandModal","fetchBrands","jsxDEV","_jsxDEV","Fragment","_Fragment","initialBrands","BrandForm","onBrandChange","_s","showModal","setShowModal","handleOpenModal","handleCloseModal","selectedBrand","setSelectedBrand","brands","setBrands","handleFetchBrands","data","transformedBrands","map","brand","value","id","toString","label","name","error","console","handleBrandChange","selectedOption","children","onChange","options","isSearchable","fileName","_jsxFileName","lineNumber","columnNumber","onClick","show","onHide","_c","$RefreshReg$"],"sources":["C:/Users/nilsv/Documents/2_TRAVAIL/WEB_DEV/EVAL_ECF/projet/website/src/components/vehicleRelated/vehicleForm/keyInfosForm/BrandForm.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport { Button, Form } from \"react-bootstrap\";\r\nimport Select from \"react-select\";\r\nimport { capitalizeFirstLetter } from \"../../../../functions/capitalizeFirstLetter\";\r\nimport AddBrandModal from \"../../../addingEntries/AddBrandModal\";\r\nimport { fetchBrands } from \"../../../../serverRelated/ApiRequest\";\r\n// Renommez cette variable pour éviter les conflits\r\nlet initialBrands = [\r\n  // { value: \"id\", label: \"Brand name\" },\r\n];\r\n\r\nexport const BrandForm = ({ onBrandChange }) => {\r\n  const [showModal, setShowModal] = useState(false);\r\n  const handleOpenModal = () => setShowModal(true);\r\n  const handleCloseModal = () => setShowModal(false);\r\n\r\n  const [selectedBrand, setSelectedBrand] = useState(null);\r\n  const [brands, setBrands] = useState(initialBrands); // Utilisez le nom renommé ici\r\n\r\n  useEffect(() => {\r\n    const handleFetchBrands = async () => {\r\n      try {\r\n        const data = await fetchBrands();\r\n\r\n        const transformedBrands = data.map((brand) => ({\r\n          value: brand.id.toString(),\r\n          label: capitalizeFirstLetter(brand.name),\r\n        }));\r\n\r\n        setBrands(transformedBrands); // Modifiez pour remplacer complètement les marques\r\n      } catch (error) {\r\n        console.error(\"Error fetching options:\", error);\r\n      }\r\n    };\r\n    handleFetchBrands();\r\n  }, []);\r\n\r\n  const handleBrandChange = (selectedOption) => {\r\n    setSelectedBrand(selectedOption);\r\n    if (onBrandChange) {\r\n      onBrandChange(selectedOption); // Envoyer l'objet sélectionné au parent\r\n    }\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Select\r\n        value={selectedBrand}\r\n        onChange={handleBrandChange}\r\n        options={brands}\r\n        isSearchable\r\n      />\r\n      <Button onClick={handleOpenModal}>Ajouter une marque</Button>\r\n      <AddBrandModal\r\n        show={showModal}\r\n        onHide={handleCloseModal}\r\n      />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default BrandForm;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,SAASC,MAAM,EAAEC,IAAI,QAAQ,iBAAiB;AAC9C,OAAOC,MAAM,MAAM,cAAc;AACjC,SAASC,qBAAqB,QAAQ,6CAA6C;AACnF,OAAOC,aAAa,MAAM,sCAAsC;AAChE,SAASC,WAAW,QAAQ,sCAAsC;AAClE;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAAA,SAAAC,QAAA,IAAAC,SAAA;AACA,IAAIC,aAAa,GAAG;EAClB;AAAA,CACD;AAED,OAAO,MAAMC,SAAS,GAAGA,CAAC;EAAEC;AAAc,CAAC,KAAK;EAAAC,EAAA;EAC9C,MAAM,CAACC,SAAS,EAAEC,YAAY,CAAC,GAAGjB,QAAQ,CAAC,KAAK,CAAC;EACjD,MAAMkB,eAAe,GAAGA,CAAA,KAAMD,YAAY,CAAC,IAAI,CAAC;EAChD,MAAME,gBAAgB,GAAGA,CAAA,KAAMF,YAAY,CAAC,KAAK,CAAC;EAElD,MAAM,CAACG,aAAa,EAAEC,gBAAgB,CAAC,GAAGrB,QAAQ,CAAC,IAAI,CAAC;EACxD,MAAM,CAACsB,MAAM,EAAEC,SAAS,CAAC,GAAGvB,QAAQ,CAACY,aAAa,CAAC,CAAC,CAAC;;EAErDX,SAAS,CAAC,MAAM;IACd,MAAMuB,iBAAiB,GAAG,MAAAA,CAAA,KAAY;MACpC,IAAI;QACF,MAAMC,IAAI,GAAG,MAAMlB,WAAW,CAAC,CAAC;QAEhC,MAAMmB,iBAAiB,GAAGD,IAAI,CAACE,GAAG,CAAEC,KAAK,KAAM;UAC7CC,KAAK,EAAED,KAAK,CAACE,EAAE,CAACC,QAAQ,CAAC,CAAC;UAC1BC,KAAK,EAAE3B,qBAAqB,CAACuB,KAAK,CAACK,IAAI;QACzC,CAAC,CAAC,CAAC;QAEHV,SAAS,CAACG,iBAAiB,CAAC,CAAC,CAAC;MAChC,CAAC,CAAC,OAAOQ,KAAK,EAAE;QACdC,OAAO,CAACD,KAAK,CAAC,yBAAyB,EAAEA,KAAK,CAAC;MACjD;IACF,CAAC;IACDV,iBAAiB,CAAC,CAAC;EACrB,CAAC,EAAE,EAAE,CAAC;EAEN,MAAMY,iBAAiB,GAAIC,cAAc,IAAK;IAC5ChB,gBAAgB,CAACgB,cAAc,CAAC;IAChC,IAAIvB,aAAa,EAAE;MACjBA,aAAa,CAACuB,cAAc,CAAC,CAAC,CAAC;IACjC;EACF,CAAC;;EAED,oBACE5B,OAAA,CAAAE,SAAA;IAAA2B,QAAA,gBACE7B,OAAA,CAACL,MAAM;MACLyB,KAAK,EAAET,aAAc;MACrBmB,QAAQ,EAAEH,iBAAkB;MAC5BI,OAAO,EAAElB,MAAO;MAChBmB,YAAY;IAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACb,CAAC,eACFpC,OAAA,CAACP,MAAM;MAAC4C,OAAO,EAAE5B,eAAgB;MAAAoB,QAAA,EAAC;IAAkB;MAAAI,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC,eAC7DpC,OAAA,CAACH,aAAa;MACZyC,IAAI,EAAE/B,SAAU;MAChBgC,MAAM,EAAE7B;IAAiB;MAAAuB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC1B,CAAC;EAAA,eACF,CAAC;AAEP,CAAC;AAAC9B,EAAA,CAhDWF,SAAS;AAAAoC,EAAA,GAATpC,SAAS;AAkDtB,eAAeA,SAAS;AAAC,IAAAoC,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}