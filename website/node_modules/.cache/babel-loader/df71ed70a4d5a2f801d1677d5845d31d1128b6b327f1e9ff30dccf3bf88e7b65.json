{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\nilsv\\\\Documents\\\\2_TRAVAIL\\\\WEB_DEV\\\\EVAL_ECF\\\\projet\\\\website\\\\src\\\\screens\\\\Test.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport { Carousel, Container, Image } from \"react-bootstrap\";\nimport { Row, Col } from \"react-bootstrap\";\nimport IconsKeyInfo from \"../components/vehicleRelated/vehicleDetails/VehicleDetailsIcons.js\";\nimport StickyDetails from \"../components/vehicleRelated/vehicleDetails/StickyDetails.js\";\nimport { Form, FormGroup } from \"react-bootstrap\";\nimport Select from \"react-select\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst vehicleOptions = [{\n  value: \"addNewVehicleOptions\",\n  label: \"Ajouter une option de véhicule\"\n}, {\n  value: \"strawberry\",\n  label: \"Strawberry\"\n}, {\n  value: \"vanilla\",\n  label: \"Vanilla\"\n}];\nexport const Test = () => {\n  _s();\n  const [selectedOption, setSelectedOption] = useState(null);\n  //For Carrousel\n\n  const [index, setIndex] = useState(0);\n  const handleSelect = (selectedIndex, e) => {\n    setIndex(selectedIndex);\n  };\n\n  //For\n  const [options, setOptions] = useState([]);\n  useEffect(() => {\n    const fetchOptions = async () => {\n      try {\n        const response = await fetch(\"http://localhost:5001/api/options\");\n        const data = await response.json();\n\n        // Transformer les données reçues pour qu'elles correspondent au format de vehicleOptions\n        const transformedOptions = data.map(option => ({\n          value: option.id.toString(),\n          label: option.name\n        }));\n\n        // Fusionner les options existantes avec les nouvelles\n        setOptions([...vehicleOptions, ...transformedOptions]);\n      } catch (error) {\n        console.error(\"Error fetching options:\", error);\n      }\n    };\n    fetchOptions();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n      children: /*#__PURE__*/_jsxDEV(\"h3\", {\n        className: \"key-info-title\",\n        children: \"Types :\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Select, {\n      defaultValue: selectedOption,\n      onChange: setSelectedOption,\n      options: vehicleOptions,\n      isMulti: true,\n      isSearchable: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n_s(Test, \"G4cHH7tc3YC9Qa8m58SLr4B3Vck=\");\n_c = Test;\nexport default Test;\nvar _c;\n$RefreshReg$(_c, \"Test\");","map":{"version":3,"names":["React","useState","useEffect","Carousel","Container","Image","Row","Col","IconsKeyInfo","StickyDetails","Form","FormGroup","Select","jsxDEV","_jsxDEV","Fragment","_Fragment","vehicleOptions","value","label","Test","_s","selectedOption","setSelectedOption","index","setIndex","handleSelect","selectedIndex","e","options","setOptions","fetchOptions","response","fetch","data","json","transformedOptions","map","option","id","toString","name","error","console","children","Label","className","fileName","_jsxFileName","lineNumber","columnNumber","defaultValue","onChange","isMulti","isSearchable","_c","$RefreshReg$"],"sources":["C:/Users/nilsv/Documents/2_TRAVAIL/WEB_DEV/EVAL_ECF/projet/website/src/screens/Test.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport { Carousel, Container, Image } from \"react-bootstrap\";\r\nimport { Row, Col } from \"react-bootstrap\";\r\nimport IconsKeyInfo from \"../components/vehicleRelated/vehicleDetails/VehicleDetailsIcons.js\";\r\nimport StickyDetails from \"../components/vehicleRelated/vehicleDetails/StickyDetails.js\";\r\nimport { Form, FormGroup } from \"react-bootstrap\";\r\nimport Select from \"react-select\";\r\n\r\nconst vehicleOptions = [\r\n  { value: \"addNewVehicleOptions\", label: \"Ajouter une option de véhicule\" },\r\n  { value: \"strawberry\", label: \"Strawberry\" },\r\n  { value: \"vanilla\", label: \"Vanilla\" },\r\n];\r\n\r\nexport const Test = () => {\r\n  const [selectedOption, setSelectedOption] = useState(null);\r\n  //For Carrousel\r\n\r\n  const [index, setIndex] = useState(0);\r\n  const handleSelect = (selectedIndex, e) => {\r\n    setIndex(selectedIndex);\r\n  };\r\n\r\n  //For\r\n  const [options, setOptions] = useState([]);\r\n\r\n  useEffect(() => {\r\n    const fetchOptions = async () => {\r\n      try {\r\n        const response = await fetch(\"http://localhost:5001/api/options\");\r\n        const data = await response.json();\r\n\r\n        // Transformer les données reçues pour qu'elles correspondent au format de vehicleOptions\r\n        const transformedOptions = data.map((option) => ({\r\n          value: option.id.toString(),\r\n          label: option.name,\r\n        }));\r\n\r\n        // Fusionner les options existantes avec les nouvelles\r\n        setOptions([...vehicleOptions, ...transformedOptions]);\r\n      } catch (error) {\r\n        console.error(\"Error fetching options:\", error);\r\n      }\r\n    };\r\n    fetchOptions();\r\n  }, []);\r\n\r\n  return (\r\n    <>\r\n      <Form.Label>\r\n        <h3 className=\"key-info-title\">Types :</h3>\r\n      </Form.Label>\r\n      <Select\r\n        defaultValue={selectedOption}\r\n        onChange={setSelectedOption}\r\n        options={vehicleOptions}\r\n        isMulti\r\n        isSearchable\r\n      />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Test;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,SAASC,QAAQ,EAAEC,SAAS,EAAEC,KAAK,QAAQ,iBAAiB;AAC5D,SAASC,GAAG,EAAEC,GAAG,QAAQ,iBAAiB;AAC1C,OAAOC,YAAY,MAAM,oEAAoE;AAC7F,OAAOC,aAAa,MAAM,8DAA8D;AACxF,SAASC,IAAI,EAAEC,SAAS,QAAQ,iBAAiB;AACjD,OAAOC,MAAM,MAAM,cAAc;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAAA,SAAAC,QAAA,IAAAC,SAAA;AAElC,MAAMC,cAAc,GAAG,CACrB;EAAEC,KAAK,EAAE,sBAAsB;EAAEC,KAAK,EAAE;AAAiC,CAAC,EAC1E;EAAED,KAAK,EAAE,YAAY;EAAEC,KAAK,EAAE;AAAa,CAAC,EAC5C;EAAED,KAAK,EAAE,SAAS;EAAEC,KAAK,EAAE;AAAU,CAAC,CACvC;AAED,OAAO,MAAMC,IAAI,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACxB,MAAM,CAACC,cAAc,EAAEC,iBAAiB,CAAC,GAAGtB,QAAQ,CAAC,IAAI,CAAC;EAC1D;;EAEA,MAAM,CAACuB,KAAK,EAAEC,QAAQ,CAAC,GAAGxB,QAAQ,CAAC,CAAC,CAAC;EACrC,MAAMyB,YAAY,GAAGA,CAACC,aAAa,EAAEC,CAAC,KAAK;IACzCH,QAAQ,CAACE,aAAa,CAAC;EACzB,CAAC;;EAED;EACA,MAAM,CAACE,OAAO,EAAEC,UAAU,CAAC,GAAG7B,QAAQ,CAAC,EAAE,CAAC;EAE1CC,SAAS,CAAC,MAAM;IACd,MAAM6B,YAAY,GAAG,MAAAA,CAAA,KAAY;MAC/B,IAAI;QACF,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,mCAAmC,CAAC;QACjE,MAAMC,IAAI,GAAG,MAAMF,QAAQ,CAACG,IAAI,CAAC,CAAC;;QAElC;QACA,MAAMC,kBAAkB,GAAGF,IAAI,CAACG,GAAG,CAAEC,MAAM,KAAM;UAC/CpB,KAAK,EAAEoB,MAAM,CAACC,EAAE,CAACC,QAAQ,CAAC,CAAC;UAC3BrB,KAAK,EAAEmB,MAAM,CAACG;QAChB,CAAC,CAAC,CAAC;;QAEH;QACAX,UAAU,CAAC,CAAC,GAAGb,cAAc,EAAE,GAAGmB,kBAAkB,CAAC,CAAC;MACxD,CAAC,CAAC,OAAOM,KAAK,EAAE;QACdC,OAAO,CAACD,KAAK,CAAC,yBAAyB,EAAEA,KAAK,CAAC;MACjD;IACF,CAAC;IACDX,YAAY,CAAC,CAAC;EAChB,CAAC,EAAE,EAAE,CAAC;EAEN,oBACEjB,OAAA,CAAAE,SAAA;IAAA4B,QAAA,gBACE9B,OAAA,CAACJ,IAAI,CAACmC,KAAK;MAAAD,QAAA,eACT9B,OAAA;QAAIgC,SAAS,EAAC,gBAAgB;QAAAF,QAAA,EAAC;MAAO;QAAAG,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACjC,CAAC,eACbpC,OAAA,CAACF,MAAM;MACLuC,YAAY,EAAE7B,cAAe;MAC7B8B,QAAQ,EAAE7B,iBAAkB;MAC5BM,OAAO,EAAEZ,cAAe;MACxBoC,OAAO;MACPC,YAAY;IAAA;MAAAP,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACb,CAAC;EAAA,eACF,CAAC;AAEP,CAAC;AAAC7B,EAAA,CA/CWD,IAAI;AAAAmC,EAAA,GAAJnC,IAAI;AAiDjB,eAAeA,IAAI;AAAC,IAAAmC,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}