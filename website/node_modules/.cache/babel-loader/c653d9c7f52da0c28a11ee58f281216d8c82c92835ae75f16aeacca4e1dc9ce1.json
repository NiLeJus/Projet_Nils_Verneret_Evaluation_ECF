{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\nilsv\\\\Documents\\\\2_TRAVAIL\\\\WEB_DEV\\\\EVAL_ECF\\\\projet\\\\website\\\\src\\\\components\\\\addingEntries\\\\AddVehicleModelModal.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, props } from \"react\";\nimport { Modal, Button, Form } from \"react-bootstrap\";\nimport CreatableSelect from \"react-select/creatable\";\nimport { capitalizeFirstLetter } from \"../../functions/capitalizeFirstLetter\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AddVehicleModelModal = ({\n  show,\n  onHide,\n  onModalClose\n}) => {\n  _s();\n  const [selectedVehicleModel, setSelectedVehicleModel] = useState(null);\n  const [selectedBrand, setSelectedBrand] = useState(null);\n  const [vehicleModels, setVehicleModels] = useState([]);\n  const [brands, setBrands] = useState([]);\n  const [description, setDescription] = useState(\"\");\n  const [doorsNumber, setDoorsNumber] = useState(\"\");\n  const [wheelsNumber, setWheelsNumber] = useState(\"\");\n  const [seatsNumber, setSeatsNumber] = useState(\"\");\n  const handleCloseModal = () => {\n    props.onHide(); // Appel de onHide pour fermer le modal\n    props.onModalClose(); // Appel de onModalClose pour mettre à jour la liste des modèles\n  };\n\n  let initialVehicleModels = [\n    // { value: \"id\", label: \"VehicleModel name\" },\n  ];\n  const fetchVehicleModels = async () => {\n    try {\n      const response = await fetch(\"http://localhost:5001/api/vehicleModels\");\n      const data = await response.json();\n      const transformedVehicleModels = data.map(vehicleModel => ({\n        value: vehicleModel.id.toString(),\n        label: capitalizeFirstLetter(vehicleModel.name),\n        description: vehicleModel.description,\n        door_number: vehicleModel.door_number,\n        wheel_number: vehicleModel.wheel_number,\n        seat_number: vehicleModel.seat_number,\n        brand_id: vehicleModel.brand_id\n      }));\n      setVehicleModels(transformedVehicleModels);\n    } catch (error) {\n      console.error(\"Error fetching vehicleModels:\", error);\n    }\n  };\n  const fetchBrands = async () => {\n    try {\n      const response = await fetch(\"http://localhost:5001/api/brands\");\n      const data = await response.json();\n      const transformedBrands = data.map(brand => ({\n        value: brand.id.toString(),\n        label: capitalizeFirstLetter(brand.name)\n      }));\n      setBrands(transformedBrands);\n    } catch (error) {\n      console.error(\"Error fetching options:\", error);\n    }\n  };\n  useEffect(() => {\n    fetchVehicleModels();\n    fetchBrands();\n  }, []);\n  const handleSelectVehicleModel = selectedVehicleModel => {\n    setSelectedVehicleModel(selectedVehicleModel);\n    if (selectedVehicleModel) {\n      const vehicleModelDetails = vehicleModels.find(vehicleModel => vehicleModel.value === selectedVehicleModel.value);\n      if (vehicleModelDetails) {\n        var _vehicleModelDetails$, _vehicleModelDetails$2, _vehicleModelDetails$3;\n        setDescription(vehicleModelDetails.description || \"\");\n        setDoorsNumber(((_vehicleModelDetails$ = vehicleModelDetails.door_number) === null || _vehicleModelDetails$ === void 0 ? void 0 : _vehicleModelDetails$.toString()) || \"\");\n        setWheelsNumber(((_vehicleModelDetails$2 = vehicleModelDetails.wheel_number) === null || _vehicleModelDetails$2 === void 0 ? void 0 : _vehicleModelDetails$2.toString()) || \"\");\n        setSeatsNumber(((_vehicleModelDetails$3 = vehicleModelDetails.seat_number) === null || _vehicleModelDetails$3 === void 0 ? void 0 : _vehicleModelDetails$3.toString()) || \"\");\n\n        // Trouver la marque correspondante\n        const brand = brands.find(brand => brand.value === vehicleModelDetails.brand_id.toString());\n        console.log(\"Selected brand: \", brand); // Débogage pour vérifier la marque sélectionnée\n        setSelectedBrand(brand || null);\n      }\n    } else {\n      // Réinitialiser les champs si aucun modèle n'est sélectionné\n      setDescription(\"\");\n      setDoorsNumber(\"\");\n      setWheelsNumber(\"\");\n      setSeatsNumber(\"\");\n      setSelectedBrand(null);\n    }\n  };\n  const handleDescriptionChange = e => {\n    setDescription(e.target.value);\n  };\n  const handleSeatsNumberChange = e => {\n    setSeatsNumber(e.target.value);\n  };\n  const handleWheelsNumberChange = e => {\n    setWheelsNumber(e.target.value);\n  };\n  const handleDoorsNumberChange = e => {\n    setDoorsNumber(e.target.value);\n  };\n  const validateForm = () => {\n    // Vérification que les champs sont remplis\n    const isFilled = selectedVehicleModel && selectedBrand && description.trim() !== \"\";\n\n    // Vérification que doorsNumber, wheelsNumber et seatsNumber sont des nombres valides\n    const isDoorsNumberValid = doorsNumber.trim() !== \"\" && Number.isFinite(Number(doorsNumber));\n    const isWheelsNumberValid = wheelsNumber.trim() !== \"\" && Number.isFinite(Number(wheelsNumber));\n    const isSeatsNumberValid = seatsNumber.trim() !== \"\" && Number.isFinite(Number(seatsNumber));\n    return isFilled && isDoorsNumberValid && isWheelsNumberValid && isSeatsNumberValid;\n  };\n  const handleAddVehicleModel = async () => {\n    if (validateForm()) {\n      try {\n        const newModel = {\n          name: selectedVehicleModel.label,\n          brand_id: parseInt(selectedBrand.value, 10),\n          description: description,\n          door_number: parseInt(doorsNumber, 10),\n          wheel_number: parseInt(wheelsNumber, 10),\n          seat_number: parseInt(seatsNumber, 10)\n        };\n\n        // Effectuer la requête d'ajout\n        const response = await fetch(\"http://localhost:5001/api/vehicleModels\", {\n          method: \"POST\",\n          headers: {\n            \"Content-Type\": \"application/json\"\n          },\n          body: JSON.stringify(newModel)\n        });\n        const data = await response.json();\n        console.log(data);\n\n        // Gérer la réponse ici, par exemple en actualisant la liste des modèles\n        // ou en affichant un message de succès\n      } catch (error) {\n        console.error(\"Error adding vehicleModel:\", error);\n      }\n    } else {\n      alert(\"Veuillez remplir tous les champs.\");\n    }\n  };\n  const handleModifyVehicleModel = async () => {\n    if (validateForm()) {\n      try {\n        // Création de l'objet avec les nouvelles valeurs\n        const updatedModel = {\n          name: selectedVehicleModel.label,\n          brand_id: parseInt(selectedBrand.value),\n          description: description,\n          door_number: parseInt(doorsNumber),\n          wheel_number: parseInt(wheelsNumber),\n          seat_number: parseInt(seatsNumber)\n        };\n\n        // Effectuer la requête de mise à jour\n        const response = await fetch(`http://localhost:5001/api/vehicleModels/${selectedVehicleModel.value}`, {\n          method: \"PUT\",\n          // ou PATCH, selon votre API\n          headers: {\n            \"Content-Type\": \"application/json\"\n          },\n          body: JSON.stringify(updatedModel)\n        });\n        const data = await response.json();\n        console.log(data);\n        fetchVehicleModels();\n\n        // Gérer la réponse ici, par exemple en actualisant la liste des modèles\n        // ou en affichant un message de succès\n      } catch (error) {\n        console.error(\"Error updating vehicleModel:\", error);\n      }\n    } else {\n      alert(\"Veuillez remplir tous les champs.\");\n    }\n  };\n  const handleModifyVehicleModelName = async () => {\n    if (selectedVehicleModel) {\n      const newName = prompt(\"Entrez le nouveau nom du modèle de véhicule :\", selectedVehicleModel.label);\n      if (newName && newName.trim() !== \"\") {\n        try {\n          // Création de l'objet avec la nouvelle valeur de nom\n          const updatedModelName = {\n            name: newName\n          };\n\n          // Effectuer la requête de mise à jour pour le nom\n          const response = await fetch(`http://localhost:5001/api/vehicleModels/${selectedVehicleModel.value}`, {\n            method: \"PUT\",\n            // ou PATCH, selon votre API\n            headers: {\n              \"Content-Type\": \"application/json\"\n            },\n            body: JSON.stringify(updatedModelName)\n          });\n          if (response.ok) {\n            const data = await response.json();\n            console.log(\"Nom du modèle mis à jour:\", data);\n            fetchVehicleModels();\n            // Mise à jour de l'état pour refléter le nouveau nom\n            setSelectedVehicleModel({\n              ...selectedVehicleModel,\n              label: newName\n            });\n          } else {\n            // Gérer les erreurs de la réponse ici\n            alert(\"Erreur lors de la mise à jour du nom du modèle\");\n          }\n        } catch (error) {\n          console.error(\"Error updating vehicle model name:\", error);\n          alert(\"Erreur lors de la mise à jour du nom du modèle\");\n        }\n      } else if (newName !== null) {\n        // Gérer le cas où l'utilisateur n'entre pas de nom valide\n        alert(\"Veuillez entrer un nom valide.\");\n      }\n    } else {\n      alert(\"Veuillez sélectionner un modèle de véhicule.\");\n    }\n  };\n  const handleDeleteVehicleModel = async modelId => {\n    if (modelId) {\n      const confirmDelete = window.confirm(\"Êtes-vous sûr de vouloir supprimer ce modèle de véhicule ?\");\n      if (confirmDelete) {\n        try {\n          const response = await fetch(`http://localhost:5001/api/vehicleModels/${modelId}`, {\n            method: 'DELETE'\n          });\n          if (response.ok) {\n            alert('Modèle de véhicule supprimé avec succès');\n            fetchVehicleModels(); // Mettre à jour la liste des modèles après la suppression\n          } else {\n            alert('Erreur lors de la suppression du modèle de véhicule');\n          }\n        } catch (error) {\n          console.error('Erreur lors de la suppression du modèle de véhicule:', error);\n          alert('Erreur lors de la suppression du modèle de véhicule');\n        }\n      }\n    } else {\n      alert('ID du modèle de véhicule non spécifié');\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(Modal, {\n    show: show,\n    onHide: onHide,\n    children: [/*#__PURE__*/_jsxDEV(Modal.Header, {\n      closeButton: true,\n      children: /*#__PURE__*/_jsxDEV(Modal.Title, {\n        children: \"Titre du modal\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 284,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 283,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Modal.Body, {\n      children: [/*#__PURE__*/_jsxDEV(CreatableSelect, {\n        isClearable: true,\n        isSearchable: true,\n        onChange: handleSelectVehicleModel,\n        options: vehicleModels\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 287,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(CreatableSelect, {\n        isClearable: true,\n        isSearchable: true,\n        onChange: setSelectedBrand,\n        options: brands,\n        value: selectedBrand\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 294,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        variant: \"primary\",\n        onClick: handleModifyVehicleModelName,\n        children: \"Modifier le nom du mod\\xE8le\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 302,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n        className: \"mb-3\",\n        children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n          children: \"Description\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 310,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n          as: \"textarea\",\n          rows: 5,\n          onChange: handleDescriptionChange // Utilisation du nouveau gestionnaire\n          ,\n          value: description\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 311,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n          type: \"number\",\n          placeholder: \"Nombre de portes\",\n          id: \"doorsNumber\",\n          value: doorsNumber,\n          onChange: handleDoorsNumberChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 317,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n          type: \"number\",\n          placeholder: \"Nombre de roues\",\n          id: \"wheelsNumber\",\n          value: wheelsNumber,\n          onChange: handleWheelsNumberChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 324,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n          type: \"number\",\n          placeholder: \"Nombre de si\\xE8ges\",\n          id: \"seatsNumber\",\n          value: seatsNumber,\n          onChange: handleSeatsNumberChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 332,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 309,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 286,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Modal.Footer, {\n      children: [/*#__PURE__*/_jsxDEV(Button, {\n        variant: \"primary\",\n        onClick: handleAddVehicleModel,\n        children: \"Ajouter\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 342,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        variant: \"orange\",\n        onClick: handleModifyVehicleModel,\n        children: \"Modifier\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 348,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        variant: \"danger\",\n        onClick: () => handleDeleteVehicleModel(selectedVehicleModel === null || selectedVehicleModel === void 0 ? void 0 : selectedVehicleModel.value),\n        children: \"Supprimer\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 354,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        variant: \"secondary\",\n        onClick: handleCloseModal,\n        children: [\" \", \"Fermer\", \" \"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 360,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 341,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 279,\n    columnNumber: 5\n  }, this);\n};\n_s(AddVehicleModelModal, \"q4VhW33PAP0mmU76AN7mg8EBjcw=\");\n_c = AddVehicleModelModal;\nexport default AddVehicleModelModal;\nvar _c;\n$RefreshReg$(_c, \"AddVehicleModelModal\");","map":{"version":3,"names":["React","useState","useEffect","props","Modal","Button","Form","CreatableSelect","capitalizeFirstLetter","jsxDEV","_jsxDEV","AddVehicleModelModal","show","onHide","onModalClose","_s","selectedVehicleModel","setSelectedVehicleModel","selectedBrand","setSelectedBrand","vehicleModels","setVehicleModels","brands","setBrands","description","setDescription","doorsNumber","setDoorsNumber","wheelsNumber","setWheelsNumber","seatsNumber","setSeatsNumber","handleCloseModal","initialVehicleModels","fetchVehicleModels","response","fetch","data","json","transformedVehicleModels","map","vehicleModel","value","id","toString","label","name","door_number","wheel_number","seat_number","brand_id","error","console","fetchBrands","transformedBrands","brand","handleSelectVehicleModel","vehicleModelDetails","find","_vehicleModelDetails$","_vehicleModelDetails$2","_vehicleModelDetails$3","log","handleDescriptionChange","e","target","handleSeatsNumberChange","handleWheelsNumberChange","handleDoorsNumberChange","validateForm","isFilled","trim","isDoorsNumberValid","Number","isFinite","isWheelsNumberValid","isSeatsNumberValid","handleAddVehicleModel","newModel","parseInt","method","headers","body","JSON","stringify","alert","handleModifyVehicleModel","updatedModel","handleModifyVehicleModelName","newName","prompt","updatedModelName","ok","handleDeleteVehicleModel","modelId","confirmDelete","window","confirm","children","Header","closeButton","Title","fileName","_jsxFileName","lineNumber","columnNumber","Body","isClearable","isSearchable","onChange","options","variant","onClick","Group","className","Label","Control","as","rows","type","placeholder","Footer","_c","$RefreshReg$"],"sources":["C:/Users/nilsv/Documents/2_TRAVAIL/WEB_DEV/EVAL_ECF/projet/website/src/components/addingEntries/AddVehicleModelModal.js"],"sourcesContent":["import React, { useState, useEffect, props } from \"react\";\r\nimport { Modal, Button, Form } from \"react-bootstrap\";\r\nimport CreatableSelect from \"react-select/creatable\";\r\nimport { capitalizeFirstLetter } from \"../../functions/capitalizeFirstLetter\";\r\n\r\nconst AddVehicleModelModal = ({ show, onHide, onModalClose }) => {\r\n  const [selectedVehicleModel, setSelectedVehicleModel] = useState(null);\r\n  const [selectedBrand, setSelectedBrand] = useState(null);\r\n  const [vehicleModels, setVehicleModels] = useState([]);\r\n  const [brands, setBrands] = useState([]);\r\n  const [description, setDescription] = useState(\"\");\r\n  const [doorsNumber, setDoorsNumber] = useState(\"\");\r\n  const [wheelsNumber, setWheelsNumber] = useState(\"\");\r\n  const [seatsNumber, setSeatsNumber] = useState(\"\");\r\n\r\n  const handleCloseModal = () => {\r\n    props.onHide();    // Appel de onHide pour fermer le modal\r\n    props.onModalClose(); // Appel de onModalClose pour mettre à jour la liste des modèles\r\n  };\r\n\r\n  let initialVehicleModels = [\r\n    // { value: \"id\", label: \"VehicleModel name\" },\r\n  ];\r\n\r\n  const fetchVehicleModels = async () => {\r\n    try {\r\n      const response = await fetch(\"http://localhost:5001/api/vehicleModels\");\r\n      const data = await response.json();\r\n\r\n      const transformedVehicleModels = data.map((vehicleModel) => ({\r\n        value: vehicleModel.id.toString(),\r\n        label: capitalizeFirstLetter(vehicleModel.name),\r\n        description: vehicleModel.description,\r\n        door_number: vehicleModel.door_number,\r\n        wheel_number: vehicleModel.wheel_number,\r\n        seat_number: vehicleModel.seat_number,\r\n        brand_id: vehicleModel.brand_id,\r\n      }));\r\n\r\n      setVehicleModels(transformedVehicleModels);\r\n    } catch (error) {\r\n      console.error(\"Error fetching vehicleModels:\", error);\r\n    }\r\n  };\r\n\r\n  const fetchBrands = async () => {\r\n    try {\r\n      const response = await fetch(\"http://localhost:5001/api/brands\");\r\n      const data = await response.json();\r\n      const transformedBrands = data.map((brand) => ({\r\n        value: brand.id.toString(),\r\n        label: capitalizeFirstLetter(brand.name),\r\n      }));\r\n      setBrands(transformedBrands);\r\n    } catch (error) {\r\n      console.error(\"Error fetching options:\", error);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    fetchVehicleModels();\r\n    fetchBrands();\r\n  }, []);\r\n\r\n  const handleSelectVehicleModel = (selectedVehicleModel) => {\r\n    setSelectedVehicleModel(selectedVehicleModel);\r\n\r\n    if (selectedVehicleModel) {\r\n      const vehicleModelDetails = vehicleModels.find(\r\n        (vehicleModel) => vehicleModel.value === selectedVehicleModel.value\r\n      );\r\n      if (vehicleModelDetails) {\r\n        setDescription(vehicleModelDetails.description || \"\");\r\n        setDoorsNumber(vehicleModelDetails.door_number?.toString() || \"\");\r\n        setWheelsNumber(vehicleModelDetails.wheel_number?.toString() || \"\");\r\n        setSeatsNumber(vehicleModelDetails.seat_number?.toString() || \"\");\r\n\r\n        // Trouver la marque correspondante\r\n        const brand = brands.find(\r\n          (brand) => brand.value === vehicleModelDetails.brand_id.toString()\r\n        );\r\n        console.log(\"Selected brand: \", brand); // Débogage pour vérifier la marque sélectionnée\r\n        setSelectedBrand(brand || null);\r\n      }\r\n    } else {\r\n      // Réinitialiser les champs si aucun modèle n'est sélectionné\r\n      setDescription(\"\");\r\n      setDoorsNumber(\"\");\r\n      setWheelsNumber(\"\");\r\n      setSeatsNumber(\"\");\r\n      setSelectedBrand(null);\r\n    }\r\n  };\r\n\r\n  const handleDescriptionChange = (e) => {\r\n    setDescription(e.target.value);\r\n  };\r\n\r\n  const handleSeatsNumberChange = (e) => {\r\n    setSeatsNumber(e.target.value);\r\n  };\r\n\r\n  const handleWheelsNumberChange = (e) => {\r\n    setWheelsNumber(e.target.value);\r\n  };\r\n\r\n  const handleDoorsNumberChange = (e) => {\r\n    setDoorsNumber(e.target.value);\r\n  };\r\n\r\n  const validateForm = () => {\r\n    // Vérification que les champs sont remplis\r\n    const isFilled =\r\n      selectedVehicleModel && selectedBrand && description.trim() !== \"\";\r\n\r\n    // Vérification que doorsNumber, wheelsNumber et seatsNumber sont des nombres valides\r\n    const isDoorsNumberValid =\r\n      doorsNumber.trim() !== \"\" && Number.isFinite(Number(doorsNumber));\r\n    const isWheelsNumberValid =\r\n      wheelsNumber.trim() !== \"\" && Number.isFinite(Number(wheelsNumber));\r\n    const isSeatsNumberValid =\r\n      seatsNumber.trim() !== \"\" && Number.isFinite(Number(seatsNumber));\r\n\r\n    return (\r\n      isFilled &&\r\n      isDoorsNumberValid &&\r\n      isWheelsNumberValid &&\r\n      isSeatsNumberValid\r\n    );\r\n  };\r\n\r\n  const handleAddVehicleModel = async () => {\r\n    if (validateForm()) {\r\n      try {\r\n        const newModel = {\r\n          name: selectedVehicleModel.label,\r\n          brand_id: parseInt(selectedBrand.value, 10),\r\n          description: description,\r\n          door_number: parseInt(doorsNumber, 10),\r\n          wheel_number: parseInt(wheelsNumber, 10),\r\n          seat_number: parseInt(seatsNumber, 10),\r\n        };\r\n\r\n        // Effectuer la requête d'ajout\r\n        const response = await fetch(\r\n          \"http://localhost:5001/api/vehicleModels\",\r\n          {\r\n            method: \"POST\",\r\n            headers: {\r\n              \"Content-Type\": \"application/json\",\r\n            },\r\n            body: JSON.stringify(newModel),\r\n          }\r\n        );\r\n\r\n        const data = await response.json();\r\n        console.log(data);\r\n\r\n        // Gérer la réponse ici, par exemple en actualisant la liste des modèles\r\n        // ou en affichant un message de succès\r\n      } catch (error) {\r\n        console.error(\"Error adding vehicleModel:\", error);\r\n      }\r\n    } else {\r\n      alert(\"Veuillez remplir tous les champs.\");\r\n    }\r\n  };\r\n\r\n  const handleModifyVehicleModel = async () => {\r\n    if (validateForm()) {\r\n      try {\r\n        // Création de l'objet avec les nouvelles valeurs\r\n        const updatedModel = {\r\n          name: selectedVehicleModel.label,\r\n          brand_id: parseInt(selectedBrand.value),\r\n          description: description,\r\n          door_number: parseInt(doorsNumber),\r\n          wheel_number: parseInt(wheelsNumber),\r\n          seat_number: parseInt(seatsNumber),\r\n        };\r\n\r\n        // Effectuer la requête de mise à jour\r\n        const response = await fetch(\r\n          `http://localhost:5001/api/vehicleModels/${selectedVehicleModel.value}`,\r\n          {\r\n            method: \"PUT\", // ou PATCH, selon votre API\r\n            headers: {\r\n              \"Content-Type\": \"application/json\",\r\n            },\r\n            body: JSON.stringify(updatedModel),\r\n          }\r\n        );\r\n\r\n        const data = await response.json();\r\n        console.log(data);\r\n        fetchVehicleModels();\r\n\r\n        // Gérer la réponse ici, par exemple en actualisant la liste des modèles\r\n        // ou en affichant un message de succès\r\n      } catch (error) {\r\n        console.error(\"Error updating vehicleModel:\", error);\r\n      }\r\n    } else {\r\n      alert(\"Veuillez remplir tous les champs.\");\r\n    }\r\n  };\r\n\r\n  const handleModifyVehicleModelName = async () => {\r\n    if (selectedVehicleModel) {\r\n      const newName = prompt(\"Entrez le nouveau nom du modèle de véhicule :\", selectedVehicleModel.label);\r\n  \r\n      if (newName && newName.trim() !== \"\") {\r\n        try {\r\n          // Création de l'objet avec la nouvelle valeur de nom\r\n          const updatedModelName = {\r\n            name: newName,\r\n          };\r\n  \r\n          // Effectuer la requête de mise à jour pour le nom\r\n          const response = await fetch(`http://localhost:5001/api/vehicleModels/${selectedVehicleModel.value}`, {\r\n            method: \"PUT\", // ou PATCH, selon votre API\r\n            headers: {\r\n              \"Content-Type\": \"application/json\",\r\n            },\r\n            body: JSON.stringify(updatedModelName),\r\n          });\r\n  \r\n          if (response.ok) {\r\n            const data = await response.json();\r\n            console.log(\"Nom du modèle mis à jour:\", data);\r\n            fetchVehicleModels();\r\n            // Mise à jour de l'état pour refléter le nouveau nom\r\n            setSelectedVehicleModel({ ...selectedVehicleModel, label: newName });\r\n          } else {\r\n            // Gérer les erreurs de la réponse ici\r\n            alert(\"Erreur lors de la mise à jour du nom du modèle\");\r\n          }\r\n        } catch (error) {\r\n          console.error(\"Error updating vehicle model name:\", error);\r\n          alert(\"Erreur lors de la mise à jour du nom du modèle\");\r\n        }\r\n      } else if (newName !== null) {\r\n        // Gérer le cas où l'utilisateur n'entre pas de nom valide\r\n        alert(\"Veuillez entrer un nom valide.\");\r\n      }\r\n    } else {\r\n      alert(\"Veuillez sélectionner un modèle de véhicule.\");\r\n    }\r\n  };\r\n\r\n  const handleDeleteVehicleModel = async (modelId) => {\r\n    if (modelId) {\r\n      const confirmDelete = window.confirm(\"Êtes-vous sûr de vouloir supprimer ce modèle de véhicule ?\");\r\n      if (confirmDelete) {\r\n        try {\r\n          const response = await fetch(`http://localhost:5001/api/vehicleModels/${modelId}`, {\r\n            method: 'DELETE',\r\n          });\r\n  \r\n          if (response.ok) {\r\n            alert('Modèle de véhicule supprimé avec succès');\r\n            fetchVehicleModels(); // Mettre à jour la liste des modèles après la suppression\r\n          } else {\r\n            alert('Erreur lors de la suppression du modèle de véhicule');\r\n          }\r\n        } catch (error) {\r\n          console.error('Erreur lors de la suppression du modèle de véhicule:', error);\r\n          alert('Erreur lors de la suppression du modèle de véhicule');\r\n        }\r\n      }\r\n    } else {\r\n      alert('ID du modèle de véhicule non spécifié');\r\n    }\r\n  };\r\n  \r\n\r\n\r\n  return (\r\n    <Modal\r\n      show={show}\r\n      onHide={onHide}\r\n    >\r\n      <Modal.Header closeButton>\r\n        <Modal.Title>Titre du modal</Modal.Title>\r\n      </Modal.Header>\r\n      <Modal.Body>\r\n        <CreatableSelect\r\n          isClearable\r\n          isSearchable\r\n          onChange={handleSelectVehicleModel}\r\n          options={vehicleModels}\r\n        />\r\n\r\n        <CreatableSelect\r\n          isClearable\r\n          isSearchable\r\n          onChange={setSelectedBrand}\r\n          options={brands}\r\n          value={selectedBrand}\r\n        />\r\n\r\n        <Button\r\n          variant=\"primary\"\r\n          onClick={handleModifyVehicleModelName}\r\n        >\r\n          Modifier le nom du modèle\r\n        </Button>\r\n\r\n        <Form.Group className=\"mb-3\">\r\n          <Form.Label>Description</Form.Label>\r\n          <Form.Control\r\n            as=\"textarea\"\r\n            rows={5}\r\n            onChange={handleDescriptionChange} // Utilisation du nouveau gestionnaire\r\n            value={description}\r\n          />\r\n          <Form.Control\r\n            type=\"number\"\r\n            placeholder=\"Nombre de portes\"\r\n            id=\"doorsNumber\"\r\n            value={doorsNumber}\r\n            onChange={handleDoorsNumberChange}\r\n          />\r\n          <Form.Control\r\n            type=\"number\"\r\n            placeholder=\"Nombre de roues\"\r\n            id=\"wheelsNumber\"\r\n            value={wheelsNumber}\r\n            onChange={handleWheelsNumberChange}\r\n          />\r\n\r\n          <Form.Control\r\n            type=\"number\"\r\n            placeholder=\"Nombre de sièges\"\r\n            id=\"seatsNumber\"\r\n            value={seatsNumber}\r\n            onChange={handleSeatsNumberChange}\r\n          />\r\n        </Form.Group>\r\n      </Modal.Body>\r\n      <Modal.Footer>\r\n        <Button\r\n          variant=\"primary\"\r\n          onClick={handleAddVehicleModel}\r\n        >\r\n          Ajouter\r\n        </Button>\r\n        <Button\r\n          variant=\"orange\"\r\n          onClick={handleModifyVehicleModel}\r\n        >\r\n          Modifier\r\n        </Button>\r\n        <Button\r\n          variant=\"danger\"\r\n          onClick={() => handleDeleteVehicleModel(selectedVehicleModel?.value)}\r\n        >\r\n          Supprimer\r\n        </Button>\r\n        <Button\r\n          variant=\"secondary\"\r\n          onClick={handleCloseModal}\r\n        >\r\n          {\" \"}\r\n          Fermer{\" \"}\r\n        </Button>\r\n      </Modal.Footer>\r\n    </Modal>\r\n  );\r\n};\r\n\r\nexport default AddVehicleModelModal;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}