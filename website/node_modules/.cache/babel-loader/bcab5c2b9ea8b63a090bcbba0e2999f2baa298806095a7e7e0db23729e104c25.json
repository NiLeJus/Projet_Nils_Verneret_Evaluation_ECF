{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\nilsv\\\\Documents\\\\2_TRAVAIL\\\\WEB_DEV\\\\EVAL_ECF\\\\projet\\\\website\\\\src\\\\components\\\\admin\\\\management\\\\ScheduleManagement.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport Table from \"react-bootstrap/Table\";\nimport Container from \"react-bootstrap/Container\";\nimport Button from \"react-bootstrap/Button\";\nimport { format, parseISO } from \"date-fns\";\nimport { fr } from \"date-fns/locale\";\nimport { scheduleGetAllDays } from \"../../../serverRelated/ApiRequest\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst getCurrentYear = () => {\n  const currentDate = new Date();\n  return currentDate.getFullYear();\n};\nexport const ScheduleManagement = () => {\n  _s();\n  const [preparedData, setPreparedData] = useState([]);\n  useEffect(() => {\n    const fetchData = async () => {\n      const year = getCurrentYear();\n      try {\n        const daysResponse = await scheduleGetAllDays(year);\n        setPreparedData(prepareDataForDisplay(daysResponse));\n      } catch (error) {\n        console.error(\"Erreur lors de la récupération des horaires:\", error);\n      }\n    };\n    fetchData();\n  }, []);\n  const prepareDataForDisplay = data => {\n    return Object.keys(data).map(weekNumber => data[weekNumber].slice(0, 7));\n  };\n  const toggleDayState = (weekIndex, dayIndex) => {\n    const newData = [...preparedData];\n    newData[weekIndex][dayIndex].isOpen = !newData[weekIndex][dayIndex].isOpen;\n    if (!newData[weekIndex][dayIndex].isOpen) {\n      ['morningOpening', 'morningClosing', 'afternoonOpening', 'afternoonClosing'].forEach(key => newData[weekIndex][dayIndex][key] = \"\");\n    }\n    setPreparedData(newData);\n  };\n  const handleInputChange = (event, weekIndex, dayIndex, key) => {\n    const newData = [...preparedData];\n    newData[weekIndex][dayIndex][key] = event.target.value !== \"\" ? event.target.value : null;\n    setPreparedData(newData);\n  };\n  const rowsHeaders = [\"Date\", \"État\", \"Ouverture Matin\", \"Fermeture Matin\", \"Ouverture Après-midi\", \"Fermeture Après-midi\", \"Actions\"];\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(Container, {\n      children: preparedData.map((week, index) => /*#__PURE__*/_jsxDEV(Table, {\n        striped: true,\n        bordered: true,\n        hover: true,\n        className: \"text-center mt-4\",\n        responsive: true,\n        children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n          children: /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [rowsHeaders.map((header, headerIndex) => /*#__PURE__*/_jsxDEV(\"th\", {\n              children: header\n            }, headerIndex, false, {\n              fileName: _jsxFileName,\n              lineNumber: 68,\n              columnNumber: 19\n            }, this)), index === 0 && /*#__PURE__*/_jsxDEV(\"th\", {\n              colSpan: \"7\",\n              children: [/*#__PURE__*/_jsxDEV(Button, {\n                variant: \"primary\",\n                className: \"me-2\",\n                children: \"Copier Semaine\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 72,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(Button, {\n                variant: \"secondary\",\n                children: \"Coller Semaine\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 73,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 71,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 66,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n          children: week.map((day, dayIndex) => /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: rowsHeaders.map((header, headerIndex) => {\n              let cellContent;\n              switch (header) {\n                case \"Date\":\n                  cellContent = format(parseISO(day.date), \"EEEE dd MMMM yyyy\", {\n                    locale: fr\n                  });\n                  break;\n                case \"État\":\n                  cellContent = /*#__PURE__*/_jsxDEV(Button, {\n                    onClick: () => toggleDayState(index, dayIndex),\n                    style: {\n                      backgroundColor: day.isOpen ? \"green\" : \"red\",\n                      color: \"white\"\n                    },\n                    children: day.isOpen ? \"Ouvert\" : \"Fermé\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 89,\n                    columnNumber: 27\n                  }, this);\n                  break;\n                case \"Ouverture Matin\":\n                case \"Fermeture Matin\":\n                case \"Ouverture Après-midi\":\n                case \"Fermeture Après-midi\":\n                  cellContent = /*#__PURE__*/_jsxDEV(\"input\", {\n                    type: \"time\",\n                    value: day[header.toLowerCase().replace(/\\s/g, \"\")] || \"\",\n                    onChange: e => handleInputChange(e, index, dayIndex, header.toLowerCase().replace(/\\s/g, \"\")),\n                    disabled: !day.isOpen\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 99,\n                    columnNumber: 27\n                  }, this);\n                  break;\n                case \"Actions\":\n                  cellContent = \"N/A\";\n                  break;\n                default:\n                  cellContent = null;\n              }\n              return /*#__PURE__*/_jsxDEV(\"td\", {\n                children: cellContent\n              }, headerIndex, false, {\n                fileName: _jsxFileName,\n                lineNumber: 113,\n                columnNumber: 28\n              }, this);\n            })\n          }, dayIndex, false, {\n            fileName: _jsxFileName,\n            lineNumber: 80,\n            columnNumber: 17\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 13\n        }, this)]\n      }, index, true, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n};\n_s(ScheduleManagement, \"iKWBrHeWYydjV2iquAVOGFhht/M=\");\n_c = ScheduleManagement;\nexport default ScheduleManagement;\nvar _c;\n$RefreshReg$(_c, \"ScheduleManagement\");","map":{"version":3,"names":["React","useState","useEffect","Table","Container","Button","format","parseISO","fr","scheduleGetAllDays","jsxDEV","_jsxDEV","Fragment","_Fragment","getCurrentYear","currentDate","Date","getFullYear","ScheduleManagement","_s","preparedData","setPreparedData","fetchData","year","daysResponse","prepareDataForDisplay","error","console","data","Object","keys","map","weekNumber","slice","toggleDayState","weekIndex","dayIndex","newData","isOpen","forEach","key","handleInputChange","event","target","value","rowsHeaders","children","week","index","striped","bordered","hover","className","responsive","header","headerIndex","fileName","_jsxFileName","lineNumber","columnNumber","colSpan","variant","day","cellContent","date","locale","onClick","style","backgroundColor","color","type","toLowerCase","replace","onChange","e","disabled","_c","$RefreshReg$"],"sources":["C:/Users/nilsv/Documents/2_TRAVAIL/WEB_DEV/EVAL_ECF/projet/website/src/components/admin/management/ScheduleManagement.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport Table from \"react-bootstrap/Table\";\r\nimport Container from \"react-bootstrap/Container\";\r\nimport Button from \"react-bootstrap/Button\";\r\nimport { format, parseISO } from \"date-fns\";\r\nimport { fr } from \"date-fns/locale\";\r\nimport { scheduleGetAllDays } from \"../../../serverRelated/ApiRequest\";\r\n\r\nconst getCurrentYear = () => {\r\n  const currentDate = new Date();\r\n  return currentDate.getFullYear();\r\n};\r\n\r\nexport const ScheduleManagement = () => {\r\n  const [preparedData, setPreparedData] = useState([]);\r\n\r\n  useEffect(() => {\r\n    const fetchData = async () => {\r\n      const year = getCurrentYear();\r\n      try {\r\n        const daysResponse = await scheduleGetAllDays(year);\r\n        setPreparedData(prepareDataForDisplay(daysResponse));\r\n      } catch (error) {\r\n        console.error(\"Erreur lors de la récupération des horaires:\", error);\r\n      }\r\n    };\r\n    fetchData();\r\n  }, []);\r\n\r\n  const prepareDataForDisplay = (data) => {\r\n    return Object.keys(data).map((weekNumber) => data[weekNumber].slice(0, 7));\r\n  };\r\n\r\n  const toggleDayState = (weekIndex, dayIndex) => {\r\n    const newData = [...preparedData];\r\n    newData[weekIndex][dayIndex].isOpen = !newData[weekIndex][dayIndex].isOpen;\r\n    if (!newData[weekIndex][dayIndex].isOpen) {\r\n      ['morningOpening', 'morningClosing', 'afternoonOpening', 'afternoonClosing']\r\n        .forEach(key => newData[weekIndex][dayIndex][key] = \"\");\r\n    }\r\n    setPreparedData(newData);\r\n  };\r\n\r\n  const handleInputChange = (event, weekIndex, dayIndex, key) => {\r\n    const newData = [...preparedData];\r\n    newData[weekIndex][dayIndex][key] = event.target.value !== \"\" ? event.target.value : null;\r\n    setPreparedData(newData);\r\n  };\r\n\r\n  const rowsHeaders = [\r\n    \"Date\",\r\n    \"État\",\r\n    \"Ouverture Matin\",\r\n    \"Fermeture Matin\",\r\n    \"Ouverture Après-midi\",\r\n    \"Fermeture Après-midi\",\r\n    \"Actions\",\r\n  ];\r\n\r\n  return (\r\n    <>\r\n      <Container>\r\n        {preparedData.map((week, index) => (\r\n          <Table key={index} striped bordered hover className=\"text-center mt-4\" responsive>\r\n            <thead>\r\n              <tr>\r\n                {rowsHeaders.map((header, headerIndex) => (\r\n                  <th key={headerIndex}>{header}</th>\r\n                ))}\r\n                {index === 0 && (\r\n                  <th colSpan=\"7\">\r\n                    <Button variant=\"primary\" className=\"me-2\">Copier Semaine</Button>\r\n                    <Button variant=\"secondary\">Coller Semaine</Button>\r\n                  </th>\r\n                )}\r\n              </tr>\r\n            </thead>\r\n            <tbody>\r\n              {week.map((day, dayIndex) => (\r\n                <tr key={dayIndex}>\r\n                  {rowsHeaders.map((header, headerIndex) => {\r\n                    let cellContent;\r\n                    switch (header) {\r\n                      case \"Date\":\r\n                        cellContent = format(parseISO(day.date), \"EEEE dd MMMM yyyy\", { locale: fr });\r\n                        break;\r\n                      case \"État\":\r\n                        cellContent = (\r\n                          <Button onClick={() => toggleDayState(index, dayIndex)} style={{ backgroundColor: day.isOpen ? \"green\" : \"red\", color: \"white\" }}>\r\n                            {day.isOpen ? \"Ouvert\" : \"Fermé\"}\r\n                          </Button>\r\n                        );\r\n                        break;\r\n                      case \"Ouverture Matin\":\r\n                      case \"Fermeture Matin\":\r\n                      case \"Ouverture Après-midi\":\r\n                      case \"Fermeture Après-midi\":\r\n                        cellContent = (\r\n                          <input\r\n                            type=\"time\"\r\n                            value={day[header.toLowerCase().replace(/\\s/g, \"\")] || \"\"}\r\n                            onChange={(e) => handleInputChange(e, index, dayIndex, header.toLowerCase().replace(/\\s/g, \"\"))}\r\n                            disabled={!day.isOpen}\r\n                          />\r\n                        );\r\n                        break;\r\n                      case \"Actions\":\r\n                        cellContent = \"N/A\";\r\n                        break;\r\n                      default:\r\n                        cellContent = null;\r\n                    }\r\n                    return <td key={headerIndex}>{cellContent}</td>;\r\n                  })}\r\n                </tr>\r\n              ))}\r\n            </tbody>\r\n          </Table>\r\n        ))}\r\n      </Container>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default ScheduleManagement;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}