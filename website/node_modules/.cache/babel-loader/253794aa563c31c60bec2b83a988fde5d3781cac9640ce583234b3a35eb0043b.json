{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\nilsv\\\\Documents\\\\2_TRAVAIL\\\\WEB_DEV\\\\EVAL_ECF\\\\projet\\\\website\\\\src\\\\components\\\\vehicleRelated\\\\vehicleForm\\\\keyInfosForm\\\\FuelForm.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport { Button, Form } from \"react-bootstrap\";\nimport Select from \"react-select\";\nimport { capitalizeFirstLetter } from \"../../../../functions/capitalizeFirstLetter\";\nimport AddFuelModal from \"../../../addingEntries/AddFuelModal\";\n// Renommez cette variable pour éviter les conflits\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nlet initialFuelTypes = [\n  // { value: \"id\", label: \"FuelType name\" },\n];\nexport const FuelTypeForm = () => {\n  _s();\n  const [selectedFuelType, setSelectedFuelType] = useState(null);\n  const [fuelTypes, setFuelTypes] = useState(initialFuelTypes); // Utilisez le nom renommé ici\n\n  useEffect(() => {\n    const fetchFuelTypes = async () => {\n      try {\n        const response = await fetch(\"http://localhost:5001/api/fuelTypes\");\n        const data = await response.json();\n        const transformedFuelTypes = data.map(fuelType => ({\n          value: fuelType.id.toString(),\n          label: capitalizeFirstLetter(fuelType.name)\n        }));\n        setFuelTypes(transformedFuelTypes); // Modifiez pour remplacer complètement les marques\n      } catch (error) {\n        console.error(\"Error fetching options:\", error);\n      }\n    };\n    fetchFuelTypes();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n      children: /*#__PURE__*/_jsxDEV(\"h3\", {\n        className: \"key-info-title\",\n        children: \"Types :\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Select, {\n      value: selectedFuelType,\n      onChange: setSelectedFuelType,\n      options: fuelTypes,\n      isSearchable: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      onClick: handleOpenModal,\n      children: \"Ajouter une marque\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(AddVehicleModelModal, {\n      show: showModal,\n      onHide: handleCloseModal,\n      onModalClose: onModalClose\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n_s(FuelTypeForm, \"5HgPm/+WkaJpevLEBf7KnxOnrXk=\");\n_c = FuelTypeForm;\nexport default FuelTypeForm;\nvar _c;\n$RefreshReg$(_c, \"FuelTypeForm\");","map":{"version":3,"names":["React","useState","useEffect","Button","Form","Select","capitalizeFirstLetter","AddFuelModal","jsxDEV","_jsxDEV","Fragment","_Fragment","initialFuelTypes","FuelTypeForm","_s","selectedFuelType","setSelectedFuelType","fuelTypes","setFuelTypes","fetchFuelTypes","response","fetch","data","json","transformedFuelTypes","map","fuelType","value","id","toString","label","name","error","console","children","Label","className","fileName","_jsxFileName","lineNumber","columnNumber","onChange","options","isSearchable","onClick","handleOpenModal","AddVehicleModelModal","show","showModal","onHide","handleCloseModal","onModalClose","_c","$RefreshReg$"],"sources":["C:/Users/nilsv/Documents/2_TRAVAIL/WEB_DEV/EVAL_ECF/projet/website/src/components/vehicleRelated/vehicleForm/keyInfosForm/FuelForm.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport { Button, Form } from \"react-bootstrap\";\r\nimport Select from \"react-select\";\r\nimport { capitalizeFirstLetter } from \"../../../../functions/capitalizeFirstLetter\";\r\nimport AddFuelModal from \"../../../addingEntries/AddFuelModal\";\r\n// Renommez cette variable pour éviter les conflits\r\nlet initialFuelTypes = [\r\n // { value: \"id\", label: \"FuelType name\" },\r\n];\r\n\r\nexport const FuelTypeForm = () => {\r\n\r\n  const [selectedFuelType, setSelectedFuelType] = useState(null);\r\n  const [fuelTypes, setFuelTypes] = useState(initialFuelTypes); // Utilisez le nom renommé ici\r\n\r\n  useEffect(() => {\r\n    const fetchFuelTypes = async () => {\r\n      try {\r\n        const response = await fetch(\"http://localhost:5001/api/fuelTypes\");\r\n        const data = await response.json();\r\n\r\n        const transformedFuelTypes = data.map(fuelType => ({\r\n          value: fuelType.id.toString(),\r\n          label: capitalizeFirstLetter(fuelType.name),\r\n        }));\r\n\r\n        setFuelTypes(transformedFuelTypes); // Modifiez pour remplacer complètement les marques\r\n      } catch (error) {\r\n        console.error(\"Error fetching options:\", error);\r\n      }\r\n    };\r\n    fetchFuelTypes();\r\n  }, []);\r\n\r\n  return (\r\n    <>\r\n      <Form.Label>\r\n        <h3 className=\"key-info-title\">Types :</h3>\r\n      </Form.Label>\r\n      <Select\r\n        value={selectedFuelType}\r\n        onChange={setSelectedFuelType}\r\n        options={fuelTypes}\r\n        isSearchable\r\n      />\r\n   <Button onClick={handleOpenModal}>Ajouter une marque</Button>\r\n      <AddVehicleModelModal\r\n        show={showModal}\r\n        onHide={handleCloseModal}\r\n        onModalClose={onModalClose}\r\n      />\r\n\r\n    </>\r\n  );\r\n};\r\n\r\nexport default FuelTypeForm;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,SAASC,MAAM,EAAEC,IAAI,QAAQ,iBAAiB;AAC9C,OAAOC,MAAM,MAAM,cAAc;AACjC,SAASC,qBAAqB,QAAQ,6CAA6C;AACnF,OAAOC,YAAY,MAAM,qCAAqC;AAC9D;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAAA,SAAAC,QAAA,IAAAC,SAAA;AACA,IAAIC,gBAAgB,GAAG;EACtB;AAAA,CACA;AAED,OAAO,MAAMC,YAAY,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAEhC,MAAM,CAACC,gBAAgB,EAAEC,mBAAmB,CAAC,GAAGf,QAAQ,CAAC,IAAI,CAAC;EAC9D,MAAM,CAACgB,SAAS,EAAEC,YAAY,CAAC,GAAGjB,QAAQ,CAACW,gBAAgB,CAAC,CAAC,CAAC;;EAE9DV,SAAS,CAAC,MAAM;IACd,MAAMiB,cAAc,GAAG,MAAAA,CAAA,KAAY;MACjC,IAAI;QACF,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,qCAAqC,CAAC;QACnE,MAAMC,IAAI,GAAG,MAAMF,QAAQ,CAACG,IAAI,CAAC,CAAC;QAElC,MAAMC,oBAAoB,GAAGF,IAAI,CAACG,GAAG,CAACC,QAAQ,KAAK;UACjDC,KAAK,EAAED,QAAQ,CAACE,EAAE,CAACC,QAAQ,CAAC,CAAC;UAC7BC,KAAK,EAAExB,qBAAqB,CAACoB,QAAQ,CAACK,IAAI;QAC5C,CAAC,CAAC,CAAC;QAEHb,YAAY,CAACM,oBAAoB,CAAC,CAAC,CAAC;MACtC,CAAC,CAAC,OAAOQ,KAAK,EAAE;QACdC,OAAO,CAACD,KAAK,CAAC,yBAAyB,EAAEA,KAAK,CAAC;MACjD;IACF,CAAC;IACDb,cAAc,CAAC,CAAC;EAClB,CAAC,EAAE,EAAE,CAAC;EAEN,oBACEV,OAAA,CAAAE,SAAA;IAAAuB,QAAA,gBACEzB,OAAA,CAACL,IAAI,CAAC+B,KAAK;MAAAD,QAAA,eACTzB,OAAA;QAAI2B,SAAS,EAAC,gBAAgB;QAAAF,QAAA,EAAC;MAAO;QAAAG,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACjC,CAAC,eACb/B,OAAA,CAACJ,MAAM;MACLsB,KAAK,EAAEZ,gBAAiB;MACxB0B,QAAQ,EAAEzB,mBAAoB;MAC9B0B,OAAO,EAAEzB,SAAU;MACnB0B,YAAY;IAAA;MAAAN,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACb,CAAC,eACL/B,OAAA,CAACN,MAAM;MAACyC,OAAO,EAAEC,eAAgB;MAAAX,QAAA,EAAC;IAAkB;MAAAG,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC,eAC1D/B,OAAA,CAACqC,oBAAoB;MACnBC,IAAI,EAAEC,SAAU;MAChBC,MAAM,EAAEC,gBAAiB;MACzBC,YAAY,EAAEA;IAAa;MAAAd,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC5B,CAAC;EAAA,eAEF,CAAC;AAEP,CAAC;AAAC1B,EAAA,CA5CWD,YAAY;AAAAuC,EAAA,GAAZvC,YAAY;AA8CzB,eAAeA,YAAY;AAAC,IAAAuC,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}