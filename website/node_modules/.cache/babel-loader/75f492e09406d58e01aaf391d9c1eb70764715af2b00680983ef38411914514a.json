{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\nilsv\\\\Documents\\\\2_TRAVAIL\\\\WEB_DEV\\\\EVAL_ECF\\\\projet\\\\website\\\\src\\\\components\\\\vehicleRelated\\\\vehicleForm\\\\keyInfosForm\\\\FuelForm.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport { Button, Form } from \"react-bootstrap\";\nimport Select from \"react-select\";\nimport { capitalizeFirstLetter } from \"../../../../functions/capitalizeFirstLetter\";\nimport AddFuelModal from \"../../../addingEntries/AddFuelModal\";\n// Renommez cette variable pour éviter les conflits\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nlet initialFuelTypes = [\n  // { value: \"id\", label: \"FuelType name\" },\n];\nexport const FuelTypeForm = () => {\n  _s();\n  const [showModal, setShowModal] = useState(false);\n  const handleOpenModal = () => setShowModal(true);\n  const handleCloseModal = () => {\n    setShowModal(false);\n    setSelectedFuelType(null);\n  };\n  const onModalClose = () => {\n    fetchFuelTypes(); // Ceci met à jour la liste des modèles\n  };\n\n  const [selectedFuelType, setSelectedFuelType] = useState(null);\n  const [fuelTypes, setFuelTypes] = useState(initialFuelTypes); // Utilisez le nom renommé ici\n\n  const fetchFuelTypes = async () => {\n    try {\n      const response = await fetch(\"http://localhost:5001/api/fuelTypes\");\n      const data = await response.json();\n      const transformedFuelTypes = data.map(fuelType => ({\n        value: fuelType.id.toString(),\n        label: capitalizeFirstLetter(fuelType.name)\n      }));\n      setFuelTypes(transformedFuelTypes); // Modifiez pour remplacer complètement les marques\n    } catch (error) {\n      console.error(\"Error fetching options:\", error);\n    }\n  };\n  useEffect(() => {\n    fetchFuelTypes();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n      children: /*#__PURE__*/_jsxDEV(\"h3\", {\n        className: \"key-info-title\",\n        children: \"Types :\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Select, {\n      value: selectedFuelType,\n      onChange: setSelectedFuelType,\n      options: fuelTypes,\n      isSearchable: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      onClick: handleOpenModal,\n      children: \"Ajouter une marque\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(AddFuelModal, {\n      show: showModal,\n      onHide: handleCloseModal,\n      onModalClose: onModalClose\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n_s(FuelTypeForm, \"O622tQ/k6EDgQQLvttNXq7UtKXI=\");\n_c = FuelTypeForm;\nexport default FuelTypeForm;\nvar _c;\n$RefreshReg$(_c, \"FuelTypeForm\");","map":{"version":3,"names":["React","useState","useEffect","Button","Form","Select","capitalizeFirstLetter","AddFuelModal","jsxDEV","_jsxDEV","Fragment","_Fragment","initialFuelTypes","FuelTypeForm","_s","showModal","setShowModal","handleOpenModal","handleCloseModal","setSelectedFuelType","onModalClose","fetchFuelTypes","selectedFuelType","fuelTypes","setFuelTypes","response","fetch","data","json","transformedFuelTypes","map","fuelType","value","id","toString","label","name","error","console","children","Label","className","fileName","_jsxFileName","lineNumber","columnNumber","onChange","options","isSearchable","onClick","show","onHide","_c","$RefreshReg$"],"sources":["C:/Users/nilsv/Documents/2_TRAVAIL/WEB_DEV/EVAL_ECF/projet/website/src/components/vehicleRelated/vehicleForm/keyInfosForm/FuelForm.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport { Button, Form } from \"react-bootstrap\";\r\nimport Select from \"react-select\";\r\nimport { capitalizeFirstLetter } from \"../../../../functions/capitalizeFirstLetter\";\r\nimport AddFuelModal from \"../../../addingEntries/AddFuelModal\";\r\n// Renommez cette variable pour éviter les conflits\r\nlet initialFuelTypes = [\r\n  // { value: \"id\", label: \"FuelType name\" },\r\n];\r\n\r\nexport const FuelTypeForm = () => {\r\n\r\n  const [showModal, setShowModal] = useState(false);\r\n  const handleOpenModal = () => setShowModal(true);\r\n\r\n\r\n  const handleCloseModal = () => {\r\n    setShowModal(false);\r\n    setSelectedFuelType(null);\r\n  };\r\n\r\n  const onModalClose = () => {\r\n    fetchFuelTypes(); // Ceci met à jour la liste des modèles\r\n  };\r\n\r\n  const [selectedFuelType, setSelectedFuelType] = useState(null);\r\n  const [fuelTypes, setFuelTypes] = useState(initialFuelTypes); // Utilisez le nom renommé ici\r\n\r\n  const fetchFuelTypes = async () => {\r\n    try {\r\n      const response = await fetch(\"http://localhost:5001/api/fuelTypes\");\r\n      const data = await response.json();\r\n\r\n      const transformedFuelTypes = data.map((fuelType) => ({\r\n        value: fuelType.id.toString(),\r\n        label: capitalizeFirstLetter(fuelType.name),\r\n      }));\r\n\r\n      setFuelTypes(transformedFuelTypes); // Modifiez pour remplacer complètement les marques\r\n    } catch (error) {\r\n      console.error(\"Error fetching options:\", error);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    fetchFuelTypes();\r\n  }, []);\r\n\r\n  return (\r\n    <>\r\n      <Form.Label>\r\n        <h3 className=\"key-info-title\">Types :</h3>\r\n      </Form.Label>\r\n      <Select\r\n        value={selectedFuelType}\r\n        onChange={setSelectedFuelType}\r\n        options={fuelTypes}\r\n        isSearchable\r\n      />\r\n      <Button onClick={handleOpenModal}>Ajouter une marque</Button>\r\n      <AddFuelModal\r\n        show={showModal}\r\n        onHide={handleCloseModal}\r\n        onModalClose={onModalClose}\r\n      />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default FuelTypeForm;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}