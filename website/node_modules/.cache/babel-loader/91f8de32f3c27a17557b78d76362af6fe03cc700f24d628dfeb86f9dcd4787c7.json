{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\nilsv\\\\Documents\\\\2_TRAVAIL\\\\WEB_DEV\\\\EVAL_ECF\\\\projet\\\\website\\\\src\\\\components\\\\general\\\\FooterSchedule.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react'; // Ajout des imports nécessaires\nimport { scheduleGetWeek } from \"../../serverRelated/ApiRequest\"; // Import de la fonction de récupération des horaires \n\n// Fonction hypothétique getCurrentDate, à remplacer par votre implémentation réelle\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst getCurrentDate = () => {\n  const now = new Date();\n  return {\n    year: now.getFullYear()\n  };\n};\nexport const FooterSchedule = () => {\n  _s();\n  const [schedule, setSchedule] = useState([]); // Ajout d'un état pour stocker les données de l'horaire\n\n  useEffect(() => {\n    const fetchData = async () => {\n      const currentDate = getCurrentDate();\n      console.log(\"currentDate\", currentDate);\n      try {\n        const year = currentDate.year;\n        const weekStart = currentDate.weekStart;\n\n        // Assurez-vous que les fonctions renvoient directement un tableau ou extrayez le tableau comme nécessaire\n        const daysResponse = await scheduleGetWeek(year, weekStart, 1);\n        console.log(\"fetched schedule get week\", daysResponse);\n        setSchedule(daysResponse); // Stockage des données de l'horaire dans l'état\n      } catch (error) {\n        console.error(\"Erreur lors de la récupération des horaires:\", error);\n      }\n    };\n    fetchData();\n  }, []);\n\n  // Affichage des données de l'horaire dans l'UI\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: schedule.length > 0 ? /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: schedule.map((day, index) => /*#__PURE__*/_jsxDEV(\"li\", {}, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 13\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Aucun horaire disponible\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 9\n    }, this) // Message si l'horaire est vide\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 38,\n    columnNumber: 5\n  }, this);\n};\n_s(FooterSchedule, \"ufj6drX7OuS1FJ8vycY2bacy/To=\");\n_c = FooterSchedule;\nexport default FooterSchedule;\nvar _c;\n$RefreshReg$(_c, \"FooterSchedule\");","map":{"version":3,"names":["React","useEffect","useState","scheduleGetWeek","jsxDEV","_jsxDEV","getCurrentDate","now","Date","year","getFullYear","FooterSchedule","_s","schedule","setSchedule","fetchData","currentDate","console","log","weekStart","daysResponse","error","children","length","map","day","index","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/nilsv/Documents/2_TRAVAIL/WEB_DEV/EVAL_ECF/projet/website/src/components/general/FooterSchedule.js"],"sourcesContent":["import React, { useEffect, useState } from 'react'; // Ajout des imports nécessaires\r\nimport { scheduleGetWeek } from \"../../serverRelated/ApiRequest\"; // Import de la fonction de récupération des horaires \r\n\r\n// Fonction hypothétique getCurrentDate, à remplacer par votre implémentation réelle\r\nconst getCurrentDate = () => {\r\n  const now = new Date();\r\n  return {\r\n    year: now.getFullYear(),\r\n  };\r\n};\r\n\r\nexport const FooterSchedule = () => {\r\n  const [schedule, setSchedule] = useState([]); // Ajout d'un état pour stocker les données de l'horaire\r\n\r\n  useEffect(() => {\r\n    const fetchData = async () => {\r\n      const currentDate = getCurrentDate();\r\n      console.log(\"currentDate\", currentDate);\r\n      try {\r\n      const year = currentDate.year;\r\n      const weekStart = currentDate.weekStart;\r\n    \r\n\r\n        // Assurez-vous que les fonctions renvoient directement un tableau ou extrayez le tableau comme nécessaire\r\n        const daysResponse = await scheduleGetWeek(year, weekStart, 1);\r\n        console.log(\"fetched schedule get week\", daysResponse);\r\n        setSchedule(daysResponse); // Stockage des données de l'horaire dans l'état\r\n      } catch (error) {\r\n        console.error(\"Erreur lors de la récupération des horaires:\", error);\r\n      }\r\n    };\r\n\r\n    fetchData();\r\n  }, []);\r\n\r\n  // Affichage des données de l'horaire dans l'UI\r\n  return (\r\n    <div>\r\n      {schedule.length > 0 ? (\r\n        <ul>\r\n          {schedule.map((day, index) => (\r\n            <li key={index}>{/* Utilisez ici les propriétés de `day` pour afficher les données */}</li>\r\n          ))}\r\n        </ul>\r\n      ) : (\r\n        <p>Aucun horaire disponible</p> // Message si l'horaire est vide\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default FooterSchedule;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO,CAAC,CAAC;AACpD,SAASC,eAAe,QAAQ,gCAAgC,CAAC,CAAC;;AAElE;AAAA,SAAAC,MAAA,IAAAC,OAAA;AACA,MAAMC,cAAc,GAAGA,CAAA,KAAM;EAC3B,MAAMC,GAAG,GAAG,IAAIC,IAAI,CAAC,CAAC;EACtB,OAAO;IACLC,IAAI,EAAEF,GAAG,CAACG,WAAW,CAAC;EACxB,CAAC;AACH,CAAC;AAED,OAAO,MAAMC,cAAc,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAClC,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGZ,QAAQ,CAAC,EAAE,CAAC,CAAC,CAAC;;EAE9CD,SAAS,CAAC,MAAM;IACd,MAAMc,SAAS,GAAG,MAAAA,CAAA,KAAY;MAC5B,MAAMC,WAAW,GAAGV,cAAc,CAAC,CAAC;MACpCW,OAAO,CAACC,GAAG,CAAC,aAAa,EAAEF,WAAW,CAAC;MACvC,IAAI;QACJ,MAAMP,IAAI,GAAGO,WAAW,CAACP,IAAI;QAC7B,MAAMU,SAAS,GAAGH,WAAW,CAACG,SAAS;;QAGrC;QACA,MAAMC,YAAY,GAAG,MAAMjB,eAAe,CAACM,IAAI,EAAEU,SAAS,EAAE,CAAC,CAAC;QAC9DF,OAAO,CAACC,GAAG,CAAC,2BAA2B,EAAEE,YAAY,CAAC;QACtDN,WAAW,CAACM,YAAY,CAAC,CAAC,CAAC;MAC7B,CAAC,CAAC,OAAOC,KAAK,EAAE;QACdJ,OAAO,CAACI,KAAK,CAAC,8CAA8C,EAAEA,KAAK,CAAC;MACtE;IACF,CAAC;IAEDN,SAAS,CAAC,CAAC;EACb,CAAC,EAAE,EAAE,CAAC;;EAEN;EACA,oBACEV,OAAA;IAAAiB,QAAA,EACGT,QAAQ,CAACU,MAAM,GAAG,CAAC,gBAClBlB,OAAA;MAAAiB,QAAA,EACGT,QAAQ,CAACW,GAAG,CAAC,CAACC,GAAG,EAAEC,KAAK,kBACvBrB,OAAA,WAASqB,KAAK;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAA4E,CAC3F;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACA,CAAC,gBAELzB,OAAA;MAAAiB,QAAA,EAAG;IAAwB;MAAAK,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAG,CAAC,CAAC;EACjC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACE,CAAC;AAEV,CAAC;AAAClB,EAAA,CAtCWD,cAAc;AAAAoB,EAAA,GAAdpB,cAAc;AAwC3B,eAAeA,cAAc;AAAC,IAAAoB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}