{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\nilsv\\\\Documents\\\\2_TRAVAIL\\\\WEB_DEV\\\\EVAL_ECF\\\\projet\\\\website\\\\src\\\\components\\\\vehicleRelated\\\\vehicleForm\\\\keyInfosForm\\\\VehicleConditionForm.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport { Form } from \"react-bootstrap\";\nimport Select from \"react-select\";\nimport { capitalizeFirstLetter } from \"../../../../functions/capitalizeFirstLetter\";\nimport { fetchVehicleConditions } from \"../../../../serverRelated/ApiRequest\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport const VehicleConditionForm = ({\n  onConditionChange\n}) => {\n  _s();\n  const [selectedCondition, setSelectedCondition] = useState(null);\n  const [conditions, setConditions] = useState([]);\n  useEffect(() => {\n    const handleFetchVehicleConditions = async () => {\n      try {\n        const data = await fetchVehicleConditions();\n        const transformedConditions = data.map(condition => ({\n          value: condition.id.toString(),\n          label: capitalizeFirstLetter(condition.name)\n        }));\n        setConditions(transformedConditions);\n      } catch (error) {\n        console.error(\"Error fetching conditions:\", error);\n      }\n    };\n    handleFetchVehicleConditions();\n  }, []);\n  const handleConditionChange = selectedOption => {\n    setSelectedCondition(selectedOption);\n    if (onConditionChange) {\n      onConditionChange(selectedOption.value);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(Select, {\n      value: selectedCondition,\n      onChange: handleConditionChange,\n      options: conditions,\n      isSearchable: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n};\n_s(VehicleConditionForm, \"YOqljTfjZIUgFH+PzQyA8iBr8+Q=\");\n_c = VehicleConditionForm;\nexport default VehicleConditionForm;\nvar _c;\n$RefreshReg$(_c, \"VehicleConditionForm\");","map":{"version":3,"names":["React","useEffect","useState","Form","Select","capitalizeFirstLetter","fetchVehicleConditions","jsxDEV","_jsxDEV","Fragment","_Fragment","VehicleConditionForm","onConditionChange","_s","selectedCondition","setSelectedCondition","conditions","setConditions","handleFetchVehicleConditions","data","transformedConditions","map","condition","value","id","toString","label","name","error","console","handleConditionChange","selectedOption","children","onChange","options","isSearchable","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/nilsv/Documents/2_TRAVAIL/WEB_DEV/EVAL_ECF/projet/website/src/components/vehicleRelated/vehicleForm/keyInfosForm/VehicleConditionForm.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport { Form } from \"react-bootstrap\";\r\nimport Select from \"react-select\";\r\nimport { capitalizeFirstLetter } from \"../../../../functions/capitalizeFirstLetter\";\r\nimport { fetchVehicleConditions } from \"../../../../serverRelated/ApiRequest\";\r\n\r\nexport const VehicleConditionForm = ({ onConditionChange }) => {\r\n  const [selectedCondition, setSelectedCondition] = useState(null);\r\n  const [conditions, setConditions] = useState([]);\r\n\r\n  useEffect(() => {\r\n    const handleFetchVehicleConditions = async () => {\r\n      try {\r\n        const data = await fetchVehicleConditions();\r\n\r\n        const transformedConditions = data.map((condition) => ({\r\n          value: condition.id.toString(),\r\n          label: capitalizeFirstLetter(condition.name),\r\n        }));\r\n\r\n        setConditions(transformedConditions);\r\n      } catch (error) {\r\n        console.error(\"Error fetching conditions:\", error);\r\n      }\r\n    };\r\n\r\n    handleFetchVehicleConditions();\r\n  }, []);\r\n\r\n  const handleConditionChange = (selectedOption) => {\r\n    setSelectedCondition(selectedOption);\r\n    if (onConditionChange) {\r\n      onConditionChange(selectedOption.value);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Select\r\n        value={selectedCondition}\r\n        onChange={handleConditionChange}\r\n        options={conditions}\r\n        isSearchable\r\n      />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default VehicleConditionForm;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,SAASC,IAAI,QAAQ,iBAAiB;AACtC,OAAOC,MAAM,MAAM,cAAc;AACjC,SAASC,qBAAqB,QAAQ,6CAA6C;AACnF,SAASC,sBAAsB,QAAQ,sCAAsC;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAAA,SAAAC,QAAA,IAAAC,SAAA;AAE9E,OAAO,MAAMC,oBAAoB,GAAGA,CAAC;EAAEC;AAAkB,CAAC,KAAK;EAAAC,EAAA;EAC7D,MAAM,CAACC,iBAAiB,EAAEC,oBAAoB,CAAC,GAAGb,QAAQ,CAAC,IAAI,CAAC;EAChE,MAAM,CAACc,UAAU,EAAEC,aAAa,CAAC,GAAGf,QAAQ,CAAC,EAAE,CAAC;EAEhDD,SAAS,CAAC,MAAM;IACd,MAAMiB,4BAA4B,GAAG,MAAAA,CAAA,KAAY;MAC/C,IAAI;QACF,MAAMC,IAAI,GAAG,MAAMb,sBAAsB,CAAC,CAAC;QAE3C,MAAMc,qBAAqB,GAAGD,IAAI,CAACE,GAAG,CAAEC,SAAS,KAAM;UACrDC,KAAK,EAAED,SAAS,CAACE,EAAE,CAACC,QAAQ,CAAC,CAAC;UAC9BC,KAAK,EAAErB,qBAAqB,CAACiB,SAAS,CAACK,IAAI;QAC7C,CAAC,CAAC,CAAC;QAEHV,aAAa,CAACG,qBAAqB,CAAC;MACtC,CAAC,CAAC,OAAOQ,KAAK,EAAE;QACdC,OAAO,CAACD,KAAK,CAAC,4BAA4B,EAAEA,KAAK,CAAC;MACpD;IACF,CAAC;IAEDV,4BAA4B,CAAC,CAAC;EAChC,CAAC,EAAE,EAAE,CAAC;EAEN,MAAMY,qBAAqB,GAAIC,cAAc,IAAK;IAChDhB,oBAAoB,CAACgB,cAAc,CAAC;IACpC,IAAInB,iBAAiB,EAAE;MACrBA,iBAAiB,CAACmB,cAAc,CAACR,KAAK,CAAC;IACzC;EACF,CAAC;EAED,oBACEf,OAAA,CAAAE,SAAA;IAAAsB,QAAA,eACExB,OAAA,CAACJ,MAAM;MACLmB,KAAK,EAAET,iBAAkB;MACzBmB,QAAQ,EAAEH,qBAAsB;MAChCI,OAAO,EAAElB,UAAW;MACpBmB,YAAY;IAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACb;EAAC,gBACF,CAAC;AAEP,CAAC;AAAC1B,EAAA,CAxCWF,oBAAoB;AAAA6B,EAAA,GAApB7B,oBAAoB;AA0CjC,eAAeA,oBAAoB;AAAC,IAAA6B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}